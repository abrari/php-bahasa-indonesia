{
	"globals": {
		"prefix": "globals",
		"body": "\\$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}$0",
		"description": "$GLOBALS['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"$_": {
		"prefix": "$_",
		"body": "\\$_COOKIE['${1:variable}']",
		"description": "COOKIE['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"$_1": {
		"prefix": "$_",
		"body": "\\$_ENV['${1:variable}']",
		"description": "ENV['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"$_2": {
		"prefix": "$_",
		"body": "\\$_FILES['${1:variable}']",
		"description": "FILES['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"$_3": {
		"prefix": "$_",
		"body": "\\$_GET['${1:variable}']",
		"description": "GET['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"$_4": {
		"prefix": "$_",
		"body": "\\$_POST['${1:variable}']",
		"description": "POST['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"$_5": {
		"prefix": "$_",
		"body": "\\$_REQUEST['${1:variable}']",
		"description": "REQUEST['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"$_6": {
		"prefix": "$_",
		"body": "\\$_SERVER['${1:variable}']",
		"description": "SERVER['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"$_7": {
		"prefix": "$_",
		"body": "\\$_SESSION['${1:variable}']",
		"description": "SESSION['…']",
		"scope": "source.phpid - string.quoted.single - comment"
	},
	"kon": {
		"prefix": "kon",
		"body": "fungsi publik __konstruktor(${1:\\$${2:foo}${3: = ${4:null}}})\n{\n\t${2/.+/$ini->$0 = \\$$0;/}$0\n}",
		"description": "fungsi konstruktor",
		"scope": "source.phpid - string - comment"
	},
	"/**": {
		"prefix": "/**",
		"body": "/**\n * $0\n */",
		"description": "Start Docblock",
		"scope": "source.phpid comment"
	},
	"kelas": {
		"prefix": "kelas",
		"body": "/**\n* $1\n*/\nkelas ${2:NamaKelas}${3: turunan ${4:KelasLain}}\n{\n\t$5\n\tfungsi publik ${6:__konstruktor}(${7:parameter})\n\t{\n\t\t${0:# kode...}\n\t}\n}\n",
		"description": "kelas …",
		"scope": "source.phpid - string - comment"
	},
	"def": {
		"prefix": "def",
		"body": "definisikan('$1', ${2:'$3'});\n$0",
		"description": "definisikan(…, …)",
		"scope": "source.phpid - string - comment"
	},
	"def?": {
		"prefix": "def?",
		"body": "$1terdefinisi('$2')$0",
		"description": "terdefinisi?(…)",
		"scope": "source.phpid - string - comment"
	},
	"kerjakan": {
		"prefix": "kerjakan",
		"body": "kerjakan {\n\t${0:# kode...}\n} selama (${1:$a <= 10});",
		"description": "kerjakan … selama …",
		"scope": "source.phpid - string - comment"
	},
	"tampil": {
		"prefix": "tampil",
		"body": "tampil \"${1:string}\"${0};",
		"description": "tampil \"…\"",
		"scope": "source.phpid - string - comment"
	},
	"selainnya jika": {
		"prefix": "selainnya jika",
		"body": "selainnya jika (${1:kondisi}) {\n\t${0:# kode...}\n}",
		"description": "selainnya jika …",
		"scope": "source.phpid - string - comment"
	},
	"untuk": {
		"prefix": "untuk",
		"body": "untuk (\\$${1:i}=${2:0}; \\$${1:i} < $3; \\$${1:i}++) { \n\t${0:# kode...}\n}",
		"description": "untuk …",
		"scope": "source.phpid - string - comment"
	},
	"untuksetiap": {
		"prefix": "untuksetiap",
		"body": "untuksetiap (\\$${1:variable} sebagai \\$${2:key}${3: => \\$${4:value}}) {\n\t${0:# kode...}\n}",
		"description": "untuksetiap …",
		"scope": "source.phpid - string - comment"
	},
	"untuksetiap dalam": {
		"prefix": "untuksetiap dalam",
		"body": "untuksetiap (\\$${2:key}${3: => \\$${4:value}} dalam \\$${1:variable}) {\n\t${0:# kode...}\n}",
		"description": "untuksetiap … dalam …",
		"scope": "source.phpid - string - comment"
	},
	"fun": {
		"prefix": "fun",
		"body": "fungsi ${1:publik} ${2:NamaFungsi}(${3:\\$${4:parameter}${5:=''}})\n{\n\t${0:# kode...}\n}",
		"description": "fungsi …",
		"scope": "source.phpid - string - comment"
	},
	"jika selainnya": {
		"prefix": "jika selainnya",
		"body": "jika (${1:kondisi}) {\n\t${2:# kode...}\n} selainnya {\n\t${3:# kode...}\n}\n$0",
		"description": "jika … selainnya …",
		"scope": "source.phpid - string - comment"
	},
	"jika": {
		"prefix": "jika",
		"body": "jika (${1:kondisi}) {\n\t${0:# kode...}\n}",
		"description": "jika …",
		"scope": "source.phpid - string - comment"
	},
	"if?": {
		"prefix": "if?",
		"body": "\\$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b} ;",
		"description": "$… = ( … ) ? … : …",
		"scope": "source.phpid - string - comment"
	},
	"sertakan": {
		"prefix": "sertakan",
		"body": "sertakan '${1:file}';$0",
		"description": "sertakan …",
		"scope": "source.phpid - string - comment"
	},
	"sertakan1": {
		"prefix": "sertakan1",
		"body": "sertakan_satu_kali '${1:file}';$0",
		"description": "sertakan_satu_kali …",
		"scope": "source.phpid - string - comment"
	},
	"larik": {
		"prefix": "larik",
		"body": "\\$${1:var} = larik('$2' => $3${4:,} $0);",
		"description": "$… = larik (…)",
		"scope": "source.phpid - variable.other.phpid"
	},
	"php": {
		"prefix": "php",
		"body": "<?${TM_PHP_OPEN_TAG:phpid} $0 ?>",
		"description": "<?phpid … ?>",
		"scope": "embedding.phpid text.html - source.phpid"
	},
	"butuh": {
		"prefix": "butuh",
		"body": "butuh '${1:file}';$0",
		"description": "butuh …",
		"scope": "source.phpid - string - comment"
	},
	"butuh1": {
		"prefix": "butuh1",
		"body": "butuh_satu_kali '${1:file}';$0",
		"description": "butuh_satu_kali …",
		"scope": "source.phpid - string - comment"
	},
	"kembali": {
		"prefix": "kembali",
		"body": "kembalikan$1;$0",
		"description": "kembalikan",
		"scope": "source.phpid - string - comment"
	},
	"kembali0": {
		"prefix": "kembali0",
		"body": "kembalikan salah;$0",
		"description": "kembalikan salah",
		"scope": "source.phpid - string - comment"
	},
	"kembali1": {
		"prefix": "kembali1",
		"body": "kembalikan benar;$0",
		"description": "kembalikan benar",
		"scope": "source.phpid - string - comment"
	},
	"kalau": {
		"prefix": "kalau",
		"body": "kalau '${1:variabel}':\n\t${0:# kode...}\n\tberhenti;",
		"description": "kalau …",
		"scope": "source.phpid - string - comment"
	},
	"pilihan": {
		"prefix": "pilihan",
		"body": "pilihan (${1:variabel}) {\n\tkalau '${2:nilai}':\n\t\t${3:# kode...}\n\t\tberhenti;\n\t$0\n\tdefault:\n\t\t${4:# kode...}\n\t\tberhenti;\n}",
		"description": "pilihan …",
		"scope": "source.phpid - string - comment"
	},
	"lempar": {
		"prefix": "lempar",
		"body": "lempar $1Exception baru (${2:\"${3:Error Processing Request}\"}${4:, ${5:1}});\n$0",
		"description": "lempar Exception",
		"scope": "source.phpid - string - comment"
	},
	"coba": {
		"prefix": "coba",
		"body": "${TM_SELECTED_TEXT/([\\t ]*).*/$1/m}coba {\n\t${3:${TM_SELECTED_TEXT/(\\A.*)|(.+)|\\n\\z/(?1:$0:(?2:\\t$0))/g}}\n${TM_SELECTED_TEXT/([\\t ]*).*/$1/m}} tangkap (${1:Exception} ${2:\\$e}) {\n${TM_SELECTED_TEXT/([\\t ]*).*/$1/m}\t$0\n${TM_SELECTED_TEXT/([\\t ]*).*/$1/m}}",
		"description": "coba { … } tangkap (…) { … }",
		"scope": "source.phpid - string - comment"
	},
	"selama": {
		"prefix": "selama",
		"body": "selama (${1:$a <= 10}) {\n\t${0:# kode...}\n}",
		"description": "selama …",
		"scope": "source.phpid - string - comment"
	},
    "abs": {
        "prefix": "abs",
        "body": "abs(${1:number})$0"
    },
    "acos": {
        "prefix": "acos",
        "body": "acos(${1:arg})$0"
    },
    "acosh": {
        "prefix": "acosh",
        "body": "acosh(${1:arg})$0"
    },
    "addcslashes": {
        "prefix": "addcslashes",
        "body": "addcslashes(${1:str}, ${2:charlist})$0"
    },
    "addslashes": {
        "prefix": "addslashes",
        "body": "addslashes(${1:str})$0"
    },
    "aggregate": {
        "prefix": "aggregate",
        "body": "aggregate(${1:object}, ${2:class_name})$0"
    },
    "aggregate_info": {
        "prefix": "aggregate_info",
        "body": "aggregate_info(${1:object})$0"
    },
    "aggregate_methods": {
        "prefix": "aggregate_methods",
        "body": "aggregate_methods(${1:object}, ${2:class_name})$0"
    },
    "aggregate_methods_by_list": {
        "prefix": "aggregate_methods_by_list",
        "body": "aggregate_methods_by_list(${1:object}, ${2:class_name}, ${3:methods_list})$0"
    },
    "aggregate_methods_by_regexp": {
        "prefix": "aggregate_methods_by_regexp",
        "body": "aggregate_methods_by_regexp(${1:object}, ${2:class_name}, ${3:regexp})$0"
    },
    "aggregate_properties": {
        "prefix": "aggregate_properties",
        "body": "aggregate_properties(${1:object}, ${2:class_name})$0"
    },
    "aggregate_properties_by_list": {
        "prefix": "aggregate_properties_by_list",
        "body": "aggregate_properties_by_list(${1:object}, ${2:class_name}, ${3:properties_list})$0"
    },
    "aggregate_properties_by_regexp": {
        "prefix": "aggregate_properties_by_regexp",
        "body": "aggregate_properties_by_regexp(${1:object}, ${2:class_name}, ${3:regexp})$0"
    },
    "aggregation_info": {
        "prefix": "aggregation_info",
        "body": "aggregation_info()$0"
    },
    "apache_child_terminate": {
        "prefix": "apache_child_terminate",
        "body": "apache_child_terminate()$0"
    },
    "apache_get_modules": {
        "prefix": "apache_get_modules",
        "body": "apache_get_modules()$0"
    },
    "apache_get_version": {
        "prefix": "apache_get_version",
        "body": "apache_get_version()$0"
    },
    "apache_getenv": {
        "prefix": "apache_getenv",
        "body": "apache_getenv(${1:variable})$0"
    },
    "apache_lookup_uri": {
        "prefix": "apache_lookup_uri",
        "body": "apache_lookup_uri(${1:filename})$0"
    },
    "apache_note": {
        "prefix": "apache_note",
        "body": "apache_note(${1:note_name})$0"
    },
    "apache_request_headers": {
        "prefix": "apache_request_headers",
        "body": "apache_request_headers()$0"
    },
    "apache_reset_timeout": {
        "prefix": "apache_reset_timeout",
        "body": "apache_reset_timeout()$0"
    },
    "apache_response_headers": {
        "prefix": "apache_response_headers",
        "body": "apache_response_headers()$0"
    },
    "apache_setenv": {
        "prefix": "apache_setenv",
        "body": "apache_setenv(${1:variable}, ${2:value})$0"
    },
    "apc_add": {
        "prefix": "apc_add",
        "body": "apc_add(${1:key})$0"
    },
    "apc_bin_dump": {
        "prefix": "apc_bin_dump",
        "body": "apc_bin_dump()$0"
    },
    "apc_bin_dumpfile": {
        "prefix": "apc_bin_dumpfile",
        "body": "apc_bin_dumpfile(${1:files}, ${2:user_vars}, ${3:filename})$0"
    },
    "apc_bin_load": {
        "prefix": "apc_bin_load",
        "body": "apc_bin_load(${1:data})$0"
    },
    "apc_bin_loadfile": {
        "prefix": "apc_bin_loadfile",
        "body": "apc_bin_loadfile(${1:filename})$0"
    },
    "apc_cache_info": {
        "prefix": "apc_cache_info",
        "body": "apc_cache_info()$0"
    },
    "apc_cas": {
        "prefix": "apc_cas",
        "body": "apc_cas(${1:key}, ${2:old}, ${3:new})$0"
    },
    "apc_clear_cache": {
        "prefix": "apc_clear_cache",
        "body": "apc_clear_cache()$0"
    },
    "apc_compile_file": {
        "prefix": "apc_compile_file",
        "body": "apc_compile_file(${1:filename})$0"
    },
    "apc_dec": {
        "prefix": "apc_dec",
        "body": "apc_dec(${1:key})$0"
    },
    "apc_define_constants": {
        "prefix": "apc_define_constants",
        "body": "apc_define_constants(${1:key}, ${2:constants})$0"
    },
    "apc_delete": {
        "prefix": "apc_delete",
        "body": "apc_delete(${1:key})$0"
    },
    "apc_delete_file": {
        "prefix": "apc_delete_file",
        "body": "apc_delete_file(${1:keys})$0"
    },
    "apc_exists": {
        "prefix": "apc_exists",
        "body": "apc_exists(${1:keys})$0"
    },
    "apc_fetch": {
        "prefix": "apc_fetch",
        "body": "apc_fetch(${1:key})$0"
    },
    "apc_inc": {
        "prefix": "apc_inc",
        "body": "apc_inc(${1:key})$0"
    },
    "apc_load_constants": {
        "prefix": "apc_load_constants",
        "body": "apc_load_constants(${1:key})$0"
    },
    "apc_sma_info": {
        "prefix": "apc_sma_info",
        "body": "apc_sma_info()$0"
    },
    "apc_store": {
        "prefix": "apc_store",
        "body": "apc_store(${1:key}, ${2:var})$0"
    },
    "apd_breakpoint": {
        "prefix": "apd_breakpoint",
        "body": "apd_breakpoint(${1:debug_level})$0"
    },
    "apd_callstack": {
        "prefix": "apd_callstack",
        "body": "apd_callstack()$0"
    },
    "apd_clunk": {
        "prefix": "apd_clunk",
        "body": "apd_clunk(${1:warning})$0"
    },
    "apd_continue": {
        "prefix": "apd_continue",
        "body": "apd_continue(${1:debug_level})$0"
    },
    "apd_croak": {
        "prefix": "apd_croak",
        "body": "apd_croak(${1:warning})$0"
    },
    "apd_dump_function_table": {
        "prefix": "apd_dump_function_table",
        "body": "apd_dump_function_table()$0"
    },
    "apd_dump_persistent_resources": {
        "prefix": "apd_dump_persistent_resources",
        "body": "apd_dump_persistent_resources()$0"
    },
    "apd_dump_regular_resources": {
        "prefix": "apd_dump_regular_resources",
        "body": "apd_dump_regular_resources()$0"
    },
    "apd_echo": {
        "prefix": "apd_echo",
        "body": "apd_echo(${1:output})$0"
    },
    "apd_get_active_symbols": {
        "prefix": "apd_get_active_symbols",
        "body": "apd_get_active_symbols()$0"
    },
    "apd_set_pprof_trace": {
        "prefix": "apd_set_pprof_trace",
        "body": "apd_set_pprof_trace()$0"
    },
    "apd_set_session": {
        "prefix": "apd_set_session",
        "body": "apd_set_session(${1:debug_level})$0"
    },
    "apd_set_session_trace": {
        "prefix": "apd_set_session_trace",
        "body": "apd_set_session_trace(${1:debug_level})$0"
    },
    "apd_set_session_trace_socket": {
        "prefix": "apd_set_session_trace_socket",
        "body": "apd_set_session_trace_socket(${1:tcp_server}, ${2:socket_type}, ${3:port}, ${4:debug_level})$0"
    },
    "array": {
        "prefix": "array",
        "body": "larik()$0"
    },
    "larik": {
        "prefix": "larik",
        "body": "larik()$0"
    },
    "array_change_key_case": {
        "prefix": "array_change_key_case",
        "body": "array_change_key_case(${1:input})$0"
    },
    "array_chunk": {
        "prefix": "array_chunk",
        "body": "array_chunk(${1:input}, ${2:size})$0"
    },
    "array_column": {
        "prefix": "array_column",
        "body": "array_column(${1:input}, ${2:column_key})$0"
    },
    "array_combine": {
        "prefix": "array_combine",
        "body": "array_combine(${1:keys}, ${2:values})$0"
    },
    "array_count_values": {
        "prefix": "array_count_values",
        "body": "array_count_values(${1:input})$0"
    },
    "array_diff": {
        "prefix": "array_diff",
        "body": "array_diff(${1:array1}, ${2:array2})$0"
    },
    "array_diff_assoc": {
        "prefix": "array_diff_assoc",
        "body": "array_diff_assoc(${1:array1}, ${2:array2})$0"
    },
    "array_diff_key": {
        "prefix": "array_diff_key",
        "body": "array_diff_key(${1:array1}, ${2:array2})$0"
    },
    "array_diff_uassoc": {
        "prefix": "array_diff_uassoc",
        "body": "array_diff_uassoc(${1:array1}, ${2:array2})$0"
    },
    "array_diff_ukey": {
        "prefix": "array_diff_ukey",
        "body": "array_diff_ukey(${1:array1}, ${2:array2})$0"
    },
    "array_fill": {
        "prefix": "array_fill",
        "body": "array_fill(${1:start_index}, ${2:num}, ${3:value})$0"
    },
    "array_fill_keys": {
        "prefix": "array_fill_keys",
        "body": "array_fill_keys(${1:keys}, ${2:value})$0"
    },
    "array_filter": {
        "prefix": "array_filter",
        "body": "array_filter(${1:input})$0"
    },
    "array_flip": {
        "prefix": "array_flip",
        "body": "array_flip(${1:trans})$0"
    },
    "array_intersect": {
        "prefix": "array_intersect",
        "body": "array_intersect(${1:array1}, ${2:array2})$0"
    },
    "array_intersect_assoc": {
        "prefix": "array_intersect_assoc",
        "body": "array_intersect_assoc(${1:array1}, ${2:array2})$0"
    },
    "array_intersect_key": {
        "prefix": "array_intersect_key",
        "body": "array_intersect_key(${1:array1}, ${2:array2})$0"
    },
    "array_intersect_uassoc": {
        "prefix": "array_intersect_uassoc",
        "body": "array_intersect_uassoc(${1:array1}, ${2:array2})$0"
    },
    "array_intersect_ukey": {
        "prefix": "array_intersect_ukey",
        "body": "array_intersect_ukey(${1:array1}, ${2:array2})$0"
    },
    "array_key_exists": {
        "prefix": "array_key_exists",
        "body": "array_key_exists(${1:key}, ${2:array})$0"
    },
    "array_keys": {
        "prefix": "array_keys",
        "body": "array_keys(${1:input})$0"
    },
    "array_map": {
        "prefix": "array_map",
        "body": "array_map(${1:callback}, ${2:arr1})$0"
    },
    "array_merge": {
        "prefix": "array_merge",
        "body": "array_merge(${1:array1})$0"
    },
    "array_merge_recursive": {
        "prefix": "array_merge_recursive",
        "body": "array_merge_recursive(${1:array1})$0"
    },
    "array_multisort": {
        "prefix": "array_multisort",
        "body": "array_multisort(${1:arr})$0"
    },
    "array_pad": {
        "prefix": "array_pad",
        "body": "array_pad(${1:input}, ${2:pad_size}, ${3:pad_value})$0"
    },
    "array_pop": {
        "prefix": "array_pop",
        "body": "array_pop(${1:array})$0"
    },
    "array_product": {
        "prefix": "array_product",
        "body": "array_product(${1:array})$0"
    },
    "array_push": {
        "prefix": "array_push",
        "body": "array_push(${1:array}, ${2:var})$0"
    },
    "array_rand": {
        "prefix": "array_rand",
        "body": "array_rand(${1:input})$0"
    },
    "array_reduce": {
        "prefix": "array_reduce",
        "body": "array_reduce(${1:input}, ${2:function})$0"
    },
    "array_replace": {
        "prefix": "array_replace",
        "body": "array_replace(${1:array}, ${2:array1})$0"
    },
    "array_replace_recursive": {
        "prefix": "array_replace_recursive",
        "body": "array_replace_recursive(${1:array}, ${2:array1})$0"
    },
    "array_reverse": {
        "prefix": "array_reverse",
        "body": "array_reverse(${1:array})$0"
    },
    "array_search": {
        "prefix": "array_search",
        "body": "array_search(${1:needle}, ${2:haystack})$0"
    },
    "array_shift": {
        "prefix": "array_shift",
        "body": "array_shift(${1:array})$0"
    },
    "array_slice": {
        "prefix": "array_slice",
        "body": "array_slice(${1:array}, ${2:offset})$0"
    },
    "array_splice": {
        "prefix": "array_splice",
        "body": "array_splice(${1:input}, ${2:offset})$0"
    },
    "array_sum": {
        "prefix": "array_sum",
        "body": "array_sum(${1:array})$0"
    },
    "array_udiff": {
        "prefix": "array_udiff",
        "body": "array_udiff(${1:array1}, ${2:array2})$0"
    },
    "array_udiff_assoc": {
        "prefix": "array_udiff_assoc",
        "body": "array_udiff_assoc(${1:array1}, ${2:array2})$0"
    },
    "array_udiff_uassoc": {
        "prefix": "array_udiff_uassoc",
        "body": "array_udiff_uassoc(${1:array1}, ${2:array2})$0"
    },
    "array_uintersect": {
        "prefix": "array_uintersect",
        "body": "array_uintersect(${1:array1}, ${2:array2})$0"
    },
    "array_uintersect_assoc": {
        "prefix": "array_uintersect_assoc",
        "body": "array_uintersect_assoc(${1:array1}, ${2:array2})$0"
    },
    "array_uintersect_uassoc": {
        "prefix": "array_uintersect_uassoc",
        "body": "array_uintersect_uassoc(${1:array1}, ${2:array2})$0"
    },
    "array_unique": {
        "prefix": "array_unique",
        "body": "array_unique(${1:array})$0"
    },
    "array_unshift": {
        "prefix": "array_unshift",
        "body": "array_unshift(${1:array}, ${2:var})$0"
    },
    "array_values": {
        "prefix": "array_values",
        "body": "array_values(${1:input})$0"
    },
    "array_walk": {
        "prefix": "array_walk",
        "body": "array_walk(${1:array}, ${2:funcname})$0"
    },
    "array_walk_recursive": {
        "prefix": "array_walk_recursive",
        "body": "array_walk_recursive(${1:input}, ${2:funcname})$0"
    },
    "arsort": {
        "prefix": "arsort",
        "body": "arsort(${1:array})$0"
    },
    "asin": {
        "prefix": "asin",
        "body": "asin(${1:arg})$0"
    },
    "asinh": {
        "prefix": "asinh",
        "body": "asinh(${1:arg})$0"
    },
    "asort": {
        "prefix": "asort",
        "body": "asort(${1:array})$0"
    },
    "assert": {
        "prefix": "assert",
        "body": "assert(${1:assertion})$0"
    },
    "assert_options": {
        "prefix": "assert_options",
        "body": "assert_options(${1:what})$0"
    },
    "atan": {
        "prefix": "atan",
        "body": "atan(${1:arg})$0"
    },
    "atan2": {
        "prefix": "atan2",
        "body": "atan2(${1:y}, ${2:x})$0"
    },
    "atanh": {
        "prefix": "atanh",
        "body": "atanh(${1:arg})$0"
    },
    "base64_decode": {
        "prefix": "base64_decode",
        "body": "base64_decode(${1:data})$0"
    },
    "base64_encode": {
        "prefix": "base64_encode",
        "body": "base64_encode(${1:data})$0"
    },
    "base_convert": {
        "prefix": "base_convert",
        "body": "base_convert(${1:number}, ${2:frombase}, ${3:tobase})$0"
    },
    "basename": {
        "prefix": "basename",
        "body": "basename(${1:path})$0"
    },
    "bbcode_add_element": {
        "prefix": "bbcode_add_element",
        "body": "bbcode_add_element(${1:bbcode_container}, ${2:tag_name}, ${3:tag_rules})$0"
    },
    "bbcode_add_smiley": {
        "prefix": "bbcode_add_smiley",
        "body": "bbcode_add_smiley(${1:bbcode_container}, ${2:smiley}, ${3:replace_by})$0"
    },
    "bbcode_create": {
        "prefix": "bbcode_create",
        "body": "bbcode_create()$0"
    },
    "bbcode_destroy": {
        "prefix": "bbcode_destroy",
        "body": "bbcode_destroy(${1:bbcode_container})$0"
    },
    "bbcode_parse": {
        "prefix": "bbcode_parse",
        "body": "bbcode_parse(${1:bbcode_container}, ${2:to_parse})$0"
    },
    "bbcode_set_arg_parser": {
        "prefix": "bbcode_set_arg_parser",
        "body": "bbcode_set_arg_parser(${1:bbcode_container}, ${2:bbcode_arg_parser})$0"
    },
    "bbcode_set_flags": {
        "prefix": "bbcode_set_flags",
        "body": "bbcode_set_flags(${1:bbcode_container}, ${2:flags})$0"
    },
    "bcadd": {
        "prefix": "bcadd",
        "body": "bcadd(${1:left_operand}, ${2:right_operand})$0"
    },
    "bccomp": {
        "prefix": "bccomp",
        "body": "bccomp(${1:left_operand}, ${2:right_operand})$0"
    },
    "bcdiv": {
        "prefix": "bcdiv",
        "body": "bcdiv(${1:left_operand}, ${2:right_operand})$0"
    },
    "bcmod": {
        "prefix": "bcmod",
        "body": "bcmod(${1:left_operand}, ${2:modulus})$0"
    },
    "bcmul": {
        "prefix": "bcmul",
        "body": "bcmul(${1:left_operand}, ${2:right_operand})$0"
    },
    "bcompiler_load": {
        "prefix": "bcompiler_load",
        "body": "bcompiler_load(${1:filename})$0"
    },
    "bcompiler_load_exe": {
        "prefix": "bcompiler_load_exe",
        "body": "bcompiler_load_exe(${1:filename})$0"
    },
    "bcompiler_parse_class": {
        "prefix": "bcompiler_parse_class",
        "body": "bcompiler_parse_class(${1:class}, ${2:callback})$0"
    },
    "bcompiler_read": {
        "prefix": "bcompiler_read",
        "body": "bcompiler_read(${1:filehandle})$0"
    },
    "bcompiler_write_class": {
        "prefix": "bcompiler_write_class",
        "body": "bcompiler_write_class(${1:filehandle}, ${2:className})$0"
    },
    "bcompiler_write_constant": {
        "prefix": "bcompiler_write_constant",
        "body": "bcompiler_write_constant(${1:filehandle}, ${2:constantName})$0"
    },
    "bcompiler_write_exe_footer": {
        "prefix": "bcompiler_write_exe_footer",
        "body": "bcompiler_write_exe_footer(${1:filehandle}, ${2:startpos})$0"
    },
    "bcompiler_write_file": {
        "prefix": "bcompiler_write_file",
        "body": "bcompiler_write_file(${1:filehandle}, ${2:filename})$0"
    },
    "bcompiler_write_footer": {
        "prefix": "bcompiler_write_footer",
        "body": "bcompiler_write_footer(${1:filehandle})$0"
    },
    "bcompiler_write_function": {
        "prefix": "bcompiler_write_function",
        "body": "bcompiler_write_function(${1:filehandle}, ${2:functionName})$0"
    },
    "bcompiler_write_functions_from_file": {
        "prefix": "bcompiler_write_functions_from_file",
        "body": "bcompiler_write_functions_from_file(${1:filehandle}, ${2:fileName})$0"
    },
    "bcompiler_write_header": {
        "prefix": "bcompiler_write_header",
        "body": "bcompiler_write_header(${1:filehandle})$0"
    },
    "bcompiler_write_included_filename": {
        "prefix": "bcompiler_write_included_filename",
        "body": "bcompiler_write_included_filename(${1:filehandle}, ${2:filename})$0"
    },
    "bcpow": {
        "prefix": "bcpow",
        "body": "bcpow(${1:left_operand}, ${2:right_operand})$0"
    },
    "bcpowmod": {
        "prefix": "bcpowmod",
        "body": "bcpowmod(${1:left_operand}, ${2:right_operand}, ${3:modulus})$0"
    },
    "bcscale": {
        "prefix": "bcscale",
        "body": "bcscale(${1:scale})$0"
    },
    "bcsqrt": {
        "prefix": "bcsqrt",
        "body": "bcsqrt(${1:operand})$0"
    },
    "bcsub": {
        "prefix": "bcsub",
        "body": "bcsub(${1:left_operand}, ${2:right_operand})$0"
    },
    "bin2hex": {
        "prefix": "bin2hex",
        "body": "bin2hex(${1:str})$0"
    },
    "bind_textdomain_codeset": {
        "prefix": "bind_textdomain_codeset",
        "body": "bind_textdomain_codeset(${1:domain}, ${2:codeset})$0"
    },
    "bindec": {
        "prefix": "bindec",
        "body": "bindec(${1:binary_string})$0"
    },
    "bindtextdomain": {
        "prefix": "bindtextdomain",
        "body": "bindtextdomain(${1:domain}, ${2:directory})$0"
    },
    "boolval": {
        "prefix": "boolval",
        "body": "boolval(${1:var})$0"
    },
    "bson_decode": {
        "prefix": "bson_decode",
        "body": "bson_decode(${1:bson})$0"
    },
    "bson_encode": {
        "prefix": "bson_encode",
        "body": "bson_encode(${1:anything})$0"
    },
    "bzclose": {
        "prefix": "bzclose",
        "body": "bzclose(${1:bz})$0"
    },
    "bzcompress": {
        "prefix": "bzcompress",
        "body": "bzcompress(${1:source}, ${2:blocksize}, ${3:workfactor})$0"
    },
    "bzdecompress": {
        "prefix": "bzdecompress",
        "body": "bzdecompress(${1:source})$0"
    },
    "bzerrno": {
        "prefix": "bzerrno",
        "body": "bzerrno(${1:bz})$0"
    },
    "bzerror": {
        "prefix": "bzerror",
        "body": "bzerror(${1:bz})$0"
    },
    "bzerrstr": {
        "prefix": "bzerrstr",
        "body": "bzerrstr(${1:bz})$0"
    },
    "bzflush": {
        "prefix": "bzflush",
        "body": "bzflush(${1:bz})$0"
    },
    "bzopen": {
        "prefix": "bzopen",
        "body": "bzopen(${1:filename}, ${2:mode})$0"
    },
    "bzread": {
        "prefix": "bzread",
        "body": "bzread(${1:bz})$0"
    },
    "bzwrite": {
        "prefix": "bzwrite",
        "body": "bzwrite(${1:bz}, ${2:data})$0"
    },
    "cairo_create": {
        "prefix": "cairo_create",
        "body": "cairo_create(${1:surface})$0"
    },
    "cairo_font_face_get_type": {
        "prefix": "cairo_font_face_get_type",
        "body": "cairo_font_face_get_type(${1:fontface})$0"
    },
    "cairo_font_face_status": {
        "prefix": "cairo_font_face_status",
        "body": "cairo_font_face_status(${1:fontface})$0"
    },
    "cairo_font_options_create": {
        "prefix": "cairo_font_options_create",
        "body": "cairo_font_options_create()$0"
    },
    "cairo_font_options_equal": {
        "prefix": "cairo_font_options_equal",
        "body": "cairo_font_options_equal(${1:options}, ${2:other})$0"
    },
    "cairo_font_options_get_antialias": {
        "prefix": "cairo_font_options_get_antialias",
        "body": "cairo_font_options_get_antialias(${1:options})$0"
    },
    "cairo_font_options_get_hint_metrics": {
        "prefix": "cairo_font_options_get_hint_metrics",
        "body": "cairo_font_options_get_hint_metrics(${1:options})$0"
    },
    "cairo_font_options_get_hint_style": {
        "prefix": "cairo_font_options_get_hint_style",
        "body": "cairo_font_options_get_hint_style(${1:options})$0"
    },
    "cairo_font_options_get_subpixel_order": {
        "prefix": "cairo_font_options_get_subpixel_order",
        "body": "cairo_font_options_get_subpixel_order(${1:options})$0"
    },
    "cairo_font_options_hash": {
        "prefix": "cairo_font_options_hash",
        "body": "cairo_font_options_hash(${1:options})$0"
    },
    "cairo_font_options_merge": {
        "prefix": "cairo_font_options_merge",
        "body": "cairo_font_options_merge(${1:options}, ${2:other})$0"
    },
    "cairo_font_options_set_antialias": {
        "prefix": "cairo_font_options_set_antialias",
        "body": "cairo_font_options_set_antialias(${1:options}, ${2:antialias})$0"
    },
    "cairo_font_options_set_hint_metrics": {
        "prefix": "cairo_font_options_set_hint_metrics",
        "body": "cairo_font_options_set_hint_metrics(${1:options}, ${2:hint_metrics})$0"
    },
    "cairo_font_options_set_hint_style": {
        "prefix": "cairo_font_options_set_hint_style",
        "body": "cairo_font_options_set_hint_style(${1:options}, ${2:hint_style})$0"
    },
    "cairo_font_options_set_subpixel_order": {
        "prefix": "cairo_font_options_set_subpixel_order",
        "body": "cairo_font_options_set_subpixel_order(${1:options}, ${2:subpixel_order})$0"
    },
    "cairo_font_options_status": {
        "prefix": "cairo_font_options_status",
        "body": "cairo_font_options_status(${1:options})$0"
    },
    "cairo_format_stride_for_width": {
        "prefix": "cairo_format_stride_for_width",
        "body": "cairo_format_stride_for_width(${1:format}, ${2:width})$0"
    },
    "cairo_image_surface_create": {
        "prefix": "cairo_image_surface_create",
        "body": "cairo_image_surface_create(${1:format}, ${2:width}, ${3:height})$0"
    },
    "cairo_image_surface_create_for_data": {
        "prefix": "cairo_image_surface_create_for_data",
        "body": "cairo_image_surface_create_for_data(${1:data}, ${2:format}, ${3:width}, ${4:height})$0"
    },
    "cairo_image_surface_create_from_png": {
        "prefix": "cairo_image_surface_create_from_png",
        "body": "cairo_image_surface_create_from_png(${1:file})$0"
    },
    "cairo_image_surface_get_data": {
        "prefix": "cairo_image_surface_get_data",
        "body": "cairo_image_surface_get_data(${1:surface})$0"
    },
    "cairo_image_surface_get_format": {
        "prefix": "cairo_image_surface_get_format",
        "body": "cairo_image_surface_get_format(${1:surface})$0"
    },
    "cairo_image_surface_get_height": {
        "prefix": "cairo_image_surface_get_height",
        "body": "cairo_image_surface_get_height(${1:surface})$0"
    },
    "cairo_image_surface_get_stride": {
        "prefix": "cairo_image_surface_get_stride",
        "body": "cairo_image_surface_get_stride(${1:surface})$0"
    },
    "cairo_image_surface_get_width": {
        "prefix": "cairo_image_surface_get_width",
        "body": "cairo_image_surface_get_width(${1:surface})$0"
    },
    "cairo_matrix_create_scale": {
        "prefix": "cairo_matrix_create_scale",
        "body": "cairo_matrix_create_scale()$0"
    },
    "cairo_matrix_create_translate": {
        "prefix": "cairo_matrix_create_translate",
        "body": "cairo_matrix_create_translate()$0"
    },
    "cairo_matrix_invert": {
        "prefix": "cairo_matrix_invert",
        "body": "cairo_matrix_invert(${1:matrix})$0"
    },
    "cairo_matrix_multiply": {
        "prefix": "cairo_matrix_multiply",
        "body": "cairo_matrix_multiply(${1:matrix1}, ${2:matrix2})$0"
    },
    "cairo_matrix_rotate": {
        "prefix": "cairo_matrix_rotate",
        "body": "cairo_matrix_rotate(${1:matrix}, ${2:radians})$0"
    },
    "cairo_matrix_transform_distance": {
        "prefix": "cairo_matrix_transform_distance",
        "body": "cairo_matrix_transform_distance(${1:matrix}, ${2:dx}, ${3:dy})$0"
    },
    "cairo_matrix_transform_point": {
        "prefix": "cairo_matrix_transform_point",
        "body": "cairo_matrix_transform_point(${1:matrix}, ${2:dx}, ${3:dy})$0"
    },
    "cairo_matrix_translate": {
        "prefix": "cairo_matrix_translate",
        "body": "cairo_matrix_translate(${1:matrix}, ${2:tx}, ${3:ty})$0"
    },
    "cairo_pattern_add_color_stop_rgb": {
        "prefix": "cairo_pattern_add_color_stop_rgb",
        "body": "cairo_pattern_add_color_stop_rgb(${1:pattern}, ${2:offset}, ${3:red}, ${4:green}, ${5:blue})$0"
    },
    "cairo_pattern_add_color_stop_rgba": {
        "prefix": "cairo_pattern_add_color_stop_rgba",
        "body": "cairo_pattern_add_color_stop_rgba(${1:pattern}, ${2:offset}, ${3:red}, ${4:green}, ${5:blue}, ${6:alpha})$0"
    },
    "cairo_pattern_create_for_surface": {
        "prefix": "cairo_pattern_create_for_surface",
        "body": "cairo_pattern_create_for_surface(${1:surface})$0"
    },
    "cairo_pattern_create_linear": {
        "prefix": "cairo_pattern_create_linear",
        "body": "cairo_pattern_create_linear(${1:x0}, ${2:y0}, ${3:x1}, ${4:y1})$0"
    },
    "cairo_pattern_create_radial": {
        "prefix": "cairo_pattern_create_radial",
        "body": "cairo_pattern_create_radial(${1:x0}, ${2:y0}, ${3:r0}, ${4:x1}, ${5:y1}, ${6:r1})$0"
    },
    "cairo_pattern_create_rgb": {
        "prefix": "cairo_pattern_create_rgb",
        "body": "cairo_pattern_create_rgb(${1:red}, ${2:green}, ${3:blue})$0"
    },
    "cairo_pattern_create_rgba": {
        "prefix": "cairo_pattern_create_rgba",
        "body": "cairo_pattern_create_rgba(${1:red}, ${2:green}, ${3:blue}, ${4:alpha})$0"
    },
    "cairo_pattern_get_color_stop_count": {
        "prefix": "cairo_pattern_get_color_stop_count",
        "body": "cairo_pattern_get_color_stop_count(${1:pattern})$0"
    },
    "cairo_pattern_get_color_stop_rgba": {
        "prefix": "cairo_pattern_get_color_stop_rgba",
        "body": "cairo_pattern_get_color_stop_rgba(${1:pattern}, ${2:index})$0"
    },
    "cairo_pattern_get_extend": {
        "prefix": "cairo_pattern_get_extend",
        "body": "cairo_pattern_get_extend(${1:pattern})$0"
    },
    "cairo_pattern_get_filter": {
        "prefix": "cairo_pattern_get_filter",
        "body": "cairo_pattern_get_filter(${1:pattern})$0"
    },
    "cairo_pattern_get_linear_points": {
        "prefix": "cairo_pattern_get_linear_points",
        "body": "cairo_pattern_get_linear_points(${1:pattern})$0"
    },
    "cairo_pattern_get_matrix": {
        "prefix": "cairo_pattern_get_matrix",
        "body": "cairo_pattern_get_matrix(${1:pattern})$0"
    },
    "cairo_pattern_get_radial_circles": {
        "prefix": "cairo_pattern_get_radial_circles",
        "body": "cairo_pattern_get_radial_circles(${1:pattern})$0"
    },
    "cairo_pattern_get_rgba": {
        "prefix": "cairo_pattern_get_rgba",
        "body": "cairo_pattern_get_rgba(${1:pattern})$0"
    },
    "cairo_pattern_get_surface": {
        "prefix": "cairo_pattern_get_surface",
        "body": "cairo_pattern_get_surface(${1:pattern})$0"
    },
    "cairo_pattern_get_type": {
        "prefix": "cairo_pattern_get_type",
        "body": "cairo_pattern_get_type(${1:pattern})$0"
    },
    "cairo_pattern_set_extend": {
        "prefix": "cairo_pattern_set_extend",
        "body": "cairo_pattern_set_extend(${1:pattern}, ${2:extend})$0"
    },
    "cairo_pattern_set_filter": {
        "prefix": "cairo_pattern_set_filter",
        "body": "cairo_pattern_set_filter(${1:pattern}, ${2:filter})$0"
    },
    "cairo_pattern_set_matrix": {
        "prefix": "cairo_pattern_set_matrix",
        "body": "cairo_pattern_set_matrix(${1:pattern}, ${2:matrix})$0"
    },
    "cairo_pattern_status": {
        "prefix": "cairo_pattern_status",
        "body": "cairo_pattern_status(${1:pattern})$0"
    },
    "cairo_pdf_surface_create": {
        "prefix": "cairo_pdf_surface_create",
        "body": "cairo_pdf_surface_create(${1:file}, ${2:width}, ${3:height})$0"
    },
    "cairo_pdf_surface_set_size": {
        "prefix": "cairo_pdf_surface_set_size",
        "body": "cairo_pdf_surface_set_size(${1:surface}, ${2:width}, ${3:height})$0"
    },
    "cairo_ps_get_levels": {
        "prefix": "cairo_ps_get_levels",
        "body": "cairo_ps_get_levels()$0"
    },
    "cairo_ps_level_to_string": {
        "prefix": "cairo_ps_level_to_string",
        "body": "cairo_ps_level_to_string(${1:level})$0"
    },
    "cairo_ps_surface_create": {
        "prefix": "cairo_ps_surface_create",
        "body": "cairo_ps_surface_create(${1:file}, ${2:width}, ${3:height})$0"
    },
    "cairo_ps_surface_dsc_begin_page_setup": {
        "prefix": "cairo_ps_surface_dsc_begin_page_setup",
        "body": "cairo_ps_surface_dsc_begin_page_setup(${1:surface})$0"
    },
    "cairo_ps_surface_dsc_begin_setup": {
        "prefix": "cairo_ps_surface_dsc_begin_setup",
        "body": "cairo_ps_surface_dsc_begin_setup(${1:surface})$0"
    },
    "cairo_ps_surface_dsc_comment": {
        "prefix": "cairo_ps_surface_dsc_comment",
        "body": "cairo_ps_surface_dsc_comment(${1:surface}, ${2:comment})$0"
    },
    "cairo_ps_surface_get_eps": {
        "prefix": "cairo_ps_surface_get_eps",
        "body": "cairo_ps_surface_get_eps(${1:surface})$0"
    },
    "cairo_ps_surface_restrict_to_level": {
        "prefix": "cairo_ps_surface_restrict_to_level",
        "body": "cairo_ps_surface_restrict_to_level(${1:surface}, ${2:level})$0"
    },
    "cairo_ps_surface_set_eps": {
        "prefix": "cairo_ps_surface_set_eps",
        "body": "cairo_ps_surface_set_eps(${1:surface}, ${2:level})$0"
    },
    "cairo_ps_surface_set_size": {
        "prefix": "cairo_ps_surface_set_size",
        "body": "cairo_ps_surface_set_size(${1:surface}, ${2:width}, ${3:height})$0"
    },
    "cairo_scaled_font_create": {
        "prefix": "cairo_scaled_font_create",
        "body": "cairo_scaled_font_create(${1:fontface}, ${2:matrix}, ${3:ctm}, ${4:fontoptions})$0"
    },
    "cairo_scaled_font_extents": {
        "prefix": "cairo_scaled_font_extents",
        "body": "cairo_scaled_font_extents(${1:scaledfont})$0"
    },
    "cairo_scaled_font_get_ctm": {
        "prefix": "cairo_scaled_font_get_ctm",
        "body": "cairo_scaled_font_get_ctm(${1:scaledfont})$0"
    },
    "cairo_scaled_font_get_font_face": {
        "prefix": "cairo_scaled_font_get_font_face",
        "body": "cairo_scaled_font_get_font_face(${1:scaledfont})$0"
    },
    "cairo_scaled_font_get_font_matrix": {
        "prefix": "cairo_scaled_font_get_font_matrix",
        "body": "cairo_scaled_font_get_font_matrix(${1:scaledfont})$0"
    },
    "cairo_scaled_font_get_font_options": {
        "prefix": "cairo_scaled_font_get_font_options",
        "body": "cairo_scaled_font_get_font_options(${1:scaledfont})$0"
    },
    "cairo_scaled_font_get_scale_matrix": {
        "prefix": "cairo_scaled_font_get_scale_matrix",
        "body": "cairo_scaled_font_get_scale_matrix(${1:scaledfont})$0"
    },
    "cairo_scaled_font_get_type": {
        "prefix": "cairo_scaled_font_get_type",
        "body": "cairo_scaled_font_get_type(${1:scaledfont})$0"
    },
    "cairo_scaled_font_glyph_extents": {
        "prefix": "cairo_scaled_font_glyph_extents",
        "body": "cairo_scaled_font_glyph_extents(${1:scaledfont}, ${2:glyphs})$0"
    },
    "cairo_scaled_font_status": {
        "prefix": "cairo_scaled_font_status",
        "body": "cairo_scaled_font_status(${1:scaledfont})$0"
    },
    "cairo_scaled_font_text_extents": {
        "prefix": "cairo_scaled_font_text_extents",
        "body": "cairo_scaled_font_text_extents(${1:scaledfont}, ${2:text})$0"
    },
    "cairo_surface_copy_page": {
        "prefix": "cairo_surface_copy_page",
        "body": "cairo_surface_copy_page(${1:surface})$0"
    },
    "cairo_surface_create_similar": {
        "prefix": "cairo_surface_create_similar",
        "body": "cairo_surface_create_similar(${1:surface}, ${2:content}, ${3:width}, ${4:height})$0"
    },
    "cairo_surface_finish": {
        "prefix": "cairo_surface_finish",
        "body": "cairo_surface_finish(${1:surface})$0"
    },
    "cairo_surface_flush": {
        "prefix": "cairo_surface_flush",
        "body": "cairo_surface_flush(${1:surface})$0"
    },
    "cairo_surface_get_content": {
        "prefix": "cairo_surface_get_content",
        "body": "cairo_surface_get_content(${1:surface})$0"
    },
    "cairo_surface_get_device_offset": {
        "prefix": "cairo_surface_get_device_offset",
        "body": "cairo_surface_get_device_offset(${1:surface})$0"
    },
    "cairo_surface_get_font_options": {
        "prefix": "cairo_surface_get_font_options",
        "body": "cairo_surface_get_font_options(${1:surface})$0"
    },
    "cairo_surface_get_type": {
        "prefix": "cairo_surface_get_type",
        "body": "cairo_surface_get_type(${1:surface})$0"
    },
    "cairo_surface_mark_dirty": {
        "prefix": "cairo_surface_mark_dirty",
        "body": "cairo_surface_mark_dirty(${1:surface})$0"
    },
    "cairo_surface_mark_dirty_rectangle": {
        "prefix": "cairo_surface_mark_dirty_rectangle",
        "body": "cairo_surface_mark_dirty_rectangle(${1:surface}, ${2:x}, ${3:y}, ${4:width}, ${5:height})$0"
    },
    "cairo_surface_set_device_offset": {
        "prefix": "cairo_surface_set_device_offset",
        "body": "cairo_surface_set_device_offset(${1:surface}, ${2:x}, ${3:y})$0"
    },
    "cairo_surface_set_fallback_resolution": {
        "prefix": "cairo_surface_set_fallback_resolution",
        "body": "cairo_surface_set_fallback_resolution(${1:surface}, ${2:x}, ${3:y})$0"
    },
    "cairo_surface_show_page": {
        "prefix": "cairo_surface_show_page",
        "body": "cairo_surface_show_page(${1:surface})$0"
    },
    "cairo_surface_status": {
        "prefix": "cairo_surface_status",
        "body": "cairo_surface_status(${1:surface})$0"
    },
    "cairo_surface_write_to_png": {
        "prefix": "cairo_surface_write_to_png",
        "body": "cairo_surface_write_to_png(${1:surface}, ${2:stream})$0"
    },
    "cairo_svg_surface_create": {
        "prefix": "cairo_svg_surface_create",
        "body": "cairo_svg_surface_create(${1:file}, ${2:width}, ${3:height})$0"
    },
    "cairo_svg_surface_restrict_to_version": {
        "prefix": "cairo_svg_surface_restrict_to_version",
        "body": "cairo_svg_surface_restrict_to_version(${1:surface}, ${2:version})$0"
    },
    "cairo_svg_version_to_string": {
        "prefix": "cairo_svg_version_to_string",
        "body": "cairo_svg_version_to_string(${1:version})$0"
    },
    "cal_days_in_month": {
        "prefix": "cal_days_in_month",
        "body": "cal_days_in_month(${1:calendar}, ${2:month}, ${3:year})$0"
    },
    "cal_from_jd": {
        "prefix": "cal_from_jd",
        "body": "cal_from_jd(${1:jd}, ${2:calendar})$0"
    },
    "cal_info": {
        "prefix": "cal_info",
        "body": "cal_info()$0"
    },
    "cal_to_jd": {
        "prefix": "cal_to_jd",
        "body": "cal_to_jd(${1:calendar}, ${2:month}, ${3:day}, ${4:year})$0"
    },
    "calcul_hmac": {
        "prefix": "calcul_hmac",
        "body": "calcul_hmac(${1:clent}, ${2:siretcode}, ${3:price}, ${4:reference}, ${5:validity}, ${6:taxation}, ${7:devise}, ${8:language})$0"
    },
    "calculhmac": {
        "prefix": "calculhmac",
        "body": "calculhmac(${1:clent}, ${2:data})$0"
    },
    "call_user_func": {
        "prefix": "call_user_func",
        "body": "call_user_func(${1:function})$0"
    },
    "call_user_func_array": {
        "prefix": "call_user_func_array",
        "body": "call_user_func_array(${1:function}, ${2:param_arr})$0"
    },
    "call_user_method": {
        "prefix": "call_user_method",
        "body": "call_user_method(${1:method_name}, ${2:obj})$0"
    },
    "call_user_method_array": {
        "prefix": "call_user_method_array",
        "body": "call_user_method_array(${1:method_name}, ${2:obj}, ${3:params})$0"
    },
    "ceil": {
        "prefix": "ceil",
        "body": "ceil(${1:value})$0"
    },
    "chdb_create": {
        "prefix": "chdb_create",
        "body": "chdb_create(${1:pathname}, ${2:data})$0"
    },
    "chdir": {
        "prefix": "chdir",
        "body": "chdir(${1:directory})$0"
    },
    "checkdate": {
        "prefix": "checkdate",
        "body": "checkdate(${1:month}, ${2:day}, ${3:year})$0"
    },
    "checkdnsrr": {
        "prefix": "checkdnsrr",
        "body": "checkdnsrr(${1:host})$0"
    },
    "chgrp": {
        "prefix": "chgrp",
        "body": "chgrp(${1:filename}, ${2:group})$0"
    },
    "chmod": {
        "prefix": "chmod",
        "body": "chmod(${1:filename}, ${2:mode})$0"
    },
    "chop": {
        "prefix": "chop",
        "body": "chop()$0"
    },
    "chown": {
        "prefix": "chown",
        "body": "chown(${1:filename}, ${2:user})$0"
    },
    "chr": {
        "prefix": "chr",
        "body": "chr(${1:ascii})$0"
    },
    "chroot": {
        "prefix": "chroot",
        "body": "chroot(${1:directory})$0"
    },
    "chunk_split": {
        "prefix": "chunk_split",
        "body": "chunk_split(${1:body})$0"
    },
    "class_alias": {
        "prefix": "class_alias",
        "body": "class_alias()$0"
    },
    "class_exists": {
        "prefix": "class_exists",
        "body": "class_exists(${1:class_name})$0"
    },
    "class_implements": {
        "prefix": "class_implements",
        "body": "class_implements(${1:class})$0"
    },
    "class_parents": {
        "prefix": "class_parents",
        "body": "class_parents(${1:class})$0"
    },
    "classkit_import": {
        "prefix": "classkit_import",
        "body": "classkit_import(${1:filename})$0"
    },
    "classkit_method_add": {
        "prefix": "classkit_method_add",
        "body": "classkit_method_add(${1:classname}, ${2:methodname}, ${3:args}, ${4:code})$0"
    },
    "classkit_method_copy": {
        "prefix": "classkit_method_copy",
        "body": "classkit_method_copy(${1:dClass}, ${2:dMethod}, ${3:sClass})$0"
    },
    "classkit_method_redefine": {
        "prefix": "classkit_method_redefine",
        "body": "classkit_method_redefine(${1:classname}, ${2:methodname}, ${3:args}, ${4:code})$0"
    },
    "classkit_method_remove": {
        "prefix": "classkit_method_remove",
        "body": "classkit_method_remove(${1:classname}, ${2:methodname})$0"
    },
    "classkit_method_rename": {
        "prefix": "classkit_method_rename",
        "body": "classkit_method_rename(${1:classname}, ${2:methodname}, ${3:newname})$0"
    },
    "clearstatcache": {
        "prefix": "clearstatcache",
        "body": "clearstatcache()$0"
    },
    "closedir": {
        "prefix": "closedir",
        "body": "closedir()$0"
    },
    "closelog": {
        "prefix": "closelog",
        "body": "closelog()$0"
    },
    "com_addref": {
        "prefix": "com_addref",
        "body": "com_addref()$0"
    },
    "com_create_guid": {
        "prefix": "com_create_guid",
        "body": "com_create_guid()$0"
    },
    "com_event_sink": {
        "prefix": "com_event_sink",
        "body": "com_event_sink(${1:comobject}, ${2:sinkobject})$0"
    },
    "com_get": {
        "prefix": "com_get",
        "body": "com_get()$0"
    },
    "com_get_active_object": {
        "prefix": "com_get_active_object",
        "body": "com_get_active_object(${1:progid})$0"
    },
    "com_invoke": {
        "prefix": "com_invoke",
        "body": "com_invoke(${1:com_object}, ${2:function_name})$0"
    },
    "com_isenum": {
        "prefix": "com_isenum",
        "body": "com_isenum(${1:com_module})$0"
    },
    "com_load": {
        "prefix": "com_load",
        "body": "com_load()$0"
    },
    "com_load_typelib": {
        "prefix": "com_load_typelib",
        "body": "com_load_typelib(${1:typelib_name})$0"
    },
    "com_message_pump": {
        "prefix": "com_message_pump",
        "body": "com_message_pump()$0"
    },
    "com_print_typeinfo": {
        "prefix": "com_print_typeinfo",
        "body": "com_print_typeinfo(${1:comobject})$0"
    },
    "com_propget": {
        "prefix": "com_propget",
        "body": "com_propget()$0"
    },
    "com_propput": {
        "prefix": "com_propput",
        "body": "com_propput()$0"
    },
    "com_propset": {
        "prefix": "com_propset",
        "body": "com_propset()$0"
    },
    "com_release": {
        "prefix": "com_release",
        "body": "com_release()$0"
    },
    "com_set": {
        "prefix": "com_set",
        "body": "com_set()$0"
    },
    "compact": {
        "prefix": "compact",
        "body": "compact(${1:varname})$0"
    },
    "connection_aborted": {
        "prefix": "connection_aborted",
        "body": "connection_aborted()$0"
    },
    "connection_status": {
        "prefix": "connection_status",
        "body": "connection_status()$0"
    },
    "connection_timeout": {
        "prefix": "connection_timeout",
        "body": "connection_timeout()$0"
    },
    "constant": {
        "prefix": "constant",
        "body": "constant(${1:name})$0"
    },
    "convert_cyr_string": {
        "prefix": "convert_cyr_string",
        "body": "convert_cyr_string(${1:str}, ${2:from}, ${3:to})$0"
    },
    "convert_uudecode": {
        "prefix": "convert_uudecode",
        "body": "convert_uudecode(${1:data})$0"
    },
    "convert_uuencode": {
        "prefix": "convert_uuencode",
        "body": "convert_uuencode(${1:data})$0"
    },
    "copy": {
        "prefix": "copy",
        "body": "copy(${1:source}, ${2:dest})$0"
    },
    "cos": {
        "prefix": "cos",
        "body": "cos(${1:arg})$0"
    },
    "cosh": {
        "prefix": "cosh",
        "body": "cosh(${1:arg})$0"
    },
    "count": {
        "prefix": "count",
        "body": "count(${1:var})$0"
    },
    "hitung": {
        "prefix": "hitung",
        "body": "hitung(${1:var})$0"
    },
    "ukuran": {
        "prefix": "ukuran",
        "body": "ukuran(${1:var})$0"
    },
    "count_chars": {
        "prefix": "count_chars",
        "body": "count_chars(${1:string})$0"
    },
    "counter_bump": {
        "prefix": "counter_bump",
        "body": "counter_bump(${1:offset})$0"
    },
    "counter_bump_value": {
        "prefix": "counter_bump_value",
        "body": "counter_bump_value(${1:counter}, ${2:offset})$0"
    },
    "counter_create": {
        "prefix": "counter_create",
        "body": "counter_create(${1:name})$0"
    },
    "counter_get": {
        "prefix": "counter_get",
        "body": "counter_get()$0"
    },
    "counter_get_meta": {
        "prefix": "counter_get_meta",
        "body": "counter_get_meta(${1:counter}, ${2:attribute})$0"
    },
    "counter_get_named": {
        "prefix": "counter_get_named",
        "body": "counter_get_named(${1:name})$0"
    },
    "counter_get_value": {
        "prefix": "counter_get_value",
        "body": "counter_get_value(${1:counter})$0"
    },
    "counter_reset": {
        "prefix": "counter_reset",
        "body": "counter_reset()$0"
    },
    "counter_reset_value": {
        "prefix": "counter_reset_value",
        "body": "counter_reset_value(${1:counter})$0"
    },
    "crack_check": {
        "prefix": "crack_check",
        "body": "crack_check(${1:dictionary}, ${2:password})$0"
    },
    "crack_closedict": {
        "prefix": "crack_closedict",
        "body": "crack_closedict()$0"
    },
    "crack_getlastmessage": {
        "prefix": "crack_getlastmessage",
        "body": "crack_getlastmessage()$0"
    },
    "crack_opendict": {
        "prefix": "crack_opendict",
        "body": "crack_opendict(${1:dictionary})$0"
    },
    "crc32": {
        "prefix": "crc32",
        "body": "crc32(${1:str})$0"
    },
    "create_function": {
        "prefix": "create_function",
        "body": "create_function(${1:args}, ${2:code})$0"
    },
    "crypt": {
        "prefix": "crypt",
        "body": "crypt(${1:str})$0"
    },
    "ctype_alnum": {
        "prefix": "ctype_alnum",
        "body": "ctype_alnum(${1:text})$0"
    },
    "ctype_alpha": {
        "prefix": "ctype_alpha",
        "body": "ctype_alpha(${1:text})$0"
    },
    "ctype_cntrl": {
        "prefix": "ctype_cntrl",
        "body": "ctype_cntrl(${1:text})$0"
    },
    "ctype_digit": {
        "prefix": "ctype_digit",
        "body": "ctype_digit(${1:text})$0"
    },
    "ctype_graph": {
        "prefix": "ctype_graph",
        "body": "ctype_graph(${1:text})$0"
    },
    "ctype_lower": {
        "prefix": "ctype_lower",
        "body": "ctype_lower(${1:text})$0"
    },
    "ctype_print": {
        "prefix": "ctype_print",
        "body": "ctype_print(${1:text})$0"
    },
    "ctype_punct": {
        "prefix": "ctype_punct",
        "body": "ctype_punct(${1:text})$0"
    },
    "ctype_space": {
        "prefix": "ctype_space",
        "body": "ctype_space(${1:text})$0"
    },
    "ctype_upper": {
        "prefix": "ctype_upper",
        "body": "ctype_upper(${1:text})$0"
    },
    "ctype_xdigit": {
        "prefix": "ctype_xdigit",
        "body": "ctype_xdigit(${1:text})$0"
    },
    "cubrid_affected_rows": {
        "prefix": "cubrid_affected_rows",
        "body": "cubrid_affected_rows()$0"
    },
    "cubrid_bind": {
        "prefix": "cubrid_bind",
        "body": "cubrid_bind(${1:req_identifier}, ${2:bind_index}, ${3:bind_value})$0"
    },
    "cubrid_client_encoding": {
        "prefix": "cubrid_client_encoding",
        "body": "cubrid_client_encoding()$0"
    },
    "cubrid_close": {
        "prefix": "cubrid_close",
        "body": "cubrid_close()$0"
    },
    "cubrid_close_prepare": {
        "prefix": "cubrid_close_prepare",
        "body": "cubrid_close_prepare(${1:req_identifier})$0"
    },
    "cubrid_close_request": {
        "prefix": "cubrid_close_request",
        "body": "cubrid_close_request(${1:req_identifier})$0"
    },
    "cubrid_col_get": {
        "prefix": "cubrid_col_get",
        "body": "cubrid_col_get(${1:conn_identifier}, ${2:oid}, ${3:attr_name})$0"
    },
    "cubrid_col_size": {
        "prefix": "cubrid_col_size",
        "body": "cubrid_col_size(${1:conn_identifier}, ${2:oid}, ${3:attr_name})$0"
    },
    "cubrid_column_names": {
        "prefix": "cubrid_column_names",
        "body": "cubrid_column_names(${1:req_identifier})$0"
    },
    "cubrid_column_types": {
        "prefix": "cubrid_column_types",
        "body": "cubrid_column_types(${1:req_identifier})$0"
    },
    "cubrid_commit": {
        "prefix": "cubrid_commit",
        "body": "cubrid_commit(${1:conn_identifier})$0"
    },
    "cubrid_connect": {
        "prefix": "cubrid_connect",
        "body": "cubrid_connect(${1:host}, ${2:port}, ${3:dbname})$0"
    },
    "cubrid_connect_with_url": {
        "prefix": "cubrid_connect_with_url",
        "body": "cubrid_connect_with_url(${1:conn_url})$0"
    },
    "cubrid_current_oid": {
        "prefix": "cubrid_current_oid",
        "body": "cubrid_current_oid(${1:req_identifier})$0"
    },
    "cubrid_data_seek": {
        "prefix": "cubrid_data_seek",
        "body": "cubrid_data_seek(${1:req_identifier}, ${2:row_number})$0"
    },
    "cubrid_db_name": {
        "prefix": "cubrid_db_name",
        "body": "cubrid_db_name(${1:result}, ${2:index})$0"
    },
    "cubrid_disconnect": {
        "prefix": "cubrid_disconnect",
        "body": "cubrid_disconnect(${1:conn_identifier})$0"
    },
    "cubrid_drop": {
        "prefix": "cubrid_drop",
        "body": "cubrid_drop(${1:conn_identifier}, ${2:oid})$0"
    },
    "cubrid_errno": {
        "prefix": "cubrid_errno",
        "body": "cubrid_errno()$0"
    },
    "cubrid_error": {
        "prefix": "cubrid_error",
        "body": "cubrid_error()$0"
    },
    "cubrid_error_code": {
        "prefix": "cubrid_error_code",
        "body": "cubrid_error_code()$0"
    },
    "cubrid_error_code_facility": {
        "prefix": "cubrid_error_code_facility",
        "body": "cubrid_error_code_facility()$0"
    },
    "cubrid_error_msg": {
        "prefix": "cubrid_error_msg",
        "body": "cubrid_error_msg()$0"
    },
    "cubrid_execute": {
        "prefix": "cubrid_execute",
        "body": "cubrid_execute(${1:conn_identifier}, ${2:SQL})$0"
    },
    "cubrid_fetch": {
        "prefix": "cubrid_fetch",
        "body": "cubrid_fetch(${1:result})$0"
    },
    "cubrid_fetch_array": {
        "prefix": "cubrid_fetch_array",
        "body": "cubrid_fetch_array(${1:result})$0"
    },
    "cubrid_fetch_assoc": {
        "prefix": "cubrid_fetch_assoc",
        "body": "cubrid_fetch_assoc(${1:result})$0"
    },
    "cubrid_fetch_field": {
        "prefix": "cubrid_fetch_field",
        "body": "cubrid_fetch_field(${1:result})$0"
    },
    "cubrid_fetch_lengths": {
        "prefix": "cubrid_fetch_lengths",
        "body": "cubrid_fetch_lengths(${1:result})$0"
    },
    "cubrid_fetch_object": {
        "prefix": "cubrid_fetch_object",
        "body": "cubrid_fetch_object(${1:result})$0"
    },
    "cubrid_fetch_row": {
        "prefix": "cubrid_fetch_row",
        "body": "cubrid_fetch_row(${1:result})$0"
    },
    "cubrid_field_flags": {
        "prefix": "cubrid_field_flags",
        "body": "cubrid_field_flags(${1:result}, ${2:field_offset})$0"
    },
    "cubrid_field_len": {
        "prefix": "cubrid_field_len",
        "body": "cubrid_field_len(${1:result}, ${2:field_offset})$0"
    },
    "cubrid_field_name": {
        "prefix": "cubrid_field_name",
        "body": "cubrid_field_name(${1:result}, ${2:field_offset})$0"
    },
    "cubrid_field_seek": {
        "prefix": "cubrid_field_seek",
        "body": "cubrid_field_seek(${1:result})$0"
    },
    "cubrid_field_table": {
        "prefix": "cubrid_field_table",
        "body": "cubrid_field_table(${1:result}, ${2:field_offset})$0"
    },
    "cubrid_field_type": {
        "prefix": "cubrid_field_type",
        "body": "cubrid_field_type(${1:result}, ${2:field_offset})$0"
    },
    "cubrid_free_result": {
        "prefix": "cubrid_free_result",
        "body": "cubrid_free_result(${1:req_identifier})$0"
    },
    "cubrid_get": {
        "prefix": "cubrid_get",
        "body": "cubrid_get(${1:conn_identifier}, ${2:oid})$0"
    },
    "cubrid_get_charset": {
        "prefix": "cubrid_get_charset",
        "body": "cubrid_get_charset(${1:conn_identifier})$0"
    },
    "cubrid_get_class_name": {
        "prefix": "cubrid_get_class_name",
        "body": "cubrid_get_class_name(${1:conn_identifier}, ${2:oid})$0"
    },
    "cubrid_get_client_info": {
        "prefix": "cubrid_get_client_info",
        "body": "cubrid_get_client_info()$0"
    },
    "cubrid_get_db_parameter": {
        "prefix": "cubrid_get_db_parameter",
        "body": "cubrid_get_db_parameter(${1:conn_identifier})$0"
    },
    "cubrid_get_server_info": {
        "prefix": "cubrid_get_server_info",
        "body": "cubrid_get_server_info(${1:conn_identifier})$0"
    },
    "cubrid_insert_id": {
        "prefix": "cubrid_insert_id",
        "body": "cubrid_insert_id(${1:class_name})$0"
    },
    "cubrid_is_instance": {
        "prefix": "cubrid_is_instance",
        "body": "cubrid_is_instance(${1:conn_identifier}, ${2:oid})$0"
    },
    "cubrid_list_dbs": {
        "prefix": "cubrid_list_dbs",
        "body": "cubrid_list_dbs(${1:conn_identifier})$0"
    },
    "cubrid_load_from_glo": {
        "prefix": "cubrid_load_from_glo",
        "body": "cubrid_load_from_glo(${1:conn_identifier}, ${2:oid}, ${3:file_name})$0"
    },
    "cubrid_lob_close": {
        "prefix": "cubrid_lob_close",
        "body": "cubrid_lob_close(${1:lob_identifier_array})$0"
    },
    "cubrid_lob_export": {
        "prefix": "cubrid_lob_export",
        "body": "cubrid_lob_export(${1:conn_identifier}, ${2:lob_identifier}, ${3:path_name})$0"
    },
    "cubrid_lob_get": {
        "prefix": "cubrid_lob_get",
        "body": "cubrid_lob_get(${1:conn_identifier}, ${2:SQL})$0"
    },
    "cubrid_lob_send": {
        "prefix": "cubrid_lob_send",
        "body": "cubrid_lob_send(${1:conn_identifier}, ${2:lob_identifier})$0"
    },
    "cubrid_lob_size": {
        "prefix": "cubrid_lob_size",
        "body": "cubrid_lob_size(${1:lob_identifier})$0"
    },
    "cubrid_lock_read": {
        "prefix": "cubrid_lock_read",
        "body": "cubrid_lock_read(${1:conn_identifier}, ${2:oid})$0"
    },
    "cubrid_lock_write": {
        "prefix": "cubrid_lock_write",
        "body": "cubrid_lock_write(${1:conn_identifier}, ${2:oid})$0"
    },
    "cubrid_move_cursor": {
        "prefix": "cubrid_move_cursor",
        "body": "cubrid_move_cursor(${1:req_identifier}, ${2:offset})$0"
    },
    "cubrid_new_glo": {
        "prefix": "cubrid_new_glo",
        "body": "cubrid_new_glo(${1:conn_identifier}, ${2:class_name}, ${3:file_name})$0"
    },
    "cubrid_num_cols": {
        "prefix": "cubrid_num_cols",
        "body": "cubrid_num_cols(${1:req_identifier})$0"
    },
    "cubrid_num_fields": {
        "prefix": "cubrid_num_fields",
        "body": "cubrid_num_fields(${1:result})$0"
    },
    "cubrid_num_rows": {
        "prefix": "cubrid_num_rows",
        "body": "cubrid_num_rows(${1:req_identifier})$0"
    },
    "cubrid_ping": {
        "prefix": "cubrid_ping",
        "body": "cubrid_ping()$0"
    },
    "cubrid_prepare": {
        "prefix": "cubrid_prepare",
        "body": "cubrid_prepare(${1:conn_identifier}, ${2:prepare_stmt})$0"
    },
    "cubrid_put": {
        "prefix": "cubrid_put",
        "body": "cubrid_put(${1:conn_identifier}, ${2:oid})$0"
    },
    "cubrid_query": {
        "prefix": "cubrid_query",
        "body": "cubrid_query(${1:query})$0"
    },
    "cubrid_real_escape_string": {
        "prefix": "cubrid_real_escape_string",
        "body": "cubrid_real_escape_string(${1:unescaped_string})$0"
    },
    "cubrid_result": {
        "prefix": "cubrid_result",
        "body": "cubrid_result(${1:result}, ${2:row})$0"
    },
    "cubrid_rollback": {
        "prefix": "cubrid_rollback",
        "body": "cubrid_rollback(${1:conn_identifier})$0"
    },
    "cubrid_save_to_glo": {
        "prefix": "cubrid_save_to_glo",
        "body": "cubrid_save_to_glo(${1:conn_identifier}, ${2:oid}, ${3:file_name})$0"
    },
    "cubrid_schema": {
        "prefix": "cubrid_schema",
        "body": "cubrid_schema(${1:conn_identifier}, ${2:schema_type})$0"
    },
    "cubrid_send_glo": {
        "prefix": "cubrid_send_glo",
        "body": "cubrid_send_glo(${1:conn_identifier}, ${2:oid})$0"
    },
    "cubrid_seq_drop": {
        "prefix": "cubrid_seq_drop",
        "body": "cubrid_seq_drop(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:index})$0"
    },
    "cubrid_seq_insert": {
        "prefix": "cubrid_seq_insert",
        "body": "cubrid_seq_insert(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:index}, ${5:seq_element})$0"
    },
    "cubrid_seq_put": {
        "prefix": "cubrid_seq_put",
        "body": "cubrid_seq_put(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:index}, ${5:seq_element})$0"
    },
    "cubrid_set_add": {
        "prefix": "cubrid_set_add",
        "body": "cubrid_set_add(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:set_element})$0"
    },
    "cubrid_set_drop": {
        "prefix": "cubrid_set_drop",
        "body": "cubrid_set_drop(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:set_element})$0"
    },
    "cubrid_unbuffered_query": {
        "prefix": "cubrid_unbuffered_query",
        "body": "cubrid_unbuffered_query(${1:query})$0"
    },
    "cubrid_version": {
        "prefix": "cubrid_version",
        "body": "cubrid_version()$0"
    },
    "curl_close": {
        "prefix": "curl_close",
        "body": "curl_close(${1:ch})$0"
    },
    "curl_copy_handle": {
        "prefix": "curl_copy_handle",
        "body": "curl_copy_handle(${1:ch})$0"
    },
    "curl_errno": {
        "prefix": "curl_errno",
        "body": "curl_errno(${1:ch})$0"
    },
    "curl_error": {
        "prefix": "curl_error",
        "body": "curl_error(${1:ch})$0"
    },
    "curl_exec": {
        "prefix": "curl_exec",
        "body": "curl_exec(${1:ch})$0"
    },
    "curl_getinfo": {
        "prefix": "curl_getinfo",
        "body": "curl_getinfo(${1:ch})$0"
    },
    "curl_init": {
        "prefix": "curl_init",
        "body": "curl_init()$0"
    },
    "curl_multi_add_handle": {
        "prefix": "curl_multi_add_handle",
        "body": "curl_multi_add_handle(${1:mh}, ${2:ch})$0"
    },
    "curl_multi_close": {
        "prefix": "curl_multi_close",
        "body": "curl_multi_close(${1:mh})$0"
    },
    "curl_multi_exec": {
        "prefix": "curl_multi_exec",
        "body": "curl_multi_exec(${1:mh}, ${2:still_running})$0"
    },
    "curl_multi_getcontent": {
        "prefix": "curl_multi_getcontent",
        "body": "curl_multi_getcontent(${1:ch})$0"
    },
    "curl_multi_info_read": {
        "prefix": "curl_multi_info_read",
        "body": "curl_multi_info_read(${1:mh})$0"
    },
    "curl_multi_init": {
        "prefix": "curl_multi_init",
        "body": "curl_multi_init()$0"
    },
    "curl_multi_remove_handle": {
        "prefix": "curl_multi_remove_handle",
        "body": "curl_multi_remove_handle(${1:mh}, ${2:ch})$0"
    },
    "curl_multi_select": {
        "prefix": "curl_multi_select",
        "body": "curl_multi_select(${1:mh})$0"
    },
    "curl_setopt": {
        "prefix": "curl_setopt",
        "body": "curl_setopt(${1:ch}, ${2:option}, ${3:value})$0"
    },
    "curl_setopt_array": {
        "prefix": "curl_setopt_array",
        "body": "curl_setopt_array(${1:ch}, ${2:options})$0"
    },
    "curl_version": {
        "prefix": "curl_version",
        "body": "curl_version()$0"
    },
    "current": {
        "prefix": "current",
        "body": "current(${1:array})$0"
    },
    "cyrus_authenticate": {
        "prefix": "cyrus_authenticate",
        "body": "cyrus_authenticate(${1:connection})$0"
    },
    "cyrus_bind": {
        "prefix": "cyrus_bind",
        "body": "cyrus_bind(${1:connection}, ${2:callbacks})$0"
    },
    "cyrus_close": {
        "prefix": "cyrus_close",
        "body": "cyrus_close(${1:connection})$0"
    },
    "cyrus_connect": {
        "prefix": "cyrus_connect",
        "body": "cyrus_connect()$0"
    },
    "cyrus_query": {
        "prefix": "cyrus_query",
        "body": "cyrus_query(${1:connection}, ${2:query})$0"
    },
    "cyrus_unbind": {
        "prefix": "cyrus_unbind",
        "body": "cyrus_unbind(${1:connection}, ${2:trigger_name})$0"
    },
    "date": {
        "prefix": "date",
        "body": "date(${1:format})$0"
    },
    "date_add": {
        "prefix": "date_add",
        "body": "date_add()$0"
    },
    "date_create": {
        "prefix": "date_create",
        "body": "date_create()$0"
    },
    "date_create_from_format": {
        "prefix": "date_create_from_format",
        "body": "date_create_from_format()$0"
    },
    "date_date_set": {
        "prefix": "date_date_set",
        "body": "date_date_set()$0"
    },
    "date_default_timezone_get": {
        "prefix": "date_default_timezone_get",
        "body": "date_default_timezone_get()$0"
    },
    "date_default_timezone_set": {
        "prefix": "date_default_timezone_set",
        "body": "date_default_timezone_set(${1:timezone_identifier})$0"
    },
    "date_diff": {
        "prefix": "date_diff",
        "body": "date_diff()$0"
    },
    "date_format": {
        "prefix": "date_format",
        "body": "date_format()$0"
    },
    "date_get_last_errors": {
        "prefix": "date_get_last_errors",
        "body": "date_get_last_errors()$0"
    },
    "date_interval_create_from_date_string": {
        "prefix": "date_interval_create_from_date_string",
        "body": "date_interval_create_from_date_string()$0"
    },
    "date_interval_format": {
        "prefix": "date_interval_format",
        "body": "date_interval_format()$0"
    },
    "date_isodate_set": {
        "prefix": "date_isodate_set",
        "body": "date_isodate_set()$0"
    },
    "date_modify": {
        "prefix": "date_modify",
        "body": "date_modify()$0"
    },
    "date_offset_get": {
        "prefix": "date_offset_get",
        "body": "date_offset_get()$0"
    },
    "date_parse": {
        "prefix": "date_parse",
        "body": "date_parse(${1:date})$0"
    },
    "date_parse_from_format": {
        "prefix": "date_parse_from_format",
        "body": "date_parse_from_format(${1:format}, ${2:date})$0"
    },
    "date_sub": {
        "prefix": "date_sub",
        "body": "date_sub()$0"
    },
    "date_sun_info": {
        "prefix": "date_sun_info",
        "body": "date_sun_info(${1:time}, ${2:latitude}, ${3:longitude})$0"
    },
    "date_sunrise": {
        "prefix": "date_sunrise",
        "body": "date_sunrise(${1:timestamp})$0"
    },
    "date_sunset": {
        "prefix": "date_sunset",
        "body": "date_sunset(${1:timestamp})$0"
    },
    "date_time_set": {
        "prefix": "date_time_set",
        "body": "date_time_set()$0"
    },
    "date_timestamp_get": {
        "prefix": "date_timestamp_get",
        "body": "date_timestamp_get()$0"
    },
    "date_timestamp_set": {
        "prefix": "date_timestamp_set",
        "body": "date_timestamp_set()$0"
    },
    "date_timezone_get": {
        "prefix": "date_timezone_get",
        "body": "date_timezone_get()$0"
    },
    "date_timezone_set": {
        "prefix": "date_timezone_set",
        "body": "date_timezone_set()$0"
    },
    "db2_autocommit": {
        "prefix": "db2_autocommit",
        "body": "db2_autocommit(${1:connection})$0"
    },
    "db2_bind_param": {
        "prefix": "db2_bind_param",
        "body": "db2_bind_param(${1:stmt}, ${2:parameter-number}, ${3:variable-name})$0"
    },
    "db2_client_info": {
        "prefix": "db2_client_info",
        "body": "db2_client_info(${1:connection})$0"
    },
    "db2_close": {
        "prefix": "db2_close",
        "body": "db2_close(${1:connection})$0"
    },
    "db2_column_privileges": {
        "prefix": "db2_column_privileges",
        "body": "db2_column_privileges(${1:connection})$0"
    },
    "db2_columns": {
        "prefix": "db2_columns",
        "body": "db2_columns(${1:connection})$0"
    },
    "db2_commit": {
        "prefix": "db2_commit",
        "body": "db2_commit(${1:connection})$0"
    },
    "db2_conn_error": {
        "prefix": "db2_conn_error",
        "body": "db2_conn_error()$0"
    },
    "db2_conn_errormsg": {
        "prefix": "db2_conn_errormsg",
        "body": "db2_conn_errormsg()$0"
    },
    "db2_connect": {
        "prefix": "db2_connect",
        "body": "db2_connect(${1:database}, ${2:username}, ${3:password})$0"
    },
    "db2_cursor_type": {
        "prefix": "db2_cursor_type",
        "body": "db2_cursor_type(${1:stmt})$0"
    },
    "db2_escape_string": {
        "prefix": "db2_escape_string",
        "body": "db2_escape_string(${1:string_literal})$0"
    },
    "db2_exec": {
        "prefix": "db2_exec",
        "body": "db2_exec(${1:connection}, ${2:statement})$0"
    },
    "db2_execute": {
        "prefix": "db2_execute",
        "body": "db2_execute(${1:stmt})$0"
    },
    "db2_fetch_array": {
        "prefix": "db2_fetch_array",
        "body": "db2_fetch_array(${1:stmt})$0"
    },
    "db2_fetch_assoc": {
        "prefix": "db2_fetch_assoc",
        "body": "db2_fetch_assoc(${1:stmt})$0"
    },
    "db2_fetch_both": {
        "prefix": "db2_fetch_both",
        "body": "db2_fetch_both(${1:stmt})$0"
    },
    "db2_fetch_object": {
        "prefix": "db2_fetch_object",
        "body": "db2_fetch_object(${1:stmt})$0"
    },
    "db2_fetch_row": {
        "prefix": "db2_fetch_row",
        "body": "db2_fetch_row(${1:stmt})$0"
    },
    "db2_field_display_size": {
        "prefix": "db2_field_display_size",
        "body": "db2_field_display_size(${1:stmt}, ${2:column})$0"
    },
    "db2_field_name": {
        "prefix": "db2_field_name",
        "body": "db2_field_name(${1:stmt}, ${2:column})$0"
    },
    "db2_field_num": {
        "prefix": "db2_field_num",
        "body": "db2_field_num(${1:stmt}, ${2:column})$0"
    },
    "db2_field_precision": {
        "prefix": "db2_field_precision",
        "body": "db2_field_precision(${1:stmt}, ${2:column})$0"
    },
    "db2_field_scale": {
        "prefix": "db2_field_scale",
        "body": "db2_field_scale(${1:stmt}, ${2:column})$0"
    },
    "db2_field_type": {
        "prefix": "db2_field_type",
        "body": "db2_field_type(${1:stmt}, ${2:column})$0"
    },
    "db2_field_width": {
        "prefix": "db2_field_width",
        "body": "db2_field_width(${1:stmt}, ${2:column})$0"
    },
    "db2_foreign_keys": {
        "prefix": "db2_foreign_keys",
        "body": "db2_foreign_keys(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:table-name})$0"
    },
    "db2_free_result": {
        "prefix": "db2_free_result",
        "body": "db2_free_result(${1:stmt})$0"
    },
    "db2_free_stmt": {
        "prefix": "db2_free_stmt",
        "body": "db2_free_stmt(${1:stmt})$0"
    },
    "db2_get_option": {
        "prefix": "db2_get_option",
        "body": "db2_get_option(${1:resource}, ${2:option})$0"
    },
    "db2_last_insert_id": {
        "prefix": "db2_last_insert_id",
        "body": "db2_last_insert_id(${1:resource})$0"
    },
    "db2_lob_read": {
        "prefix": "db2_lob_read",
        "body": "db2_lob_read(${1:stmt}, ${2:colnum}, ${3:length})$0"
    },
    "db2_next_result": {
        "prefix": "db2_next_result",
        "body": "db2_next_result(${1:stmt})$0"
    },
    "db2_num_fields": {
        "prefix": "db2_num_fields",
        "body": "db2_num_fields(${1:stmt})$0"
    },
    "db2_num_rows": {
        "prefix": "db2_num_rows",
        "body": "db2_num_rows(${1:stmt})$0"
    },
    "db2_pclose": {
        "prefix": "db2_pclose",
        "body": "db2_pclose(${1:resource})$0"
    },
    "db2_pconnect": {
        "prefix": "db2_pconnect",
        "body": "db2_pconnect(${1:database}, ${2:username}, ${3:password})$0"
    },
    "db2_prepare": {
        "prefix": "db2_prepare",
        "body": "db2_prepare(${1:connection}, ${2:statement})$0"
    },
    "db2_primary_keys": {
        "prefix": "db2_primary_keys",
        "body": "db2_primary_keys(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:table-name})$0"
    },
    "db2_procedure_columns": {
        "prefix": "db2_procedure_columns",
        "body": "db2_procedure_columns(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:procedure}, ${5:parameter})$0"
    },
    "db2_procedures": {
        "prefix": "db2_procedures",
        "body": "db2_procedures(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:procedure})$0"
    },
    "db2_result": {
        "prefix": "db2_result",
        "body": "db2_result(${1:stmt}, ${2:column})$0"
    },
    "db2_rollback": {
        "prefix": "db2_rollback",
        "body": "db2_rollback(${1:connection})$0"
    },
    "db2_server_info": {
        "prefix": "db2_server_info",
        "body": "db2_server_info(${1:connection})$0"
    },
    "db2_set_option": {
        "prefix": "db2_set_option",
        "body": "db2_set_option(${1:resource}, ${2:options}, ${3:type})$0"
    },
    "db2_special_columns": {
        "prefix": "db2_special_columns",
        "body": "db2_special_columns(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:table_name}, ${5:scope})$0"
    },
    "db2_statistics": {
        "prefix": "db2_statistics",
        "body": "db2_statistics(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:table-name}, ${5:unique})$0"
    },
    "db2_stmt_error": {
        "prefix": "db2_stmt_error",
        "body": "db2_stmt_error()$0"
    },
    "db2_stmt_errormsg": {
        "prefix": "db2_stmt_errormsg",
        "body": "db2_stmt_errormsg()$0"
    },
    "db2_table_privileges": {
        "prefix": "db2_table_privileges",
        "body": "db2_table_privileges(${1:connection})$0"
    },
    "db2_tables": {
        "prefix": "db2_tables",
        "body": "db2_tables(${1:connection})$0"
    },
    "dba_close": {
        "prefix": "dba_close",
        "body": "dba_close(${1:handle})$0"
    },
    "dba_delete": {
        "prefix": "dba_delete",
        "body": "dba_delete(${1:key}, ${2:handle})$0"
    },
    "dba_exists": {
        "prefix": "dba_exists",
        "body": "dba_exists(${1:key}, ${2:handle})$0"
    },
    "dba_fetch": {
        "prefix": "dba_fetch",
        "body": "dba_fetch(${1:key}, ${2:handle})$0"
    },
    "dba_firstkey": {
        "prefix": "dba_firstkey",
        "body": "dba_firstkey(${1:handle})$0"
    },
    "dba_handlers": {
        "prefix": "dba_handlers",
        "body": "dba_handlers()$0"
    },
    "dba_insert": {
        "prefix": "dba_insert",
        "body": "dba_insert(${1:key}, ${2:value}, ${3:handle})$0"
    },
    "dba_key_split": {
        "prefix": "dba_key_split",
        "body": "dba_key_split(${1:key})$0"
    },
    "dba_list": {
        "prefix": "dba_list",
        "body": "dba_list()$0"
    },
    "dba_nextkey": {
        "prefix": "dba_nextkey",
        "body": "dba_nextkey(${1:handle})$0"
    },
    "dba_open": {
        "prefix": "dba_open",
        "body": "dba_open(${1:path}, ${2:mode})$0"
    },
    "dba_optimize": {
        "prefix": "dba_optimize",
        "body": "dba_optimize(${1:handle})$0"
    },
    "dba_popen": {
        "prefix": "dba_popen",
        "body": "dba_popen(${1:path}, ${2:mode})$0"
    },
    "dba_replace": {
        "prefix": "dba_replace",
        "body": "dba_replace(${1:key}, ${2:value}, ${3:handle})$0"
    },
    "dba_sync": {
        "prefix": "dba_sync",
        "body": "dba_sync(${1:handle})$0"
    },
    "dbase_add_record": {
        "prefix": "dbase_add_record",
        "body": "dbase_add_record(${1:dbase_identifier}, ${2:record})$0"
    },
    "dbase_close": {
        "prefix": "dbase_close",
        "body": "dbase_close(${1:dbase_identifier})$0"
    },
    "dbase_create": {
        "prefix": "dbase_create",
        "body": "dbase_create(${1:filename}, ${2:fields})$0"
    },
    "dbase_delete_record": {
        "prefix": "dbase_delete_record",
        "body": "dbase_delete_record(${1:dbase_identifier}, ${2:record_number})$0"
    },
    "dbase_get_header_info": {
        "prefix": "dbase_get_header_info",
        "body": "dbase_get_header_info(${1:dbase_identifier})$0"
    },
    "dbase_get_record": {
        "prefix": "dbase_get_record",
        "body": "dbase_get_record(${1:dbase_identifier}, ${2:record_number})$0"
    },
    "dbase_get_record_with_names": {
        "prefix": "dbase_get_record_with_names",
        "body": "dbase_get_record_with_names(${1:dbase_identifier}, ${2:record_number})$0"
    },
    "dbase_numfields": {
        "prefix": "dbase_numfields",
        "body": "dbase_numfields(${1:dbase_identifier})$0"
    },
    "dbase_numrecords": {
        "prefix": "dbase_numrecords",
        "body": "dbase_numrecords(${1:dbase_identifier})$0"
    },
    "dbase_open": {
        "prefix": "dbase_open",
        "body": "dbase_open(${1:filename}, ${2:mode})$0"
    },
    "dbase_pack": {
        "prefix": "dbase_pack",
        "body": "dbase_pack(${1:dbase_identifier})$0"
    },
    "dbase_replace_record": {
        "prefix": "dbase_replace_record",
        "body": "dbase_replace_record(${1:dbase_identifier}, ${2:record}, ${3:record_number})$0"
    },
    "dbplus_add": {
        "prefix": "dbplus_add",
        "body": "dbplus_add(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_aql": {
        "prefix": "dbplus_aql",
        "body": "dbplus_aql(${1:query})$0"
    },
    "dbplus_chdir": {
        "prefix": "dbplus_chdir",
        "body": "dbplus_chdir()$0"
    },
    "dbplus_close": {
        "prefix": "dbplus_close",
        "body": "dbplus_close(${1:relation})$0"
    },
    "dbplus_curr": {
        "prefix": "dbplus_curr",
        "body": "dbplus_curr(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_errcode": {
        "prefix": "dbplus_errcode",
        "body": "dbplus_errcode()$0"
    },
    "dbplus_errno": {
        "prefix": "dbplus_errno",
        "body": "dbplus_errno()$0"
    },
    "dbplus_find": {
        "prefix": "dbplus_find",
        "body": "dbplus_find(${1:relation}, ${2:constraints}, ${3:tuple})$0"
    },
    "dbplus_first": {
        "prefix": "dbplus_first",
        "body": "dbplus_first(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_flush": {
        "prefix": "dbplus_flush",
        "body": "dbplus_flush(${1:relation})$0"
    },
    "dbplus_freealllocks": {
        "prefix": "dbplus_freealllocks",
        "body": "dbplus_freealllocks()$0"
    },
    "dbplus_freelock": {
        "prefix": "dbplus_freelock",
        "body": "dbplus_freelock(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_freerlocks": {
        "prefix": "dbplus_freerlocks",
        "body": "dbplus_freerlocks(${1:relation})$0"
    },
    "dbplus_getlock": {
        "prefix": "dbplus_getlock",
        "body": "dbplus_getlock(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_getunique": {
        "prefix": "dbplus_getunique",
        "body": "dbplus_getunique(${1:relation}, ${2:uniqueid})$0"
    },
    "dbplus_info": {
        "prefix": "dbplus_info",
        "body": "dbplus_info(${1:relation}, ${2:key}, ${3:result})$0"
    },
    "dbplus_last": {
        "prefix": "dbplus_last",
        "body": "dbplus_last(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_lockrel": {
        "prefix": "dbplus_lockrel",
        "body": "dbplus_lockrel(${1:relation})$0"
    },
    "dbplus_next": {
        "prefix": "dbplus_next",
        "body": "dbplus_next(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_open": {
        "prefix": "dbplus_open",
        "body": "dbplus_open(${1:name})$0"
    },
    "dbplus_prev": {
        "prefix": "dbplus_prev",
        "body": "dbplus_prev(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_rchperm": {
        "prefix": "dbplus_rchperm",
        "body": "dbplus_rchperm(${1:relation}, ${2:mask}, ${3:user}, ${4:group})$0"
    },
    "dbplus_rcreate": {
        "prefix": "dbplus_rcreate",
        "body": "dbplus_rcreate(${1:name}, ${2:domlist})$0"
    },
    "dbplus_rcrtexact": {
        "prefix": "dbplus_rcrtexact",
        "body": "dbplus_rcrtexact(${1:name}, ${2:relation})$0"
    },
    "dbplus_rcrtlike": {
        "prefix": "dbplus_rcrtlike",
        "body": "dbplus_rcrtlike(${1:name}, ${2:relation})$0"
    },
    "dbplus_resolve": {
        "prefix": "dbplus_resolve",
        "body": "dbplus_resolve(${1:relation_name})$0"
    },
    "dbplus_restorepos": {
        "prefix": "dbplus_restorepos",
        "body": "dbplus_restorepos(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_rkeys": {
        "prefix": "dbplus_rkeys",
        "body": "dbplus_rkeys(${1:relation}, ${2:domlist})$0"
    },
    "dbplus_ropen": {
        "prefix": "dbplus_ropen",
        "body": "dbplus_ropen(${1:name})$0"
    },
    "dbplus_rquery": {
        "prefix": "dbplus_rquery",
        "body": "dbplus_rquery(${1:query})$0"
    },
    "dbplus_rrename": {
        "prefix": "dbplus_rrename",
        "body": "dbplus_rrename(${1:relation}, ${2:name})$0"
    },
    "dbplus_rsecindex": {
        "prefix": "dbplus_rsecindex",
        "body": "dbplus_rsecindex(${1:relation}, ${2:domlist}, ${3:type})$0"
    },
    "dbplus_runlink": {
        "prefix": "dbplus_runlink",
        "body": "dbplus_runlink(${1:relation})$0"
    },
    "dbplus_rzap": {
        "prefix": "dbplus_rzap",
        "body": "dbplus_rzap(${1:relation})$0"
    },
    "dbplus_savepos": {
        "prefix": "dbplus_savepos",
        "body": "dbplus_savepos(${1:relation})$0"
    },
    "dbplus_setindex": {
        "prefix": "dbplus_setindex",
        "body": "dbplus_setindex(${1:relation}, ${2:idx_name})$0"
    },
    "dbplus_setindexbynumber": {
        "prefix": "dbplus_setindexbynumber",
        "body": "dbplus_setindexbynumber(${1:relation}, ${2:idx_number})$0"
    },
    "dbplus_sql": {
        "prefix": "dbplus_sql",
        "body": "dbplus_sql(${1:query})$0"
    },
    "dbplus_tcl": {
        "prefix": "dbplus_tcl",
        "body": "dbplus_tcl(${1:sid}, ${2:script})$0"
    },
    "dbplus_tremove": {
        "prefix": "dbplus_tremove",
        "body": "dbplus_tremove(${1:relation}, ${2:tuple})$0"
    },
    "dbplus_undo": {
        "prefix": "dbplus_undo",
        "body": "dbplus_undo(${1:relation})$0"
    },
    "dbplus_undoprepare": {
        "prefix": "dbplus_undoprepare",
        "body": "dbplus_undoprepare(${1:relation})$0"
    },
    "dbplus_unlockrel": {
        "prefix": "dbplus_unlockrel",
        "body": "dbplus_unlockrel(${1:relation})$0"
    },
    "dbplus_unselect": {
        "prefix": "dbplus_unselect",
        "body": "dbplus_unselect(${1:relation})$0"
    },
    "dbplus_update": {
        "prefix": "dbplus_update",
        "body": "dbplus_update(${1:relation}, ${2:old}, ${3:new})$0"
    },
    "dbplus_xlockrel": {
        "prefix": "dbplus_xlockrel",
        "body": "dbplus_xlockrel(${1:relation})$0"
    },
    "dbplus_xunlockrel": {
        "prefix": "dbplus_xunlockrel",
        "body": "dbplus_xunlockrel(${1:relation})$0"
    },
    "dbx_close": {
        "prefix": "dbx_close",
        "body": "dbx_close(${1:link_identifier})$0"
    },
    "dbx_compare": {
        "prefix": "dbx_compare",
        "body": "dbx_compare(${1:row_a}, ${2:row_b}, ${3:column_key})$0"
    },
    "dbx_connect": {
        "prefix": "dbx_connect",
        "body": "dbx_connect(${1:module}, ${2:host}, ${3:database}, ${4:username}, ${5:password})$0"
    },
    "dbx_error": {
        "prefix": "dbx_error",
        "body": "dbx_error(${1:link_identifier})$0"
    },
    "dbx_escape_string": {
        "prefix": "dbx_escape_string",
        "body": "dbx_escape_string(${1:link_identifier}, ${2:text})$0"
    },
    "dbx_fetch_row": {
        "prefix": "dbx_fetch_row",
        "body": "dbx_fetch_row(${1:result_identifier})$0"
    },
    "dbx_query": {
        "prefix": "dbx_query",
        "body": "dbx_query(${1:link_identifier}, ${2:sql_statement})$0"
    },
    "dbx_sort": {
        "prefix": "dbx_sort",
        "body": "dbx_sort(${1:result}, ${2:user_compare_function})$0"
    },
    "dcgettext": {
        "prefix": "dcgettext",
        "body": "dcgettext(${1:domain}, ${2:message}, ${3:category})$0"
    },
    "dcngettext": {
        "prefix": "dcngettext",
        "body": "dcngettext(${1:domain}, ${2:msgid1}, ${3:msgid2}, ${4:n}, ${5:category})$0"
    },
    "deaggregate": {
        "prefix": "deaggregate",
        "body": "deaggregate(${1:object})$0"
    },
    "debug_backtrace": {
        "prefix": "debug_backtrace",
        "body": "debug_backtrace()$0"
    },
    "debug_print_backtrace": {
        "prefix": "debug_print_backtrace",
        "body": "debug_print_backtrace()$0"
    },
    "debug_zval_dump": {
        "prefix": "debug_zval_dump",
        "body": "debug_zval_dump(${1:variable})$0"
    },
    "decbin": {
        "prefix": "decbin",
        "body": "decbin(${1:number})$0"
    },
    "dechex": {
        "prefix": "dechex",
        "body": "dechex(${1:number})$0"
    },
    "decoct": {
        "prefix": "decoct",
        "body": "decoct(${1:number})$0"
    },
    "define": {
        "prefix": "define",
        "body": "definisikan(${1:name}, ${2:value})$0"
    },
    "definisikan": {
        "prefix": "definisikan",
        "body": "definisikan(${1:name}, ${2:value})$0"
    },
    "define_syslog_variables": {
        "prefix": "define_syslog_variables",
        "body": "define_syslog_variables()$0"
    },
    "defined": {
        "prefix": "defined",
        "body": "terdefinisi(${1:name})$0"
    },
    "terdefinisi": {
        "prefix": "terdefinisi",
        "body": "terdefinisi(${1:name})$0"
    },
    "deg2rad": {
        "prefix": "deg2rad",
        "body": "deg2rad(${1:number})$0"
    },
    "delete": {
        "prefix": "delete",
        "body": "delete()$0"
    },
    "dgettext": {
        "prefix": "dgettext",
        "body": "dgettext(${1:domain}, ${2:message})$0"
    },
    "die": {
        "prefix": "die",
        "body": "mati()$0"
    },
    "mati": {
        "prefix": "mati",
        "body": "mati()$0"
    },
    "dio_close": {
        "prefix": "dio_close",
        "body": "dio_close(${1:fd})$0"
    },
    "dio_fcntl": {
        "prefix": "dio_fcntl",
        "body": "dio_fcntl(${1:fd}, ${2:cmd})$0"
    },
    "dio_open": {
        "prefix": "dio_open",
        "body": "dio_open(${1:filename}, ${2:flags})$0"
    },
    "dio_read": {
        "prefix": "dio_read",
        "body": "dio_read(${1:fd})$0"
    },
    "dio_seek": {
        "prefix": "dio_seek",
        "body": "dio_seek(${1:fd}, ${2:pos})$0"
    },
    "dio_stat": {
        "prefix": "dio_stat",
        "body": "dio_stat(${1:fd})$0"
    },
    "dio_tcsetattr": {
        "prefix": "dio_tcsetattr",
        "body": "dio_tcsetattr(${1:fd}, ${2:options})$0"
    },
    "dio_truncate": {
        "prefix": "dio_truncate",
        "body": "dio_truncate(${1:fd}, ${2:offset})$0"
    },
    "dio_write": {
        "prefix": "dio_write",
        "body": "dio_write(${1:fd}, ${2:data})$0"
    },
    "dirname": {
        "prefix": "dirname",
        "body": "dirname(${1:path})$0"
    },
    "disk_free_space": {
        "prefix": "disk_free_space",
        "body": "disk_free_space(${1:directory})$0"
    },
    "disk_total_space": {
        "prefix": "disk_total_space",
        "body": "disk_total_space(${1:directory})$0"
    },
    "diskfreespace": {
        "prefix": "diskfreespace",
        "body": "diskfreespace()$0"
    },
    "dl": {
        "prefix": "dl",
        "body": "dl(${1:library})$0"
    },
    "dngettext": {
        "prefix": "dngettext",
        "body": "dngettext(${1:domain}, ${2:msgid1}, ${3:msgid2}, ${4:n})$0"
    },
    "dns_check_record": {
        "prefix": "dns_check_record",
        "body": "dns_check_record()$0"
    },
    "dns_get_mx": {
        "prefix": "dns_get_mx",
        "body": "dns_get_mx()$0"
    },
    "dns_get_record": {
        "prefix": "dns_get_record",
        "body": "dns_get_record(${1:hostname})$0"
    },
    "dom_import_simplexml": {
        "prefix": "dom_import_simplexml",
        "body": "dom_import_simplexml(${1:node})$0"
    },
    "domxml_new_doc": {
        "prefix": "domxml_new_doc",
        "body": "domxml_new_doc(${1:version})$0"
    },
    "domxml_open_file": {
        "prefix": "domxml_open_file",
        "body": "domxml_open_file(${1:filename})$0"
    },
    "domxml_open_mem": {
        "prefix": "domxml_open_mem",
        "body": "domxml_open_mem(${1:str})$0"
    },
    "domxml_version": {
        "prefix": "domxml_version",
        "body": "domxml_version()$0"
    },
    "domxml_xmltree": {
        "prefix": "domxml_xmltree",
        "body": "domxml_xmltree(${1:str})$0"
    },
    "domxml_xslt_stylesheet": {
        "prefix": "domxml_xslt_stylesheet",
        "body": "domxml_xslt_stylesheet(${1:xsl_buf})$0"
    },
    "domxml_xslt_stylesheet_doc": {
        "prefix": "domxml_xslt_stylesheet_doc",
        "body": "domxml_xslt_stylesheet_doc(${1:xsl_doc})$0"
    },
    "domxml_xslt_stylesheet_file": {
        "prefix": "domxml_xslt_stylesheet_file",
        "body": "domxml_xslt_stylesheet_file(${1:xsl_file})$0"
    },
    "domxml_xslt_version": {
        "prefix": "domxml_xslt_version",
        "body": "domxml_xslt_version()$0"
    },
    "dotnet_load": {
        "prefix": "dotnet_load",
        "body": "dotnet_load(${1:assembly_name})$0"
    },
    "doubleval": {
        "prefix": "doubleval",
        "body": "doubleval()$0"
    },
    "each": {
        "prefix": "each",
        "body": "each(${1:array})$0"
    },
    "easter_date": {
        "prefix": "easter_date",
        "body": "easter_date()$0"
    },
    "easter_days": {
        "prefix": "easter_days",
        "body": "easter_days()$0"
    },
    "echo": {
        "prefix": "echo",
        "body": "tampil(${1:arg1})$0"
    },
    "tampil": {
        "prefix": "tampil",
        "body": "tampil(${1:arg1})$0"
    },
    "empty": {
        "prefix": "empty",
        "body": "kosong(${1:var})$0"
    },
    "kosong": {
        "prefix": "kosong",
        "body": "kosong(${1:var})$0"
    },
    "enchant_broker_describe": {
        "prefix": "enchant_broker_describe",
        "body": "enchant_broker_describe(${1:broker})$0"
    },
    "enchant_broker_dict_exists": {
        "prefix": "enchant_broker_dict_exists",
        "body": "enchant_broker_dict_exists(${1:broker}, ${2:tag})$0"
    },
    "enchant_broker_free": {
        "prefix": "enchant_broker_free",
        "body": "enchant_broker_free(${1:broker})$0"
    },
    "enchant_broker_free_dict": {
        "prefix": "enchant_broker_free_dict",
        "body": "enchant_broker_free_dict(${1:dict})$0"
    },
    "enchant_broker_get_error": {
        "prefix": "enchant_broker_get_error",
        "body": "enchant_broker_get_error(${1:broker})$0"
    },
    "enchant_broker_init": {
        "prefix": "enchant_broker_init",
        "body": "enchant_broker_init()$0"
    },
    "enchant_broker_list_dicts": {
        "prefix": "enchant_broker_list_dicts",
        "body": "enchant_broker_list_dicts(${1:broker})$0"
    },
    "enchant_broker_request_dict": {
        "prefix": "enchant_broker_request_dict",
        "body": "enchant_broker_request_dict(${1:broker}, ${2:tag})$0"
    },
    "enchant_broker_request_pwl_dict": {
        "prefix": "enchant_broker_request_pwl_dict",
        "body": "enchant_broker_request_pwl_dict(${1:broker}, ${2:filename})$0"
    },
    "enchant_broker_set_ordering": {
        "prefix": "enchant_broker_set_ordering",
        "body": "enchant_broker_set_ordering(${1:broker}, ${2:tag}, ${3:ordering})$0"
    },
    "enchant_dict_add_to_personal": {
        "prefix": "enchant_dict_add_to_personal",
        "body": "enchant_dict_add_to_personal(${1:dict}, ${2:word})$0"
    },
    "enchant_dict_add_to_session": {
        "prefix": "enchant_dict_add_to_session",
        "body": "enchant_dict_add_to_session(${1:dict}, ${2:word})$0"
    },
    "enchant_dict_check": {
        "prefix": "enchant_dict_check",
        "body": "enchant_dict_check(${1:dict}, ${2:word})$0"
    },
    "enchant_dict_describe": {
        "prefix": "enchant_dict_describe",
        "body": "enchant_dict_describe(${1:dict})$0"
    },
    "enchant_dict_get_error": {
        "prefix": "enchant_dict_get_error",
        "body": "enchant_dict_get_error(${1:dict})$0"
    },
    "enchant_dict_is_in_session": {
        "prefix": "enchant_dict_is_in_session",
        "body": "enchant_dict_is_in_session(${1:dict}, ${2:word})$0"
    },
    "enchant_dict_quick_check": {
        "prefix": "enchant_dict_quick_check",
        "body": "enchant_dict_quick_check(${1:dict}, ${2:word})$0"
    },
    "enchant_dict_store_replacement": {
        "prefix": "enchant_dict_store_replacement",
        "body": "enchant_dict_store_replacement(${1:dict}, ${2:mis}, ${3:cor})$0"
    },
    "enchant_dict_suggest": {
        "prefix": "enchant_dict_suggest",
        "body": "enchant_dict_suggest(${1:dict}, ${2:word})$0"
    },
    "end": {
        "prefix": "end",
        "body": "end(${1:array})$0"
    },
    "ereg": {
        "prefix": "ereg",
        "body": "ereg(${1:pattern}, ${2:string})$0"
    },
    "ereg_replace": {
        "prefix": "ereg_replace",
        "body": "ereg_replace(${1:pattern}, ${2:replacement}, ${3:string})$0"
    },
    "eregi": {
        "prefix": "eregi",
        "body": "eregi(${1:pattern}, ${2:string})$0"
    },
    "eregi_replace": {
        "prefix": "eregi_replace",
        "body": "eregi_replace(${1:pattern}, ${2:replacement}, ${3:string})$0"
    },
    "error_get_last": {
        "prefix": "error_get_last",
        "body": "error_get_last()$0"
    },
    "error_log": {
        "prefix": "error_log",
        "body": "error_log(${1:message})$0"
    },
    "error_reporting": {
        "prefix": "error_reporting",
        "body": "error_reporting()$0"
    },
    "escapeshellarg": {
        "prefix": "escapeshellarg",
        "body": "escapeshellarg(${1:arg})$0"
    },
    "escapeshellcmd": {
        "prefix": "escapeshellcmd",
        "body": "escapeshellcmd(${1:command})$0"
    },
    "eval": {
        "prefix": "eval",
        "body": "jalankan(${1:code_str})$0"
    },
    "event_add": {
        "prefix": "event_add",
        "body": "event_add(${1:event})$0"
    },
    "event_base_free": {
        "prefix": "event_base_free",
        "body": "event_base_free(${1:event_base})$0"
    },
    "event_base_loop": {
        "prefix": "event_base_loop",
        "body": "event_base_loop(${1:event_base})$0"
    },
    "event_base_loopbreak": {
        "prefix": "event_base_loopbreak",
        "body": "event_base_loopbreak(${1:event_base})$0"
    },
    "event_base_loopexit": {
        "prefix": "event_base_loopexit",
        "body": "event_base_loopexit(${1:event_base})$0"
    },
    "event_base_new": {
        "prefix": "event_base_new",
        "body": "event_base_new()$0"
    },
    "event_base_priority_init": {
        "prefix": "event_base_priority_init",
        "body": "event_base_priority_init(${1:event_base}, ${2:npriorities})$0"
    },
    "event_base_set": {
        "prefix": "event_base_set",
        "body": "event_base_set(${1:event}, ${2:event_base})$0"
    },
    "event_buffer_base_set": {
        "prefix": "event_buffer_base_set",
        "body": "event_buffer_base_set(${1:bevent}, ${2:event_base})$0"
    },
    "event_buffer_disable": {
        "prefix": "event_buffer_disable",
        "body": "event_buffer_disable(${1:bevent}, ${2:events})$0"
    },
    "event_buffer_enable": {
        "prefix": "event_buffer_enable",
        "body": "event_buffer_enable(${1:bevent}, ${2:events})$0"
    },
    "event_buffer_fd_set": {
        "prefix": "event_buffer_fd_set",
        "body": "event_buffer_fd_set(${1:bevent}, ${2:fd})$0"
    },
    "event_buffer_free": {
        "prefix": "event_buffer_free",
        "body": "event_buffer_free(${1:bevent})$0"
    },
    "event_buffer_new": {
        "prefix": "event_buffer_new",
        "body": "event_buffer_new(${1:stream}, ${2:readcb}, ${3:writecb}, ${4:errorcb})$0"
    },
    "event_buffer_priority_set": {
        "prefix": "event_buffer_priority_set",
        "body": "event_buffer_priority_set(${1:bevent}, ${2:priority})$0"
    },
    "event_buffer_read": {
        "prefix": "event_buffer_read",
        "body": "event_buffer_read(${1:bevent}, ${2:data_size})$0"
    },
    "event_buffer_set_callback": {
        "prefix": "event_buffer_set_callback",
        "body": "event_buffer_set_callback(${1:event}, ${2:readcb}, ${3:writecb}, ${4:errorcb})$0"
    },
    "event_buffer_timeout_set": {
        "prefix": "event_buffer_timeout_set",
        "body": "event_buffer_timeout_set(${1:bevent}, ${2:read_timeout}, ${3:write_timeout})$0"
    },
    "event_buffer_watermark_set": {
        "prefix": "event_buffer_watermark_set",
        "body": "event_buffer_watermark_set(${1:bevent}, ${2:events}, ${3:lowmark}, ${4:highmark})$0"
    },
    "event_buffer_write": {
        "prefix": "event_buffer_write",
        "body": "event_buffer_write(${1:bevent}, ${2:data})$0"
    },
    "event_del": {
        "prefix": "event_del",
        "body": "event_del(${1:event})$0"
    },
    "event_free": {
        "prefix": "event_free",
        "body": "event_free(${1:event})$0"
    },
    "event_new": {
        "prefix": "event_new",
        "body": "event_new()$0"
    },
    "event_set": {
        "prefix": "event_set",
        "body": "event_set(${1:event}, ${2:fd}, ${3:events}, ${4:callback})$0"
    },
    "exec": {
        "prefix": "exec",
        "body": "exec(${1:command})$0"
    },
    "exif_imagetype": {
        "prefix": "exif_imagetype",
        "body": "exif_imagetype(${1:filename})$0"
    },
    "exif_read_data": {
        "prefix": "exif_read_data",
        "body": "exif_read_data(${1:filename})$0"
    },
    "exif_tagname": {
        "prefix": "exif_tagname",
        "body": "exif_tagname(${1:index})$0"
    },
    "exif_thumbnail": {
        "prefix": "exif_thumbnail",
        "body": "exif_thumbnail(${1:filename})$0"
    },
    "exit": {
        "prefix": "exit",
        "body": "keluar()$0"
    },
    "keluar": {
        "prefix": "keluar",
        "body": "keluar()$0"
    },
    "exp": {
        "prefix": "exp",
        "body": "exp(${1:arg})$0"
    },
    "expect_expectl": {
        "prefix": "expect_expectl",
        "body": "expect_expectl(${1:expect}, ${2:cases})$0"
    },
    "expect_popen": {
        "prefix": "expect_popen",
        "body": "expect_popen(${1:command})$0"
    },
    "explode": {
        "prefix": "explode",
        "body": "explode(${1:delimiter}, ${2:string})$0"
    },
    "expm1": {
        "prefix": "expm1",
        "body": "expm1(${1:arg})$0"
    },
    "extension_loaded": {
        "prefix": "extension_loaded",
        "body": "extension_loaded(${1:name})$0"
    },
    "extract": {
        "prefix": "extract",
        "body": "extract(${1:var_array})$0"
    },
    "ezmlm_hash": {
        "prefix": "ezmlm_hash",
        "body": "ezmlm_hash(${1:addr})$0"
    },
    "fam_cancel_monitor": {
        "prefix": "fam_cancel_monitor",
        "body": "fam_cancel_monitor(${1:fam}, ${2:fam_monitor})$0"
    },
    "fam_close": {
        "prefix": "fam_close",
        "body": "fam_close(${1:fam})$0"
    },
    "fam_monitor_collection": {
        "prefix": "fam_monitor_collection",
        "body": "fam_monitor_collection(${1:fam}, ${2:dirname}, ${3:depth}, ${4:mask})$0"
    },
    "fam_monitor_directory": {
        "prefix": "fam_monitor_directory",
        "body": "fam_monitor_directory(${1:fam}, ${2:dirname})$0"
    },
    "fam_monitor_file": {
        "prefix": "fam_monitor_file",
        "body": "fam_monitor_file(${1:fam}, ${2:filename})$0"
    },
    "fam_next_event": {
        "prefix": "fam_next_event",
        "body": "fam_next_event(${1:fam})$0"
    },
    "fam_open": {
        "prefix": "fam_open",
        "body": "fam_open()$0"
    },
    "fam_pending": {
        "prefix": "fam_pending",
        "body": "fam_pending(${1:fam})$0"
    },
    "fam_resume_monitor": {
        "prefix": "fam_resume_monitor",
        "body": "fam_resume_monitor(${1:fam}, ${2:fam_monitor})$0"
    },
    "fam_suspend_monitor": {
        "prefix": "fam_suspend_monitor",
        "body": "fam_suspend_monitor(${1:fam}, ${2:fam_monitor})$0"
    },
    "fbsql_affected_rows": {
        "prefix": "fbsql_affected_rows",
        "body": "fbsql_affected_rows()$0"
    },
    "fbsql_autocommit": {
        "prefix": "fbsql_autocommit",
        "body": "fbsql_autocommit(${1:link_identifier})$0"
    },
    "fbsql_blob_size": {
        "prefix": "fbsql_blob_size",
        "body": "fbsql_blob_size(${1:blob_handle})$0"
    },
    "fbsql_change_user": {
        "prefix": "fbsql_change_user",
        "body": "fbsql_change_user(${1:user}, ${2:password})$0"
    },
    "fbsql_clob_size": {
        "prefix": "fbsql_clob_size",
        "body": "fbsql_clob_size(${1:clob_handle})$0"
    },
    "fbsql_close": {
        "prefix": "fbsql_close",
        "body": "fbsql_close()$0"
    },
    "fbsql_commit": {
        "prefix": "fbsql_commit",
        "body": "fbsql_commit()$0"
    },
    "fbsql_connect": {
        "prefix": "fbsql_connect",
        "body": "fbsql_connect()$0"
    },
    "fbsql_create_blob": {
        "prefix": "fbsql_create_blob",
        "body": "fbsql_create_blob(${1:blob_data})$0"
    },
    "fbsql_create_clob": {
        "prefix": "fbsql_create_clob",
        "body": "fbsql_create_clob(${1:clob_data})$0"
    },
    "fbsql_create_db": {
        "prefix": "fbsql_create_db",
        "body": "fbsql_create_db(${1:database_name})$0"
    },
    "fbsql_data_seek": {
        "prefix": "fbsql_data_seek",
        "body": "fbsql_data_seek(${1:result}, ${2:row_number})$0"
    },
    "fbsql_database": {
        "prefix": "fbsql_database",
        "body": "fbsql_database(${1:link_identifier})$0"
    },
    "fbsql_database_password": {
        "prefix": "fbsql_database_password",
        "body": "fbsql_database_password(${1:link_identifier})$0"
    },
    "fbsql_db_query": {
        "prefix": "fbsql_db_query",
        "body": "fbsql_db_query(${1:database}, ${2:query})$0"
    },
    "fbsql_db_status": {
        "prefix": "fbsql_db_status",
        "body": "fbsql_db_status(${1:database_name})$0"
    },
    "fbsql_drop_db": {
        "prefix": "fbsql_drop_db",
        "body": "fbsql_drop_db(${1:database_name})$0"
    },
    "fbsql_errno": {
        "prefix": "fbsql_errno",
        "body": "fbsql_errno()$0"
    },
    "fbsql_error": {
        "prefix": "fbsql_error",
        "body": "fbsql_error()$0"
    },
    "fbsql_fetch_array": {
        "prefix": "fbsql_fetch_array",
        "body": "fbsql_fetch_array(${1:result})$0"
    },
    "fbsql_fetch_assoc": {
        "prefix": "fbsql_fetch_assoc",
        "body": "fbsql_fetch_assoc(${1:result})$0"
    },
    "fbsql_fetch_field": {
        "prefix": "fbsql_fetch_field",
        "body": "fbsql_fetch_field(${1:result})$0"
    },
    "fbsql_fetch_lengths": {
        "prefix": "fbsql_fetch_lengths",
        "body": "fbsql_fetch_lengths(${1:result})$0"
    },
    "fbsql_fetch_object": {
        "prefix": "fbsql_fetch_object",
        "body": "fbsql_fetch_object(${1:result})$0"
    },
    "fbsql_fetch_row": {
        "prefix": "fbsql_fetch_row",
        "body": "fbsql_fetch_row(${1:result})$0"
    },
    "fbsql_field_flags": {
        "prefix": "fbsql_field_flags",
        "body": "fbsql_field_flags(${1:result})$0"
    },
    "fbsql_field_len": {
        "prefix": "fbsql_field_len",
        "body": "fbsql_field_len(${1:result})$0"
    },
    "fbsql_field_name": {
        "prefix": "fbsql_field_name",
        "body": "fbsql_field_name(${1:result})$0"
    },
    "fbsql_field_seek": {
        "prefix": "fbsql_field_seek",
        "body": "fbsql_field_seek(${1:result})$0"
    },
    "fbsql_field_table": {
        "prefix": "fbsql_field_table",
        "body": "fbsql_field_table(${1:result})$0"
    },
    "fbsql_field_type": {
        "prefix": "fbsql_field_type",
        "body": "fbsql_field_type(${1:result})$0"
    },
    "fbsql_free_result": {
        "prefix": "fbsql_free_result",
        "body": "fbsql_free_result(${1:result})$0"
    },
    "fbsql_get_autostart_info": {
        "prefix": "fbsql_get_autostart_info",
        "body": "fbsql_get_autostart_info()$0"
    },
    "fbsql_hostname": {
        "prefix": "fbsql_hostname",
        "body": "fbsql_hostname(${1:link_identifier})$0"
    },
    "fbsql_insert_id": {
        "prefix": "fbsql_insert_id",
        "body": "fbsql_insert_id()$0"
    },
    "fbsql_list_dbs": {
        "prefix": "fbsql_list_dbs",
        "body": "fbsql_list_dbs()$0"
    },
    "fbsql_list_fields": {
        "prefix": "fbsql_list_fields",
        "body": "fbsql_list_fields(${1:database_name}, ${2:table_name})$0"
    },
    "fbsql_list_tables": {
        "prefix": "fbsql_list_tables",
        "body": "fbsql_list_tables(${1:database})$0"
    },
    "fbsql_next_result": {
        "prefix": "fbsql_next_result",
        "body": "fbsql_next_result(${1:result})$0"
    },
    "fbsql_num_fields": {
        "prefix": "fbsql_num_fields",
        "body": "fbsql_num_fields(${1:result})$0"
    },
    "fbsql_num_rows": {
        "prefix": "fbsql_num_rows",
        "body": "fbsql_num_rows(${1:result})$0"
    },
    "fbsql_password": {
        "prefix": "fbsql_password",
        "body": "fbsql_password(${1:link_identifier})$0"
    },
    "fbsql_pconnect": {
        "prefix": "fbsql_pconnect",
        "body": "fbsql_pconnect()$0"
    },
    "fbsql_query": {
        "prefix": "fbsql_query",
        "body": "fbsql_query(${1:query})$0"
    },
    "fbsql_read_blob": {
        "prefix": "fbsql_read_blob",
        "body": "fbsql_read_blob(${1:blob_handle})$0"
    },
    "fbsql_read_clob": {
        "prefix": "fbsql_read_clob",
        "body": "fbsql_read_clob(${1:clob_handle})$0"
    },
    "fbsql_result": {
        "prefix": "fbsql_result",
        "body": "fbsql_result(${1:result})$0"
    },
    "fbsql_rollback": {
        "prefix": "fbsql_rollback",
        "body": "fbsql_rollback()$0"
    },
    "fbsql_rows_fetched": {
        "prefix": "fbsql_rows_fetched",
        "body": "fbsql_rows_fetched(${1:result})$0"
    },
    "fbsql_select_db": {
        "prefix": "fbsql_select_db",
        "body": "fbsql_select_db()$0"
    },
    "fbsql_set_characterset": {
        "prefix": "fbsql_set_characterset",
        "body": "fbsql_set_characterset(${1:link_identifier}, ${2:characterset})$0"
    },
    "fbsql_set_lob_mode": {
        "prefix": "fbsql_set_lob_mode",
        "body": "fbsql_set_lob_mode(${1:result}, ${2:lob_mode})$0"
    },
    "fbsql_set_password": {
        "prefix": "fbsql_set_password",
        "body": "fbsql_set_password(${1:link_identifier}, ${2:user}, ${3:password}, ${4:old_password})$0"
    },
    "fbsql_set_transaction": {
        "prefix": "fbsql_set_transaction",
        "body": "fbsql_set_transaction(${1:link_identifier}, ${2:locking}, ${3:isolation})$0"
    },
    "fbsql_start_db": {
        "prefix": "fbsql_start_db",
        "body": "fbsql_start_db(${1:database_name})$0"
    },
    "fbsql_stop_db": {
        "prefix": "fbsql_stop_db",
        "body": "fbsql_stop_db(${1:database_name})$0"
    },
    "fbsql_table_name": {
        "prefix": "fbsql_table_name",
        "body": "fbsql_table_name(${1:result}, ${2:index})$0"
    },
    "fbsql_tablename": {
        "prefix": "fbsql_tablename",
        "body": "fbsql_tablename()$0"
    },
    "fbsql_username": {
        "prefix": "fbsql_username",
        "body": "fbsql_username(${1:link_identifier})$0"
    },
    "fbsql_warnings": {
        "prefix": "fbsql_warnings",
        "body": "fbsql_warnings()$0"
    },
    "fclose": {
        "prefix": "fclose",
        "body": "fclose(${1:handle})$0"
    },
    "fdf_add_doc_javascript": {
        "prefix": "fdf_add_doc_javascript",
        "body": "fdf_add_doc_javascript(${1:fdf_document}, ${2:script_name}, ${3:script_code})$0"
    },
    "fdf_add_template": {
        "prefix": "fdf_add_template",
        "body": "fdf_add_template(${1:fdf_document}, ${2:newpage}, ${3:filename}, ${4:template}, ${5:rename})$0"
    },
    "fdf_close": {
        "prefix": "fdf_close",
        "body": "fdf_close(${1:fdf_document})$0"
    },
    "fdf_create": {
        "prefix": "fdf_create",
        "body": "fdf_create()$0"
    },
    "fdf_enum_values": {
        "prefix": "fdf_enum_values",
        "body": "fdf_enum_values(${1:fdf_document}, ${2:function})$0"
    },
    "fdf_errno": {
        "prefix": "fdf_errno",
        "body": "fdf_errno()$0"
    },
    "fdf_error": {
        "prefix": "fdf_error",
        "body": "fdf_error()$0"
    },
    "fdf_get_ap": {
        "prefix": "fdf_get_ap",
        "body": "fdf_get_ap(${1:fdf_document}, ${2:field}, ${3:face}, ${4:filename})$0"
    },
    "fdf_get_attachment": {
        "prefix": "fdf_get_attachment",
        "body": "fdf_get_attachment(${1:fdf_document}, ${2:fieldname}, ${3:savepath})$0"
    },
    "fdf_get_encoding": {
        "prefix": "fdf_get_encoding",
        "body": "fdf_get_encoding(${1:fdf_document})$0"
    },
    "fdf_get_file": {
        "prefix": "fdf_get_file",
        "body": "fdf_get_file(${1:fdf_document})$0"
    },
    "fdf_get_flags": {
        "prefix": "fdf_get_flags",
        "body": "fdf_get_flags(${1:fdf_document}, ${2:fieldname}, ${3:whichflags})$0"
    },
    "fdf_get_opt": {
        "prefix": "fdf_get_opt",
        "body": "fdf_get_opt(${1:fdf_document}, ${2:fieldname})$0"
    },
    "fdf_get_status": {
        "prefix": "fdf_get_status",
        "body": "fdf_get_status(${1:fdf_document})$0"
    },
    "fdf_get_value": {
        "prefix": "fdf_get_value",
        "body": "fdf_get_value(${1:fdf_document}, ${2:fieldname})$0"
    },
    "fdf_get_version": {
        "prefix": "fdf_get_version",
        "body": "fdf_get_version()$0"
    },
    "fdf_header": {
        "prefix": "fdf_header",
        "body": "fdf_header()$0"
    },
    "fdf_next_field_name": {
        "prefix": "fdf_next_field_name",
        "body": "fdf_next_field_name(${1:fdf_document})$0"
    },
    "fdf_open": {
        "prefix": "fdf_open",
        "body": "fdf_open(${1:filename})$0"
    },
    "fdf_open_string": {
        "prefix": "fdf_open_string",
        "body": "fdf_open_string(${1:fdf_data})$0"
    },
    "fdf_remove_item": {
        "prefix": "fdf_remove_item",
        "body": "fdf_remove_item(${1:fdf_document}, ${2:fieldname}, ${3:item})$0"
    },
    "fdf_save": {
        "prefix": "fdf_save",
        "body": "fdf_save(${1:fdf_document})$0"
    },
    "fdf_save_string": {
        "prefix": "fdf_save_string",
        "body": "fdf_save_string(${1:fdf_document})$0"
    },
    "fdf_set_ap": {
        "prefix": "fdf_set_ap",
        "body": "fdf_set_ap(${1:fdf_document}, ${2:field_name}, ${3:face}, ${4:filename}, ${5:page_number})$0"
    },
    "fdf_set_encoding": {
        "prefix": "fdf_set_encoding",
        "body": "fdf_set_encoding(${1:fdf_document}, ${2:encoding})$0"
    },
    "fdf_set_file": {
        "prefix": "fdf_set_file",
        "body": "fdf_set_file(${1:fdf_document}, ${2:url})$0"
    },
    "fdf_set_flags": {
        "prefix": "fdf_set_flags",
        "body": "fdf_set_flags(${1:fdf_document}, ${2:fieldname}, ${3:whichFlags}, ${4:newFlags})$0"
    },
    "fdf_set_javascript_action": {
        "prefix": "fdf_set_javascript_action",
        "body": "fdf_set_javascript_action(${1:fdf_document}, ${2:fieldname}, ${3:trigger}, ${4:script})$0"
    },
    "fdf_set_on_import_javascript": {
        "prefix": "fdf_set_on_import_javascript",
        "body": "fdf_set_on_import_javascript(${1:fdf_document}, ${2:script}, ${3:before_data_import})$0"
    },
    "fdf_set_opt": {
        "prefix": "fdf_set_opt",
        "body": "fdf_set_opt(${1:fdf_document}, ${2:fieldname}, ${3:element}, ${4:str1}, ${5:str2})$0"
    },
    "fdf_set_status": {
        "prefix": "fdf_set_status",
        "body": "fdf_set_status(${1:fdf_document}, ${2:status})$0"
    },
    "fdf_set_submit_form_action": {
        "prefix": "fdf_set_submit_form_action",
        "body": "fdf_set_submit_form_action(${1:fdf_document}, ${2:fieldname}, ${3:trigger}, ${4:script}, ${5:flags})$0"
    },
    "fdf_set_target_frame": {
        "prefix": "fdf_set_target_frame",
        "body": "fdf_set_target_frame(${1:fdf_document}, ${2:frame_name})$0"
    },
    "fdf_set_value": {
        "prefix": "fdf_set_value",
        "body": "fdf_set_value(${1:fdf_document}, ${2:fieldname}, ${3:value})$0"
    },
    "fdf_set_version": {
        "prefix": "fdf_set_version",
        "body": "fdf_set_version(${1:fdf_document}, ${2:version})$0"
    },
    "feof": {
        "prefix": "feof",
        "body": "feof(${1:handle})$0"
    },
    "fflush": {
        "prefix": "fflush",
        "body": "fflush(${1:handle})$0"
    },
    "fgetc": {
        "prefix": "fgetc",
        "body": "fgetc(${1:handle})$0"
    },
    "fgetcsv": {
        "prefix": "fgetcsv",
        "body": "fgetcsv(${1:handle})$0"
    },
    "fgets": {
        "prefix": "fgets",
        "body": "fgets(${1:handle})$0"
    },
    "fgetss": {
        "prefix": "fgetss",
        "body": "fgetss(${1:handle})$0"
    },
    "file": {
        "prefix": "file",
        "body": "file(${1:filename})$0"
    },
    "file_exists": {
        "prefix": "file_exists",
        "body": "file_exists(${1:filename})$0"
    },
    "file_get_contents": {
        "prefix": "file_get_contents",
        "body": "file_get_contents(${1:filename})$0"
    },
    "file_put_contents": {
        "prefix": "file_put_contents",
        "body": "file_put_contents(${1:filename}, ${2:data})$0"
    },
    "fileatime": {
        "prefix": "fileatime",
        "body": "fileatime(${1:filename})$0"
    },
    "filectime": {
        "prefix": "filectime",
        "body": "filectime(${1:filename})$0"
    },
    "filegroup": {
        "prefix": "filegroup",
        "body": "filegroup(${1:filename})$0"
    },
    "fileinode": {
        "prefix": "fileinode",
        "body": "fileinode(${1:filename})$0"
    },
    "filemtime": {
        "prefix": "filemtime",
        "body": "filemtime(${1:filename})$0"
    },
    "fileowner": {
        "prefix": "fileowner",
        "body": "fileowner(${1:filename})$0"
    },
    "fileperms": {
        "prefix": "fileperms",
        "body": "fileperms(${1:filename})$0"
    },
    "filepro": {
        "prefix": "filepro",
        "body": "filepro(${1:directory})$0"
    },
    "filepro_fieldcount": {
        "prefix": "filepro_fieldcount",
        "body": "filepro_fieldcount()$0"
    },
    "filepro_fieldname": {
        "prefix": "filepro_fieldname",
        "body": "filepro_fieldname(${1:field_number})$0"
    },
    "filepro_fieldtype": {
        "prefix": "filepro_fieldtype",
        "body": "filepro_fieldtype(${1:field_number})$0"
    },
    "filepro_fieldwidth": {
        "prefix": "filepro_fieldwidth",
        "body": "filepro_fieldwidth(${1:field_number})$0"
    },
    "filepro_retrieve": {
        "prefix": "filepro_retrieve",
        "body": "filepro_retrieve(${1:row_number}, ${2:field_number})$0"
    },
    "filepro_rowcount": {
        "prefix": "filepro_rowcount",
        "body": "filepro_rowcount()$0"
    },
    "filesize": {
        "prefix": "filesize",
        "body": "filesize(${1:filename})$0"
    },
    "filetype": {
        "prefix": "filetype",
        "body": "filetype(${1:filename})$0"
    },
    "filter_has_var": {
        "prefix": "filter_has_var",
        "body": "filter_has_var(${1:type}, ${2:variable_name})$0"
    },
    "filter_id": {
        "prefix": "filter_id",
        "body": "filter_id(${1:filtername})$0"
    },
    "filter_input": {
        "prefix": "filter_input",
        "body": "filter_input(${1:type}, ${2:variable_name})$0"
    },
    "filter_input_array": {
        "prefix": "filter_input_array",
        "body": "filter_input_array(${1:type})$0"
    },
    "filter_list": {
        "prefix": "filter_list",
        "body": "filter_list()$0"
    },
    "filter_var": {
        "prefix": "filter_var",
        "body": "filter_var(${1:variable})$0"
    },
    "filter_var_array": {
        "prefix": "filter_var_array",
        "body": "filter_var_array(${1:data})$0"
    },
    "finfo_buffer": {
        "prefix": "finfo_buffer",
        "body": "finfo_buffer(${1:finfo}, ${2:string = NULL})$0"
    },
    "finfo_close": {
        "prefix": "finfo_close",
        "body": "finfo_close(${1:finfo})$0"
    },
    "finfo_file": {
        "prefix": "finfo_file",
        "body": "finfo_file(${1:finfo}, ${2:file_name = NULL})$0"
    },
    "finfo_set_flags": {
        "prefix": "finfo_set_flags",
        "body": "finfo_set_flags(${1:finfo}, ${2:options})$0"
    },
    "floatval": {
        "prefix": "floatval",
        "body": "floatval(${1:var})$0"
    },
    "flock": {
        "prefix": "flock",
        "body": "flock(${1:handle}, ${2:operation})$0"
    },
    "floor": {
        "prefix": "floor",
        "body": "floor(${1:value})$0"
    },
    "flush": {
        "prefix": "flush",
        "body": "flush()$0"
    },
    "fmod": {
        "prefix": "fmod",
        "body": "fmod(${1:x}, ${2:y})$0"
    },
    "fnmatch": {
        "prefix": "fnmatch",
        "body": "fnmatch(${1:pattern}, ${2:string})$0"
    },
    "fopen": {
        "prefix": "fopen",
        "body": "fopen(${1:filename}, ${2:mode})$0"
    },
    "forward_static_call": {
        "prefix": "forward_static_call",
        "body": "forward_static_call(${1:function})$0"
    },
    "forward_static_call_array": {
        "prefix": "forward_static_call_array",
        "body": "forward_static_call_array(${1:function}, ${2:parameters})$0"
    },
    "fpassthru": {
        "prefix": "fpassthru",
        "body": "fpassthru(${1:handle})$0"
    },
    "fprintf": {
        "prefix": "fprintf",
        "body": "fprintf(${1:handle}, ${2:format})$0"
    },
    "fputcsv": {
        "prefix": "fputcsv",
        "body": "fputcsv(${1:handle}, ${2:fields})$0"
    },
    "fputs": {
        "prefix": "fputs",
        "body": "fputs()$0"
    },
    "fread": {
        "prefix": "fread",
        "body": "fread(${1:handle}, ${2:length})$0"
    },
    "FrenchToJD": {
        "prefix": "FrenchToJD",
        "body": "FrenchToJD(${1:month}, ${2:day}, ${3:year})$0"
    },
    "fribidi_log2vis": {
        "prefix": "fribidi_log2vis",
        "body": "fribidi_log2vis(${1:str}, ${2:direction}, ${3:charset})$0"
    },
    "fscanf": {
        "prefix": "fscanf",
        "body": "fscanf(${1:handle}, ${2:format})$0"
    },
    "fseek": {
        "prefix": "fseek",
        "body": "fseek(${1:handle}, ${2:offset})$0"
    },
    "fsockopen": {
        "prefix": "fsockopen",
        "body": "fsockopen(${1:hostname})$0"
    },
    "fstat": {
        "prefix": "fstat",
        "body": "fstat(${1:handle})$0"
    },
    "ftell": {
        "prefix": "ftell",
        "body": "ftell(${1:handle})$0"
    },
    "ftok": {
        "prefix": "ftok",
        "body": "ftok(${1:pathname}, ${2:proj})$0"
    },
    "ftp_alloc": {
        "prefix": "ftp_alloc",
        "body": "ftp_alloc(${1:ftp_stream}, ${2:filesize})$0"
    },
    "ftp_cdup": {
        "prefix": "ftp_cdup",
        "body": "ftp_cdup(${1:ftp_stream})$0"
    },
    "ftp_chdir": {
        "prefix": "ftp_chdir",
        "body": "ftp_chdir(${1:ftp_stream}, ${2:directory})$0"
    },
    "ftp_chmod": {
        "prefix": "ftp_chmod",
        "body": "ftp_chmod(${1:ftp_stream}, ${2:mode}, ${3:filename})$0"
    },
    "ftp_close": {
        "prefix": "ftp_close",
        "body": "ftp_close(${1:ftp_stream})$0"
    },
    "ftp_connect": {
        "prefix": "ftp_connect",
        "body": "ftp_connect(${1:host})$0"
    },
    "ftp_delete": {
        "prefix": "ftp_delete",
        "body": "ftp_delete(${1:ftp_stream}, ${2:path})$0"
    },
    "ftp_exec": {
        "prefix": "ftp_exec",
        "body": "ftp_exec(${1:ftp_stream}, ${2:command})$0"
    },
    "ftp_fget": {
        "prefix": "ftp_fget",
        "body": "ftp_fget(${1:ftp_stream}, ${2:handle}, ${3:remote_file}, ${4:mode})$0"
    },
    "ftp_fput": {
        "prefix": "ftp_fput",
        "body": "ftp_fput(${1:ftp_stream}, ${2:remote_file}, ${3:handle}, ${4:mode})$0"
    },
    "ftp_get": {
        "prefix": "ftp_get",
        "body": "ftp_get(${1:ftp_stream}, ${2:local_file}, ${3:remote_file}, ${4:mode})$0"
    },
    "ftp_get_option": {
        "prefix": "ftp_get_option",
        "body": "ftp_get_option(${1:ftp_stream}, ${2:option})$0"
    },
    "ftp_login": {
        "prefix": "ftp_login",
        "body": "ftp_login(${1:ftp_stream}, ${2:username}, ${3:password})$0"
    },
    "ftp_mdtm": {
        "prefix": "ftp_mdtm",
        "body": "ftp_mdtm(${1:ftp_stream}, ${2:remote_file})$0"
    },
    "ftp_mkdir": {
        "prefix": "ftp_mkdir",
        "body": "ftp_mkdir(${1:ftp_stream}, ${2:directory})$0"
    },
    "ftp_nb_continue": {
        "prefix": "ftp_nb_continue",
        "body": "ftp_nb_continue(${1:ftp_stream})$0"
    },
    "ftp_nb_fget": {
        "prefix": "ftp_nb_fget",
        "body": "ftp_nb_fget(${1:ftp_stream}, ${2:handle}, ${3:remote_file}, ${4:mode})$0"
    },
    "ftp_nb_fput": {
        "prefix": "ftp_nb_fput",
        "body": "ftp_nb_fput(${1:ftp_stream}, ${2:remote_file}, ${3:handle}, ${4:mode})$0"
    },
    "ftp_nb_get": {
        "prefix": "ftp_nb_get",
        "body": "ftp_nb_get(${1:ftp_stream}, ${2:local_file}, ${3:remote_file}, ${4:mode})$0"
    },
    "ftp_nb_put": {
        "prefix": "ftp_nb_put",
        "body": "ftp_nb_put(${1:ftp_stream}, ${2:remote_file}, ${3:local_file}, ${4:mode})$0"
    },
    "ftp_nlist": {
        "prefix": "ftp_nlist",
        "body": "ftp_nlist(${1:ftp_stream}, ${2:directory})$0"
    },
    "ftp_pasv": {
        "prefix": "ftp_pasv",
        "body": "ftp_pasv(${1:ftp_stream}, ${2:pasv})$0"
    },
    "ftp_put": {
        "prefix": "ftp_put",
        "body": "ftp_put(${1:ftp_stream}, ${2:remote_file}, ${3:local_file}, ${4:mode})$0"
    },
    "ftp_pwd": {
        "prefix": "ftp_pwd",
        "body": "ftp_pwd(${1:ftp_stream})$0"
    },
    "ftp_quit": {
        "prefix": "ftp_quit",
        "body": "ftp_quit()$0"
    },
    "ftp_raw": {
        "prefix": "ftp_raw",
        "body": "ftp_raw(${1:ftp_stream}, ${2:command})$0"
    },
    "ftp_rawlist": {
        "prefix": "ftp_rawlist",
        "body": "ftp_rawlist(${1:ftp_stream}, ${2:directory})$0"
    },
    "ftp_rename": {
        "prefix": "ftp_rename",
        "body": "ftp_rename(${1:ftp_stream}, ${2:oldname}, ${3:newname})$0"
    },
    "ftp_rmdir": {
        "prefix": "ftp_rmdir",
        "body": "ftp_rmdir(${1:ftp_stream}, ${2:directory})$0"
    },
    "ftp_set_option": {
        "prefix": "ftp_set_option",
        "body": "ftp_set_option(${1:ftp_stream}, ${2:option}, ${3:value})$0"
    },
    "ftp_site": {
        "prefix": "ftp_site",
        "body": "ftp_site(${1:ftp_stream}, ${2:command})$0"
    },
    "ftp_size": {
        "prefix": "ftp_size",
        "body": "ftp_size(${1:ftp_stream}, ${2:remote_file})$0"
    },
    "ftp_ssl_connect": {
        "prefix": "ftp_ssl_connect",
        "body": "ftp_ssl_connect(${1:host})$0"
    },
    "ftp_systype": {
        "prefix": "ftp_systype",
        "body": "ftp_systype(${1:ftp_stream})$0"
    },
    "ftruncate": {
        "prefix": "ftruncate",
        "body": "ftruncate(${1:handle}, ${2:size})$0"
    },
    "func_get_arg": {
        "prefix": "func_get_arg",
        "body": "func_get_arg(${1:arg_num})$0"
    },
    "func_get_args": {
        "prefix": "func_get_args",
        "body": "func_get_args()$0"
    },
    "func_num_args": {
        "prefix": "func_num_args",
        "body": "func_num_args()$0"
    },
    "function_exists": {
        "prefix": "function_exists",
        "body": "function_exists(${1:function_name})$0"
    },
    "fwrite": {
        "prefix": "fwrite",
        "body": "fwrite(${1:handle}, ${2:string})$0"
    },
    "gc_collect_cycles": {
        "prefix": "gc_collect_cycles",
        "body": "gc_collect_cycles()$0"
    },
    "gc_disable": {
        "prefix": "gc_disable",
        "body": "gc_disable()$0"
    },
    "gc_enable": {
        "prefix": "gc_enable",
        "body": "gc_enable()$0"
    },
    "gc_enabled": {
        "prefix": "gc_enabled",
        "body": "gc_enabled()$0"
    },
    "gd_info": {
        "prefix": "gd_info",
        "body": "gd_info()$0"
    },
    "geoip_continent_code_by_name": {
        "prefix": "geoip_continent_code_by_name",
        "body": "geoip_continent_code_by_name(${1:hostname})$0"
    },
    "geoip_country_code3_by_name": {
        "prefix": "geoip_country_code3_by_name",
        "body": "geoip_country_code3_by_name(${1:hostname})$0"
    },
    "geoip_country_code_by_name": {
        "prefix": "geoip_country_code_by_name",
        "body": "geoip_country_code_by_name(${1:hostname})$0"
    },
    "geoip_country_name_by_name": {
        "prefix": "geoip_country_name_by_name",
        "body": "geoip_country_name_by_name(${1:hostname})$0"
    },
    "geoip_database_info": {
        "prefix": "geoip_database_info",
        "body": "geoip_database_info()$0"
    },
    "geoip_db_avail": {
        "prefix": "geoip_db_avail",
        "body": "geoip_db_avail(${1:database})$0"
    },
    "geoip_db_filename": {
        "prefix": "geoip_db_filename",
        "body": "geoip_db_filename(${1:database})$0"
    },
    "geoip_db_get_all_info": {
        "prefix": "geoip_db_get_all_info",
        "body": "geoip_db_get_all_info()$0"
    },
    "geoip_id_by_name": {
        "prefix": "geoip_id_by_name",
        "body": "geoip_id_by_name(${1:hostname})$0"
    },
    "geoip_isp_by_name": {
        "prefix": "geoip_isp_by_name",
        "body": "geoip_isp_by_name(${1:hostname})$0"
    },
    "geoip_org_by_name": {
        "prefix": "geoip_org_by_name",
        "body": "geoip_org_by_name(${1:hostname})$0"
    },
    "geoip_record_by_name": {
        "prefix": "geoip_record_by_name",
        "body": "geoip_record_by_name(${1:hostname})$0"
    },
    "geoip_region_by_name": {
        "prefix": "geoip_region_by_name",
        "body": "geoip_region_by_name(${1:hostname})$0"
    },
    "geoip_region_name_by_code": {
        "prefix": "geoip_region_name_by_code",
        "body": "geoip_region_name_by_code(${1:country_code}, ${2:region_code})$0"
    },
    "geoip_time_zone_by_country_and_region": {
        "prefix": "geoip_time_zone_by_country_and_region",
        "body": "geoip_time_zone_by_country_and_region(${1:country_code})$0"
    },
    "get_browser": {
        "prefix": "get_browser",
        "body": "get_browser()$0"
    },
    "get_called_class": {
        "prefix": "get_called_class",
        "body": "get_called_class()$0"
    },
    "get_cfg_var": {
        "prefix": "get_cfg_var",
        "body": "get_cfg_var(${1:option})$0"
    },
    "get_class": {
        "prefix": "get_class",
        "body": "get_class()$0"
    },
    "get_class_methods": {
        "prefix": "get_class_methods",
        "body": "get_class_methods(${1:class_name})$0"
    },
    "get_class_vars": {
        "prefix": "get_class_vars",
        "body": "get_class_vars(${1:class_name})$0"
    },
    "get_current_user": {
        "prefix": "get_current_user",
        "body": "get_current_user()$0"
    },
    "get_declared_classes": {
        "prefix": "get_declared_classes",
        "body": "get_declared_classes()$0"
    },
    "get_declared_interfaces": {
        "prefix": "get_declared_interfaces",
        "body": "get_declared_interfaces()$0"
    },
    "get_defined_constants": {
        "prefix": "get_defined_constants",
        "body": "get_defined_constants()$0"
    },
    "get_defined_functions": {
        "prefix": "get_defined_functions",
        "body": "get_defined_functions()$0"
    },
    "get_defined_vars": {
        "prefix": "get_defined_vars",
        "body": "get_defined_vars()$0"
    },
    "get_extension_funcs": {
        "prefix": "get_extension_funcs",
        "body": "get_extension_funcs(${1:module_name})$0"
    },
    "get_headers": {
        "prefix": "get_headers",
        "body": "get_headers(${1:url})$0"
    },
    "get_html_translation_table": {
        "prefix": "get_html_translation_table",
        "body": "get_html_translation_table()$0"
    },
    "get_include_path": {
        "prefix": "get_include_path",
        "body": "get_include_path()$0"
    },
    "get_included_files": {
        "prefix": "get_included_files",
        "body": "get_included_files()$0"
    },
    "get_loaded_extensions": {
        "prefix": "get_loaded_extensions",
        "body": "get_loaded_extensions()$0"
    },
    "get_magic_quotes_gpc": {
        "prefix": "get_magic_quotes_gpc",
        "body": "get_magic_quotes_gpc()$0"
    },
    "get_magic_quotes_runtime": {
        "prefix": "get_magic_quotes_runtime",
        "body": "get_magic_quotes_runtime()$0"
    },
    "get_meta_tags": {
        "prefix": "get_meta_tags",
        "body": "get_meta_tags(${1:filename})$0"
    },
    "get_object_vars": {
        "prefix": "get_object_vars",
        "body": "get_object_vars(${1:object})$0"
    },
    "get_parent_class": {
        "prefix": "get_parent_class",
        "body": "get_parent_class()$0"
    },
    "get_required_files": {
        "prefix": "get_required_files",
        "body": "get_required_files()$0"
    },
    "get_resource_type": {
        "prefix": "get_resource_type",
        "body": "get_resource_type(${1:handle})$0"
    },
    "getallheaders": {
        "prefix": "getallheaders",
        "body": "getallheaders()$0"
    },
    "getcwd": {
        "prefix": "getcwd",
        "body": "getcwd()$0"
    },
    "getdate": {
        "prefix": "getdate",
        "body": "getdate()$0"
    },
    "getenv": {
        "prefix": "getenv",
        "body": "getenv(${1:varname})$0"
    },
    "gethostbyaddr": {
        "prefix": "gethostbyaddr",
        "body": "gethostbyaddr(${1:ip_address})$0"
    },
    "gethostbyname": {
        "prefix": "gethostbyname",
        "body": "gethostbyname(${1:hostname})$0"
    },
    "gethostbynamel": {
        "prefix": "gethostbynamel",
        "body": "gethostbynamel(${1:hostname})$0"
    },
    "gethostname": {
        "prefix": "gethostname",
        "body": "gethostname()$0"
    },
    "getimagesize": {
        "prefix": "getimagesize",
        "body": "getimagesize(${1:filename})$0"
    },
    "getlastmod": {
        "prefix": "getlastmod",
        "body": "getlastmod()$0"
    },
    "getmxrr": {
        "prefix": "getmxrr",
        "body": "getmxrr(${1:hostname}, ${2:mxhosts})$0"
    },
    "getmygid": {
        "prefix": "getmygid",
        "body": "getmygid()$0"
    },
    "getmyinode": {
        "prefix": "getmyinode",
        "body": "getmyinode()$0"
    },
    "getmypid": {
        "prefix": "getmypid",
        "body": "getmypid()$0"
    },
    "getmyuid": {
        "prefix": "getmyuid",
        "body": "getmyuid()$0"
    },
    "getopt": {
        "prefix": "getopt",
        "body": "getopt(${1:options})$0"
    },
    "getprotobyname": {
        "prefix": "getprotobyname",
        "body": "getprotobyname(${1:name})$0"
    },
    "getprotobynumber": {
        "prefix": "getprotobynumber",
        "body": "getprotobynumber(${1:number})$0"
    },
    "getrandmax": {
        "prefix": "getrandmax",
        "body": "getrandmax()$0"
    },
    "getrusage": {
        "prefix": "getrusage",
        "body": "getrusage()$0"
    },
    "getservbyname": {
        "prefix": "getservbyname",
        "body": "getservbyname(${1:service}, ${2:protocol})$0"
    },
    "getservbyport": {
        "prefix": "getservbyport",
        "body": "getservbyport(${1:port}, ${2:protocol})$0"
    },
    "gettext": {
        "prefix": "gettext",
        "body": "gettext(${1:message})$0"
    },
    "gettimeofday": {
        "prefix": "gettimeofday",
        "body": "gettimeofday()$0"
    },
    "gettype": {
        "prefix": "gettype",
        "body": "gettype(${1:var})$0"
    },
    "glob": {
        "prefix": "glob",
        "body": "glob(${1:pattern})$0"
    },
    "gmdate": {
        "prefix": "gmdate",
        "body": "gmdate(${1:format})$0"
    },
    "gmmktime": {
        "prefix": "gmmktime",
        "body": "gmmktime()$0"
    },
    "gmp_abs": {
        "prefix": "gmp_abs",
        "body": "gmp_abs(${1:a})$0"
    },
    "gmp_add": {
        "prefix": "gmp_add",
        "body": "gmp_add(${1:a}, ${2:b})$0"
    },
    "gmp_and": {
        "prefix": "gmp_and",
        "body": "gmp_and(${1:a}, ${2:b})$0"
    },
    "gmp_clrbit": {
        "prefix": "gmp_clrbit",
        "body": "gmp_clrbit(${1:a}, ${2:index})$0"
    },
    "gmp_cmp": {
        "prefix": "gmp_cmp",
        "body": "gmp_cmp(${1:a}, ${2:b})$0"
    },
    "gmp_com": {
        "prefix": "gmp_com",
        "body": "gmp_com(${1:a})$0"
    },
    "gmp_div": {
        "prefix": "gmp_div",
        "body": "gmp_div()$0"
    },
    "gmp_div_q": {
        "prefix": "gmp_div_q",
        "body": "gmp_div_q(${1:a}, ${2:b})$0"
    },
    "gmp_div_qr": {
        "prefix": "gmp_div_qr",
        "body": "gmp_div_qr(${1:n}, ${2:d})$0"
    },
    "gmp_div_r": {
        "prefix": "gmp_div_r",
        "body": "gmp_div_r(${1:n}, ${2:d})$0"
    },
    "gmp_divexact": {
        "prefix": "gmp_divexact",
        "body": "gmp_divexact(${1:n}, ${2:d})$0"
    },
    "gmp_fact": {
        "prefix": "gmp_fact",
        "body": "gmp_fact(${1:a})$0"
    },
    "gmp_gcd": {
        "prefix": "gmp_gcd",
        "body": "gmp_gcd(${1:a}, ${2:b})$0"
    },
    "gmp_gcdext": {
        "prefix": "gmp_gcdext",
        "body": "gmp_gcdext(${1:a}, ${2:b})$0"
    },
    "gmp_hamdist": {
        "prefix": "gmp_hamdist",
        "body": "gmp_hamdist(${1:a}, ${2:b})$0"
    },
    "gmp_init": {
        "prefix": "gmp_init",
        "body": "gmp_init(${1:number})$0"
    },
    "gmp_intval": {
        "prefix": "gmp_intval",
        "body": "gmp_intval(${1:gmpnumber})$0"
    },
    "gmp_invert": {
        "prefix": "gmp_invert",
        "body": "gmp_invert(${1:a}, ${2:b})$0"
    },
    "gmp_jacobi": {
        "prefix": "gmp_jacobi",
        "body": "gmp_jacobi(${1:a}, ${2:p})$0"
    },
    "gmp_legendre": {
        "prefix": "gmp_legendre",
        "body": "gmp_legendre(${1:a}, ${2:p})$0"
    },
    "gmp_mod": {
        "prefix": "gmp_mod",
        "body": "gmp_mod(${1:n}, ${2:d})$0"
    },
    "gmp_mul": {
        "prefix": "gmp_mul",
        "body": "gmp_mul(${1:a}, ${2:b})$0"
    },
    "gmp_neg": {
        "prefix": "gmp_neg",
        "body": "gmp_neg(${1:a})$0"
    },
    "gmp_nextprime": {
        "prefix": "gmp_nextprime",
        "body": "gmp_nextprime(${1:a})$0"
    },
    "gmp_or": {
        "prefix": "gmp_or",
        "body": "gmp_or(${1:a}, ${2:b})$0"
    },
    "gmp_perfect_square": {
        "prefix": "gmp_perfect_square",
        "body": "gmp_perfect_square(${1:a})$0"
    },
    "gmp_popcount": {
        "prefix": "gmp_popcount",
        "body": "gmp_popcount(${1:a})$0"
    },
    "gmp_pow": {
        "prefix": "gmp_pow",
        "body": "gmp_pow(${1:base}, ${2:exp})$0"
    },
    "gmp_powm": {
        "prefix": "gmp_powm",
        "body": "gmp_powm(${1:base}, ${2:exp}, ${3:mod})$0"
    },
    "gmp_prob_prime": {
        "prefix": "gmp_prob_prime",
        "body": "gmp_prob_prime(${1:a})$0"
    },
    "gmp_random": {
        "prefix": "gmp_random",
        "body": "gmp_random()$0"
    },
    "gmp_scan0": {
        "prefix": "gmp_scan0",
        "body": "gmp_scan0(${1:a}, ${2:start})$0"
    },
    "gmp_scan1": {
        "prefix": "gmp_scan1",
        "body": "gmp_scan1(${1:a}, ${2:start})$0"
    },
    "gmp_setbit": {
        "prefix": "gmp_setbit",
        "body": "gmp_setbit(${1:a}, ${2:index})$0"
    },
    "gmp_sign": {
        "prefix": "gmp_sign",
        "body": "gmp_sign(${1:a})$0"
    },
    "gmp_sqrt": {
        "prefix": "gmp_sqrt",
        "body": "gmp_sqrt(${1:a})$0"
    },
    "gmp_sqrtrem": {
        "prefix": "gmp_sqrtrem",
        "body": "gmp_sqrtrem(${1:a})$0"
    },
    "gmp_strval": {
        "prefix": "gmp_strval",
        "body": "gmp_strval(${1:gmpnumber})$0"
    },
    "gmp_sub": {
        "prefix": "gmp_sub",
        "body": "gmp_sub(${1:a}, ${2:b})$0"
    },
    "gmp_testbit": {
        "prefix": "gmp_testbit",
        "body": "gmp_testbit(${1:a}, ${2:index})$0"
    },
    "gmp_xor": {
        "prefix": "gmp_xor",
        "body": "gmp_xor(${1:a}, ${2:b})$0"
    },
    "gmstrftime": {
        "prefix": "gmstrftime",
        "body": "gmstrftime(${1:format})$0"
    },
    "gnupg_adddecryptkey": {
        "prefix": "gnupg_adddecryptkey",
        "body": "gnupg_adddecryptkey(${1:identifier}, ${2:fingerprint}, ${3:passphrase})$0"
    },
    "gnupg_addencryptkey": {
        "prefix": "gnupg_addencryptkey",
        "body": "gnupg_addencryptkey(${1:identifier}, ${2:fingerprint})$0"
    },
    "gnupg_addsignkey": {
        "prefix": "gnupg_addsignkey",
        "body": "gnupg_addsignkey(${1:identifier}, ${2:fingerprint})$0"
    },
    "gnupg_cleardecryptkeys": {
        "prefix": "gnupg_cleardecryptkeys",
        "body": "gnupg_cleardecryptkeys(${1:identifier})$0"
    },
    "gnupg_clearencryptkeys": {
        "prefix": "gnupg_clearencryptkeys",
        "body": "gnupg_clearencryptkeys(${1:identifier})$0"
    },
    "gnupg_clearsignkeys": {
        "prefix": "gnupg_clearsignkeys",
        "body": "gnupg_clearsignkeys(${1:identifier})$0"
    },
    "gnupg_decrypt": {
        "prefix": "gnupg_decrypt",
        "body": "gnupg_decrypt(${1:identifier}, ${2:text})$0"
    },
    "gnupg_decryptverify": {
        "prefix": "gnupg_decryptverify",
        "body": "gnupg_decryptverify(${1:identifier}, ${2:text}, ${3:plaintext})$0"
    },
    "gnupg_encrypt": {
        "prefix": "gnupg_encrypt",
        "body": "gnupg_encrypt(${1:identifier}, ${2:plaintext})$0"
    },
    "gnupg_encryptsign": {
        "prefix": "gnupg_encryptsign",
        "body": "gnupg_encryptsign(${1:identifier}, ${2:plaintext})$0"
    },
    "gnupg_export": {
        "prefix": "gnupg_export",
        "body": "gnupg_export(${1:identifier}, ${2:fingerprint})$0"
    },
    "gnupg_geterror": {
        "prefix": "gnupg_geterror",
        "body": "gnupg_geterror(${1:identifier})$0"
    },
    "gnupg_getprotocol": {
        "prefix": "gnupg_getprotocol",
        "body": "gnupg_getprotocol(${1:identifier})$0"
    },
    "gnupg_import": {
        "prefix": "gnupg_import",
        "body": "gnupg_import(${1:identifier}, ${2:keydata})$0"
    },
    "gnupg_init": {
        "prefix": "gnupg_init",
        "body": "gnupg_init()$0"
    },
    "gnupg_keyinfo": {
        "prefix": "gnupg_keyinfo",
        "body": "gnupg_keyinfo(${1:identifier}, ${2:pattern})$0"
    },
    "gnupg_setarmor": {
        "prefix": "gnupg_setarmor",
        "body": "gnupg_setarmor(${1:identifier}, ${2:armor})$0"
    },
    "gnupg_seterrormode": {
        "prefix": "gnupg_seterrormode",
        "body": "gnupg_seterrormode(${1:identifier}, ${2:errormode})$0"
    },
    "gnupg_setsignmode": {
        "prefix": "gnupg_setsignmode",
        "body": "gnupg_setsignmode(${1:identifier}, ${2:signmode})$0"
    },
    "gnupg_sign": {
        "prefix": "gnupg_sign",
        "body": "gnupg_sign(${1:identifier}, ${2:plaintext})$0"
    },
    "gnupg_verify": {
        "prefix": "gnupg_verify",
        "body": "gnupg_verify(${1:identifier}, ${2:signed_text}, ${3:signature})$0"
    },
    "gopher_parsedir": {
        "prefix": "gopher_parsedir",
        "body": "gopher_parsedir(${1:dirent})$0"
    },
    "grapheme_extract": {
        "prefix": "grapheme_extract",
        "body": "grapheme_extract(${1:haystack}, ${2:size})$0"
    },
    "grapheme_stripos": {
        "prefix": "grapheme_stripos",
        "body": "grapheme_stripos(${1:haystack}, ${2:needle})$0"
    },
    "grapheme_stristr": {
        "prefix": "grapheme_stristr",
        "body": "grapheme_stristr(${1:haystack}, ${2:needle})$0"
    },
    "grapheme_strlen": {
        "prefix": "grapheme_strlen",
        "body": "grapheme_strlen(${1:input})$0"
    },
    "grapheme_strpos": {
        "prefix": "grapheme_strpos",
        "body": "grapheme_strpos(${1:haystack}, ${2:needle})$0"
    },
    "grapheme_strripos": {
        "prefix": "grapheme_strripos",
        "body": "grapheme_strripos(${1:haystack}, ${2:needle})$0"
    },
    "grapheme_strrpos": {
        "prefix": "grapheme_strrpos",
        "body": "grapheme_strrpos(${1:haystack}, ${2:needle})$0"
    },
    "grapheme_strstr": {
        "prefix": "grapheme_strstr",
        "body": "grapheme_strstr(${1:haystack}, ${2:needle})$0"
    },
    "grapheme_substr": {
        "prefix": "grapheme_substr",
        "body": "grapheme_substr(${1:string}, ${2:start})$0"
    },
    "GregorianToJD": {
        "prefix": "GregorianToJD",
        "body": "GregorianToJD(${1:month}, ${2:day}, ${3:year})$0"
    },
    "gupnp_context_get_host_ip": {
        "prefix": "gupnp_context_get_host_ip",
        "body": "gupnp_context_get_host_ip(${1:context})$0"
    },
    "gupnp_context_get_port": {
        "prefix": "gupnp_context_get_port",
        "body": "gupnp_context_get_port(${1:context})$0"
    },
    "gupnp_context_get_subscription_timeout": {
        "prefix": "gupnp_context_get_subscription_timeout",
        "body": "gupnp_context_get_subscription_timeout(${1:context})$0"
    },
    "gupnp_context_host_path": {
        "prefix": "gupnp_context_host_path",
        "body": "gupnp_context_host_path(${1:context}, ${2:local_path}, ${3:server_path})$0"
    },
    "gupnp_context_new": {
        "prefix": "gupnp_context_new",
        "body": "gupnp_context_new()$0"
    },
    "gupnp_context_set_subscription_timeout": {
        "prefix": "gupnp_context_set_subscription_timeout",
        "body": "gupnp_context_set_subscription_timeout(${1:context}, ${2:timeout})$0"
    },
    "gupnp_context_timeout_add": {
        "prefix": "gupnp_context_timeout_add",
        "body": "gupnp_context_timeout_add(${1:context}, ${2:timeout}, ${3:callback})$0"
    },
    "gupnp_context_unhost_path": {
        "prefix": "gupnp_context_unhost_path",
        "body": "gupnp_context_unhost_path(${1:context}, ${2:server_path})$0"
    },
    "gupnp_control_point_browse_start": {
        "prefix": "gupnp_control_point_browse_start",
        "body": "gupnp_control_point_browse_start(${1:cpoint})$0"
    },
    "gupnp_control_point_browse_stop": {
        "prefix": "gupnp_control_point_browse_stop",
        "body": "gupnp_control_point_browse_stop(${1:cpoint})$0"
    },
    "gupnp_control_point_callback_set": {
        "prefix": "gupnp_control_point_callback_set",
        "body": "gupnp_control_point_callback_set(${1:cpoint}, ${2:signal}, ${3:callback})$0"
    },
    "gupnp_control_point_new": {
        "prefix": "gupnp_control_point_new",
        "body": "gupnp_control_point_new(${1:context}, ${2:target})$0"
    },
    "gupnp_device_action_callback_set": {
        "prefix": "gupnp_device_action_callback_set",
        "body": "gupnp_device_action_callback_set(${1:root_device}, ${2:signal}, ${3:action_name}, ${4:callback})$0"
    },
    "gupnp_device_info_get": {
        "prefix": "gupnp_device_info_get",
        "body": "gupnp_device_info_get(${1:root_device})$0"
    },
    "gupnp_device_info_get_service": {
        "prefix": "gupnp_device_info_get_service",
        "body": "gupnp_device_info_get_service(${1:root_device}, ${2:type})$0"
    },
    "gupnp_root_device_get_available": {
        "prefix": "gupnp_root_device_get_available",
        "body": "gupnp_root_device_get_available(${1:root_device})$0"
    },
    "gupnp_root_device_get_relative_location": {
        "prefix": "gupnp_root_device_get_relative_location",
        "body": "gupnp_root_device_get_relative_location(${1:root_device})$0"
    },
    "gupnp_root_device_new": {
        "prefix": "gupnp_root_device_new",
        "body": "gupnp_root_device_new(${1:context}, ${2:location}, ${3:description_dir})$0"
    },
    "gupnp_root_device_set_available": {
        "prefix": "gupnp_root_device_set_available",
        "body": "gupnp_root_device_set_available(${1:root_device}, ${2:available})$0"
    },
    "gupnp_root_device_start": {
        "prefix": "gupnp_root_device_start",
        "body": "gupnp_root_device_start(${1:root_device})$0"
    },
    "gupnp_root_device_stop": {
        "prefix": "gupnp_root_device_stop",
        "body": "gupnp_root_device_stop(${1:root_device})$0"
    },
    "gupnp_service_action_get": {
        "prefix": "gupnp_service_action_get",
        "body": "gupnp_service_action_get(${1:action}, ${2:name}, ${3:type})$0"
    },
    "gupnp_service_action_return": {
        "prefix": "gupnp_service_action_return",
        "body": "gupnp_service_action_return(${1:action})$0"
    },
    "gupnp_service_action_return_error": {
        "prefix": "gupnp_service_action_return_error",
        "body": "gupnp_service_action_return_error(${1:action}, ${2:error_code})$0"
    },
    "gupnp_service_action_set": {
        "prefix": "gupnp_service_action_set",
        "body": "gupnp_service_action_set(${1:action}, ${2:name}, ${3:type}, ${4:value})$0"
    },
    "gupnp_service_freeze_notify": {
        "prefix": "gupnp_service_freeze_notify",
        "body": "gupnp_service_freeze_notify(${1:service})$0"
    },
    "gupnp_service_info_get": {
        "prefix": "gupnp_service_info_get",
        "body": "gupnp_service_info_get(${1:proxy})$0"
    },
    "gupnp_service_info_get_introspection": {
        "prefix": "gupnp_service_info_get_introspection",
        "body": "gupnp_service_info_get_introspection(${1:proxy})$0"
    },
    "gupnp_service_introspection_get_state_variable": {
        "prefix": "gupnp_service_introspection_get_state_variable",
        "body": "gupnp_service_introspection_get_state_variable(${1:introspection}, ${2:variable_name})$0"
    },
    "gupnp_service_notify": {
        "prefix": "gupnp_service_notify",
        "body": "gupnp_service_notify(${1:service}, ${2:name}, ${3:type}, ${4:value})$0"
    },
    "gupnp_service_proxy_action_get": {
        "prefix": "gupnp_service_proxy_action_get",
        "body": "gupnp_service_proxy_action_get(${1:proxy}, ${2:action}, ${3:name}, ${4:type})$0"
    },
    "gupnp_service_proxy_action_set": {
        "prefix": "gupnp_service_proxy_action_set",
        "body": "gupnp_service_proxy_action_set(${1:proxy}, ${2:action}, ${3:name}, ${4:value}, ${5:type})$0"
    },
    "gupnp_service_proxy_add_notify": {
        "prefix": "gupnp_service_proxy_add_notify",
        "body": "gupnp_service_proxy_add_notify(${1:proxy}, ${2:value}, ${3:type}, ${4:callback})$0"
    },
    "gupnp_service_proxy_callback_set": {
        "prefix": "gupnp_service_proxy_callback_set",
        "body": "gupnp_service_proxy_callback_set(${1:proxy}, ${2:signal}, ${3:callback})$0"
    },
    "gupnp_service_proxy_get_subscribed": {
        "prefix": "gupnp_service_proxy_get_subscribed",
        "body": "gupnp_service_proxy_get_subscribed(${1:proxy})$0"
    },
    "gupnp_service_proxy_remove_notify": {
        "prefix": "gupnp_service_proxy_remove_notify",
        "body": "gupnp_service_proxy_remove_notify(${1:proxy}, ${2:value})$0"
    },
    "gupnp_service_proxy_set_subscribed": {
        "prefix": "gupnp_service_proxy_set_subscribed",
        "body": "gupnp_service_proxy_set_subscribed(${1:proxy}, ${2:subscribed})$0"
    },
    "gupnp_service_thaw_notify": {
        "prefix": "gupnp_service_thaw_notify",
        "body": "gupnp_service_thaw_notify(${1:service})$0"
    },
    "gzclose": {
        "prefix": "gzclose",
        "body": "gzclose(${1:zp})$0"
    },
    "gzcompress": {
        "prefix": "gzcompress",
        "body": "gzcompress(${1:data})$0"
    },
    "gzdecode": {
        "prefix": "gzdecode",
        "body": "gzdecode(${1:data}, ${2:length})$0"
    },
    "gzdeflate": {
        "prefix": "gzdeflate",
        "body": "gzdeflate(${1:data})$0"
    },
    "gzencode": {
        "prefix": "gzencode",
        "body": "gzencode(${1:data})$0"
    },
    "gzeof": {
        "prefix": "gzeof",
        "body": "gzeof(${1:zp})$0"
    },
    "gzfile": {
        "prefix": "gzfile",
        "body": "gzfile(${1:filename})$0"
    },
    "gzgetc": {
        "prefix": "gzgetc",
        "body": "gzgetc(${1:zp})$0"
    },
    "gzgets": {
        "prefix": "gzgets",
        "body": "gzgets(${1:zp}, ${2:length})$0"
    },
    "gzgetss": {
        "prefix": "gzgetss",
        "body": "gzgetss(${1:zp}, ${2:length})$0"
    },
    "gzinflate": {
        "prefix": "gzinflate",
        "body": "gzinflate(${1:data})$0"
    },
    "gzopen": {
        "prefix": "gzopen",
        "body": "gzopen(${1:filename}, ${2:mode})$0"
    },
    "gzpassthru": {
        "prefix": "gzpassthru",
        "body": "gzpassthru(${1:zp})$0"
    },
    "gzputs": {
        "prefix": "gzputs",
        "body": "gzputs()$0"
    },
    "gzread": {
        "prefix": "gzread",
        "body": "gzread(${1:zp}, ${2:length})$0"
    },
    "gzrewind": {
        "prefix": "gzrewind",
        "body": "gzrewind(${1:zp})$0"
    },
    "gzseek": {
        "prefix": "gzseek",
        "body": "gzseek(${1:zp}, ${2:offset})$0"
    },
    "gztell": {
        "prefix": "gztell",
        "body": "gztell(${1:zp})$0"
    },
    "gzuncompress": {
        "prefix": "gzuncompress",
        "body": "gzuncompress(${1:data})$0"
    },
    "gzwrite": {
        "prefix": "gzwrite",
        "body": "gzwrite(${1:zp}, ${2:string})$0"
    },
    "__halt_compiler": {
        "prefix": "__halt_compiler",
        "body": "__halt_compiler()$0"
    },
    "hash": {
        "prefix": "hash",
        "body": "hash(${1:algo}, ${2:data})$0"
    },
    "hash_algos": {
        "prefix": "hash_algos",
        "body": "hash_algos()$0"
    },
    "hash_copy": {
        "prefix": "hash_copy",
        "body": "hash_copy(${1:context})$0"
    },
    "hash_file": {
        "prefix": "hash_file",
        "body": "hash_file(${1:algo}, ${2:filename})$0"
    },
    "hash_final": {
        "prefix": "hash_final",
        "body": "hash_final(${1:context})$0"
    },
    "hash_hmac": {
        "prefix": "hash_hmac",
        "body": "hash_hmac(${1:algo}, ${2:data}, ${3:key})$0"
    },
    "hash_hmac_file": {
        "prefix": "hash_hmac_file",
        "body": "hash_hmac_file(${1:algo}, ${2:filename}, ${3:key})$0"
    },
    "hash_init": {
        "prefix": "hash_init",
        "body": "hash_init(${1:algo})$0"
    },
    "hash_update": {
        "prefix": "hash_update",
        "body": "hash_update(${1:context}, ${2:data})$0"
    },
    "hash_update_file": {
        "prefix": "hash_update_file",
        "body": "hash_update_file(${1:context}, ${2:filename})$0"
    },
    "hash_update_stream": {
        "prefix": "hash_update_stream",
        "body": "hash_update_stream(${1:context}, ${2:handle})$0"
    },
    "header": {
        "prefix": "header",
        "body": "header(${1:string})$0"
    },
    "header_remove": {
        "prefix": "header_remove",
        "body": "header_remove()$0"
    },
    "headers_list": {
        "prefix": "headers_list",
        "body": "headers_list()$0"
    },
    "headers_sent": {
        "prefix": "headers_sent",
        "body": "headers_sent()$0"
    },
    "hebrev": {
        "prefix": "hebrev",
        "body": "hebrev(${1:hebrew_text})$0"
    },
    "hebrevc": {
        "prefix": "hebrevc",
        "body": "hebrevc(${1:hebrew_text})$0"
    },
    "hexdec": {
        "prefix": "hexdec",
        "body": "hexdec(${1:hex_string})$0"
    },
    "highlight_file": {
        "prefix": "highlight_file",
        "body": "highlight_file(${1:filename})$0"
    },
    "highlight_string": {
        "prefix": "highlight_string",
        "body": "highlight_string(${1:str})$0"
    },
    "html_entity_decode": {
        "prefix": "html_entity_decode",
        "body": "html_entity_decode(${1:string})$0"
    },
    "htmlentities": {
        "prefix": "htmlentities",
        "body": "htmlentities(${1:string})$0"
    },
    "htmlspecialchars": {
        "prefix": "htmlspecialchars",
        "body": "htmlspecialchars(${1:string})$0"
    },
    "htmlspecialchars_decode": {
        "prefix": "htmlspecialchars_decode",
        "body": "htmlspecialchars_decode(${1:string})$0"
    },
    "http_build_cookie": {
        "prefix": "http_build_cookie",
        "body": "http_build_cookie(${1:cookie})$0"
    },
    "http_build_query": {
        "prefix": "http_build_query",
        "body": "http_build_query(${1:query_data})$0"
    },
    "http_build_str": {
        "prefix": "http_build_str",
        "body": "http_build_str(${1:query})$0"
    },
    "http_build_url": {
        "prefix": "http_build_url",
        "body": "http_build_url()$0"
    },
    "http_cache_etag": {
        "prefix": "http_cache_etag",
        "body": "http_cache_etag()$0"
    },
    "http_cache_last_modified": {
        "prefix": "http_cache_last_modified",
        "body": "http_cache_last_modified()$0"
    },
    "http_chunked_decode": {
        "prefix": "http_chunked_decode",
        "body": "http_chunked_decode(${1:encoded})$0"
    },
    "http_date": {
        "prefix": "http_date",
        "body": "http_date()$0"
    },
    "http_deflate": {
        "prefix": "http_deflate",
        "body": "http_deflate(${1:data})$0"
    },
    "http_get": {
        "prefix": "http_get",
        "body": "http_get(${1:url})$0"
    },
    "http_get_request_body": {
        "prefix": "http_get_request_body",
        "body": "http_get_request_body()$0"
    },
    "http_get_request_body_stream": {
        "prefix": "http_get_request_body_stream",
        "body": "http_get_request_body_stream()$0"
    },
    "http_get_request_headers": {
        "prefix": "http_get_request_headers",
        "body": "http_get_request_headers()$0"
    },
    "http_head": {
        "prefix": "http_head",
        "body": "http_head(${1:url})$0"
    },
    "http_inflate": {
        "prefix": "http_inflate",
        "body": "http_inflate(${1:data})$0"
    },
    "http_match_etag": {
        "prefix": "http_match_etag",
        "body": "http_match_etag(${1:etag})$0"
    },
    "http_match_modified": {
        "prefix": "http_match_modified",
        "body": "http_match_modified()$0"
    },
    "http_match_request_header": {
        "prefix": "http_match_request_header",
        "body": "http_match_request_header(${1:header}, ${2:value})$0"
    },
    "http_negotiate_charset": {
        "prefix": "http_negotiate_charset",
        "body": "http_negotiate_charset(${1:supported})$0"
    },
    "http_negotiate_content_type": {
        "prefix": "http_negotiate_content_type",
        "body": "http_negotiate_content_type(${1:supported})$0"
    },
    "http_negotiate_language": {
        "prefix": "http_negotiate_language",
        "body": "http_negotiate_language(${1:supported})$0"
    },
    "http_parse_cookie": {
        "prefix": "http_parse_cookie",
        "body": "http_parse_cookie(${1:cookie})$0"
    },
    "http_parse_headers": {
        "prefix": "http_parse_headers",
        "body": "http_parse_headers(${1:header})$0"
    },
    "http_parse_message": {
        "prefix": "http_parse_message",
        "body": "http_parse_message(${1:message})$0"
    },
    "http_parse_params": {
        "prefix": "http_parse_params",
        "body": "http_parse_params(${1:param})$0"
    },
    "http_persistent_handles_clean": {
        "prefix": "http_persistent_handles_clean",
        "body": "http_persistent_handles_clean()$0"
    },
    "http_persistent_handles_count": {
        "prefix": "http_persistent_handles_count",
        "body": "http_persistent_handles_count()$0"
    },
    "http_persistent_handles_ident": {
        "prefix": "http_persistent_handles_ident",
        "body": "http_persistent_handles_ident()$0"
    },
    "http_post_data": {
        "prefix": "http_post_data",
        "body": "http_post_data(${1:url}, ${2:data})$0"
    },
    "http_post_fields": {
        "prefix": "http_post_fields",
        "body": "http_post_fields(${1:url}, ${2:data})$0"
    },
    "http_put_data": {
        "prefix": "http_put_data",
        "body": "http_put_data(${1:url}, ${2:data})$0"
    },
    "http_put_file": {
        "prefix": "http_put_file",
        "body": "http_put_file(${1:url}, ${2:file})$0"
    },
    "http_put_stream": {
        "prefix": "http_put_stream",
        "body": "http_put_stream(${1:url}, ${2:stream})$0"
    },
    "http_redirect": {
        "prefix": "http_redirect",
        "body": "http_redirect()$0"
    },
    "http_request": {
        "prefix": "http_request",
        "body": "http_request(${1:method}, ${2:url})$0"
    },
    "http_request_body_encode": {
        "prefix": "http_request_body_encode",
        "body": "http_request_body_encode(${1:fields}, ${2:files})$0"
    },
    "http_request_method_exists": {
        "prefix": "http_request_method_exists",
        "body": "http_request_method_exists(${1:method})$0"
    },
    "http_request_method_name": {
        "prefix": "http_request_method_name",
        "body": "http_request_method_name(${1:method})$0"
    },
    "http_request_method_register": {
        "prefix": "http_request_method_register",
        "body": "http_request_method_register(${1:method})$0"
    },
    "http_request_method_unregister": {
        "prefix": "http_request_method_unregister",
        "body": "http_request_method_unregister(${1:method})$0"
    },
    "http_response_code": {
        "prefix": "http_response_code",
        "body": "http_response_code(${1:code})$0"
    },
    "http_send_content_disposition": {
        "prefix": "http_send_content_disposition",
        "body": "http_send_content_disposition(${1:filename})$0"
    },
    "http_send_content_type": {
        "prefix": "http_send_content_type",
        "body": "http_send_content_type()$0"
    },
    "http_send_data": {
        "prefix": "http_send_data",
        "body": "http_send_data(${1:data})$0"
    },
    "http_send_file": {
        "prefix": "http_send_file",
        "body": "http_send_file(${1:file})$0"
    },
    "http_send_last_modified": {
        "prefix": "http_send_last_modified",
        "body": "http_send_last_modified()$0"
    },
    "http_send_status": {
        "prefix": "http_send_status",
        "body": "http_send_status(${1:status})$0"
    },
    "http_send_stream": {
        "prefix": "http_send_stream",
        "body": "http_send_stream(${1:stream})$0"
    },
    "http_support": {
        "prefix": "http_support",
        "body": "http_support()$0"
    },
    "http_throttle": {
        "prefix": "http_throttle",
        "body": "http_throttle(${1:sec})$0"
    },
    "hw_Array2Objrec": {
        "prefix": "hw_Array2Objrec",
        "body": "hw_Array2Objrec(${1:object_array})$0"
    },
    "hw_changeobject": {
        "prefix": "hw_changeobject",
        "body": "hw_changeobject(${1:link}, ${2:objid}, ${3:attributes})$0"
    },
    "hw_Children": {
        "prefix": "hw_Children",
        "body": "hw_Children(${1:connection}, ${2:objectID})$0"
    },
    "hw_ChildrenObj": {
        "prefix": "hw_ChildrenObj",
        "body": "hw_ChildrenObj(${1:connection}, ${2:objectID})$0"
    },
    "hw_Close": {
        "prefix": "hw_Close",
        "body": "hw_Close(${1:connection})$0"
    },
    "hw_Connect": {
        "prefix": "hw_Connect",
        "body": "hw_Connect(${1:host}, ${2:port})$0"
    },
    "hw_connection_info": {
        "prefix": "hw_connection_info",
        "body": "hw_connection_info(${1:link})$0"
    },
    "hw_cp": {
        "prefix": "hw_cp",
        "body": "hw_cp(${1:connection}, ${2:object_id_array}, ${3:destination_id})$0"
    },
    "hw_Deleteobject": {
        "prefix": "hw_Deleteobject",
        "body": "hw_Deleteobject(${1:connection}, ${2:object_to_delete})$0"
    },
    "hw_DocByAnchor": {
        "prefix": "hw_DocByAnchor",
        "body": "hw_DocByAnchor(${1:connection}, ${2:anchorID})$0"
    },
    "hw_DocByAnchorObj": {
        "prefix": "hw_DocByAnchorObj",
        "body": "hw_DocByAnchorObj(${1:connection}, ${2:anchorID})$0"
    },
    "hw_Document_Attributes": {
        "prefix": "hw_Document_Attributes",
        "body": "hw_Document_Attributes(${1:hw_document})$0"
    },
    "hw_Document_BodyTag": {
        "prefix": "hw_Document_BodyTag",
        "body": "hw_Document_BodyTag(${1:hw_document})$0"
    },
    "hw_Document_Content": {
        "prefix": "hw_Document_Content",
        "body": "hw_Document_Content(${1:hw_document})$0"
    },
    "hw_Document_SetContent": {
        "prefix": "hw_Document_SetContent",
        "body": "hw_Document_SetContent(${1:hw_document}, ${2:content})$0"
    },
    "hw_Document_Size": {
        "prefix": "hw_Document_Size",
        "body": "hw_Document_Size(${1:hw_document})$0"
    },
    "hw_dummy": {
        "prefix": "hw_dummy",
        "body": "hw_dummy(${1:link}, ${2:id}, ${3:msgid})$0"
    },
    "hw_EditText": {
        "prefix": "hw_EditText",
        "body": "hw_EditText(${1:connection}, ${2:hw_document})$0"
    },
    "hw_Error": {
        "prefix": "hw_Error",
        "body": "hw_Error(${1:connection})$0"
    },
    "hw_ErrorMsg": {
        "prefix": "hw_ErrorMsg",
        "body": "hw_ErrorMsg(${1:connection})$0"
    },
    "hw_Free_Document": {
        "prefix": "hw_Free_Document",
        "body": "hw_Free_Document(${1:hw_document})$0"
    },
    "hw_GetAnchors": {
        "prefix": "hw_GetAnchors",
        "body": "hw_GetAnchors(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetAnchorsObj": {
        "prefix": "hw_GetAnchorsObj",
        "body": "hw_GetAnchorsObj(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetAndLock": {
        "prefix": "hw_GetAndLock",
        "body": "hw_GetAndLock(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetChildColl": {
        "prefix": "hw_GetChildColl",
        "body": "hw_GetChildColl(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetChildCollObj": {
        "prefix": "hw_GetChildCollObj",
        "body": "hw_GetChildCollObj(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetChildDocColl": {
        "prefix": "hw_GetChildDocColl",
        "body": "hw_GetChildDocColl(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetChildDocCollObj": {
        "prefix": "hw_GetChildDocCollObj",
        "body": "hw_GetChildDocCollObj(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetObject": {
        "prefix": "hw_GetObject",
        "body": "hw_GetObject(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetObjectByQuery": {
        "prefix": "hw_GetObjectByQuery",
        "body": "hw_GetObjectByQuery(${1:connection}, ${2:query}, ${3:max_hits})$0"
    },
    "hw_GetObjectByQueryColl": {
        "prefix": "hw_GetObjectByQueryColl",
        "body": "hw_GetObjectByQueryColl(${1:connection}, ${2:objectID}, ${3:query}, ${4:max_hits})$0"
    },
    "hw_GetObjectByQueryCollObj": {
        "prefix": "hw_GetObjectByQueryCollObj",
        "body": "hw_GetObjectByQueryCollObj(${1:connection}, ${2:objectID}, ${3:query}, ${4:max_hits})$0"
    },
    "hw_GetObjectByQueryObj": {
        "prefix": "hw_GetObjectByQueryObj",
        "body": "hw_GetObjectByQueryObj(${1:connection}, ${2:query}, ${3:max_hits})$0"
    },
    "hw_GetParents": {
        "prefix": "hw_GetParents",
        "body": "hw_GetParents(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetParentsObj": {
        "prefix": "hw_GetParentsObj",
        "body": "hw_GetParentsObj(${1:connection}, ${2:objectID})$0"
    },
    "hw_getrellink": {
        "prefix": "hw_getrellink",
        "body": "hw_getrellink(${1:link}, ${2:rootid}, ${3:sourceid}, ${4:destid})$0"
    },
    "hw_GetRemote": {
        "prefix": "hw_GetRemote",
        "body": "hw_GetRemote(${1:connection}, ${2:objectID})$0"
    },
    "hw_getremotechildren": {
        "prefix": "hw_getremotechildren",
        "body": "hw_getremotechildren(${1:connection}, ${2:object_record})$0"
    },
    "hw_GetSrcByDestObj": {
        "prefix": "hw_GetSrcByDestObj",
        "body": "hw_GetSrcByDestObj(${1:connection}, ${2:objectID})$0"
    },
    "hw_GetText": {
        "prefix": "hw_GetText",
        "body": "hw_GetText(${1:connection}, ${2:objectID})$0"
    },
    "hw_getusername": {
        "prefix": "hw_getusername",
        "body": "hw_getusername(${1:connection})$0"
    },
    "hw_Identify": {
        "prefix": "hw_Identify",
        "body": "hw_Identify(${1:link}, ${2:username}, ${3:password})$0"
    },
    "hw_InCollections": {
        "prefix": "hw_InCollections",
        "body": "hw_InCollections(${1:connection}, ${2:object_id_array}, ${3:collection_id_array}, ${4:return_collections})$0"
    },
    "hw_Info": {
        "prefix": "hw_Info",
        "body": "hw_Info(${1:connection})$0"
    },
    "hw_InsColl": {
        "prefix": "hw_InsColl",
        "body": "hw_InsColl(${1:connection}, ${2:objectID}, ${3:object_array})$0"
    },
    "hw_InsDoc": {
        "prefix": "hw_InsDoc",
        "body": "hw_InsDoc(${1:connection}, ${2:parentID}, ${3:object_record})$0"
    },
    "hw_insertanchors": {
        "prefix": "hw_insertanchors",
        "body": "hw_insertanchors(${1:hwdoc}, ${2:anchorecs}, ${3:dest})$0"
    },
    "hw_InsertDocument": {
        "prefix": "hw_InsertDocument",
        "body": "hw_InsertDocument(${1:connection}, ${2:parent_id}, ${3:hw_document})$0"
    },
    "hw_InsertObject": {
        "prefix": "hw_InsertObject",
        "body": "hw_InsertObject(${1:connection}, ${2:object_rec}, ${3:parameter})$0"
    },
    "hw_mapid": {
        "prefix": "hw_mapid",
        "body": "hw_mapid(${1:connection}, ${2:server_id}, ${3:object_id})$0"
    },
    "hw_Modifyobject": {
        "prefix": "hw_Modifyobject",
        "body": "hw_Modifyobject(${1:connection}, ${2:object_to_change}, ${3:remove}, ${4:add})$0"
    },
    "hw_mv": {
        "prefix": "hw_mv",
        "body": "hw_mv(${1:connection}, ${2:object_id_array}, ${3:source_id}, ${4:destination_id})$0"
    },
    "hw_New_Document": {
        "prefix": "hw_New_Document",
        "body": "hw_New_Document(${1:object_record}, ${2:document_data}, ${3:document_size})$0"
    },
    "hw_objrec2array": {
        "prefix": "hw_objrec2array",
        "body": "hw_objrec2array(${1:object_record})$0"
    },
    "hw_Output_Document": {
        "prefix": "hw_Output_Document",
        "body": "hw_Output_Document(${1:hw_document})$0"
    },
    "hw_pConnect": {
        "prefix": "hw_pConnect",
        "body": "hw_pConnect(${1:host}, ${2:port})$0"
    },
    "hw_PipeDocument": {
        "prefix": "hw_PipeDocument",
        "body": "hw_PipeDocument(${1:connection}, ${2:objectID})$0"
    },
    "hw_Root": {
        "prefix": "hw_Root",
        "body": "hw_Root()$0"
    },
    "hw_setlinkroot": {
        "prefix": "hw_setlinkroot",
        "body": "hw_setlinkroot(${1:link}, ${2:rootid})$0"
    },
    "hw_stat": {
        "prefix": "hw_stat",
        "body": "hw_stat(${1:link})$0"
    },
    "hw_Unlock": {
        "prefix": "hw_Unlock",
        "body": "hw_Unlock(${1:connection}, ${2:objectID})$0"
    },
    "hw_Who": {
        "prefix": "hw_Who",
        "body": "hw_Who(${1:connection})$0"
    },
    "hw_api_attribute": {
        "prefix": "hw_api_attribute",
        "body": "hw_api_attribute()$0"
    },
    "hwapi_hgcsp": {
        "prefix": "hwapi_hgcsp",
        "body": "hwapi_hgcsp(${1:hostname})$0"
    },
    "hw_api_content": {
        "prefix": "hw_api_content",
        "body": "hw_api_content(${1:content}, ${2:mimetype})$0"
    },
    "hw_api_object": {
        "prefix": "hw_api_object",
        "body": "hw_api_object(${1:parameter})$0"
    },
    "hypot": {
        "prefix": "hypot",
        "body": "hypot(${1:x}, ${2:y})$0"
    },
    "ibase_add_user": {
        "prefix": "ibase_add_user",
        "body": "ibase_add_user(${1:service_handle}, ${2:user_name}, ${3:password})$0"
    },
    "ibase_affected_rows": {
        "prefix": "ibase_affected_rows",
        "body": "ibase_affected_rows()$0"
    },
    "ibase_backup": {
        "prefix": "ibase_backup",
        "body": "ibase_backup(${1:service_handle}, ${2:source_db}, ${3:dest_file})$0"
    },
    "ibase_blob_add": {
        "prefix": "ibase_blob_add",
        "body": "ibase_blob_add(${1:blob_handle}, ${2:data})$0"
    },
    "ibase_blob_cancel": {
        "prefix": "ibase_blob_cancel",
        "body": "ibase_blob_cancel(${1:blob_handle})$0"
    },
    "ibase_blob_close": {
        "prefix": "ibase_blob_close",
        "body": "ibase_blob_close(${1:blob_handle})$0"
    },
    "ibase_blob_create": {
        "prefix": "ibase_blob_create",
        "body": "ibase_blob_create()$0"
    },
    "ibase_blob_echo": {
        "prefix": "ibase_blob_echo",
        "body": "ibase_blob_echo(${1:blob_id})$0"
    },
    "ibase_blob_get": {
        "prefix": "ibase_blob_get",
        "body": "ibase_blob_get(${1:blob_handle}, ${2:len})$0"
    },
    "ibase_blob_import": {
        "prefix": "ibase_blob_import",
        "body": "ibase_blob_import(${1:link_identifier}, ${2:file_handle})$0"
    },
    "ibase_blob_info": {
        "prefix": "ibase_blob_info",
        "body": "ibase_blob_info(${1:link_identifier}, ${2:blob_id})$0"
    },
    "ibase_blob_open": {
        "prefix": "ibase_blob_open",
        "body": "ibase_blob_open(${1:link_identifier}, ${2:blob_id})$0"
    },
    "ibase_close": {
        "prefix": "ibase_close",
        "body": "ibase_close()$0"
    },
    "ibase_commit": {
        "prefix": "ibase_commit",
        "body": "ibase_commit()$0"
    },
    "ibase_commit_ret": {
        "prefix": "ibase_commit_ret",
        "body": "ibase_commit_ret()$0"
    },
    "ibase_connect": {
        "prefix": "ibase_connect",
        "body": "ibase_connect()$0"
    },
    "ibase_db_info": {
        "prefix": "ibase_db_info",
        "body": "ibase_db_info(${1:service_handle}, ${2:db}, ${3:action})$0"
    },
    "ibase_delete_user": {
        "prefix": "ibase_delete_user",
        "body": "ibase_delete_user(${1:service_handle}, ${2:user_name})$0"
    },
    "ibase_drop_db": {
        "prefix": "ibase_drop_db",
        "body": "ibase_drop_db()$0"
    },
    "ibase_errcode": {
        "prefix": "ibase_errcode",
        "body": "ibase_errcode()$0"
    },
    "ibase_errmsg": {
        "prefix": "ibase_errmsg",
        "body": "ibase_errmsg()$0"
    },
    "ibase_execute": {
        "prefix": "ibase_execute",
        "body": "ibase_execute(${1:query})$0"
    },
    "ibase_fetch_assoc": {
        "prefix": "ibase_fetch_assoc",
        "body": "ibase_fetch_assoc(${1:result})$0"
    },
    "ibase_fetch_object": {
        "prefix": "ibase_fetch_object",
        "body": "ibase_fetch_object(${1:result_id})$0"
    },
    "ibase_fetch_row": {
        "prefix": "ibase_fetch_row",
        "body": "ibase_fetch_row(${1:result_identifier})$0"
    },
    "ibase_field_info": {
        "prefix": "ibase_field_info",
        "body": "ibase_field_info(${1:result}, ${2:field_number})$0"
    },
    "ibase_free_event_handler": {
        "prefix": "ibase_free_event_handler",
        "body": "ibase_free_event_handler(${1:event})$0"
    },
    "ibase_free_query": {
        "prefix": "ibase_free_query",
        "body": "ibase_free_query(${1:query})$0"
    },
    "ibase_free_result": {
        "prefix": "ibase_free_result",
        "body": "ibase_free_result(${1:result_identifier})$0"
    },
    "ibase_gen_id": {
        "prefix": "ibase_gen_id",
        "body": "ibase_gen_id(${1:generator})$0"
    },
    "ibase_maintain_db": {
        "prefix": "ibase_maintain_db",
        "body": "ibase_maintain_db(${1:service_handle}, ${2:db}, ${3:action})$0"
    },
    "ibase_modify_user": {
        "prefix": "ibase_modify_user",
        "body": "ibase_modify_user(${1:service_handle}, ${2:user_name}, ${3:password})$0"
    },
    "ibase_name_result": {
        "prefix": "ibase_name_result",
        "body": "ibase_name_result(${1:result}, ${2:name})$0"
    },
    "ibase_num_fields": {
        "prefix": "ibase_num_fields",
        "body": "ibase_num_fields(${1:result_id})$0"
    },
    "ibase_num_params": {
        "prefix": "ibase_num_params",
        "body": "ibase_num_params(${1:query})$0"
    },
    "ibase_param_info": {
        "prefix": "ibase_param_info",
        "body": "ibase_param_info(${1:query}, ${2:param_number})$0"
    },
    "ibase_pconnect": {
        "prefix": "ibase_pconnect",
        "body": "ibase_pconnect()$0"
    },
    "ibase_prepare": {
        "prefix": "ibase_prepare",
        "body": "ibase_prepare(${1:query})$0"
    },
    "ibase_query": {
        "prefix": "ibase_query",
        "body": "ibase_query()$0"
    },
    "ibase_restore": {
        "prefix": "ibase_restore",
        "body": "ibase_restore(${1:service_handle}, ${2:source_file}, ${3:dest_db})$0"
    },
    "ibase_rollback": {
        "prefix": "ibase_rollback",
        "body": "ibase_rollback()$0"
    },
    "ibase_rollback_ret": {
        "prefix": "ibase_rollback_ret",
        "body": "ibase_rollback_ret()$0"
    },
    "ibase_server_info": {
        "prefix": "ibase_server_info",
        "body": "ibase_server_info(${1:service_handle}, ${2:action})$0"
    },
    "ibase_service_attach": {
        "prefix": "ibase_service_attach",
        "body": "ibase_service_attach(${1:host}, ${2:dba_username}, ${3:dba_password})$0"
    },
    "ibase_service_detach": {
        "prefix": "ibase_service_detach",
        "body": "ibase_service_detach(${1:service_handle})$0"
    },
    "ibase_set_event_handler": {
        "prefix": "ibase_set_event_handler",
        "body": "ibase_set_event_handler(${1:event_handler}, ${2:event_name1})$0"
    },
    "ibase_timefmt": {
        "prefix": "ibase_timefmt",
        "body": "ibase_timefmt(${1:format})$0"
    },
    "ibase_trans": {
        "prefix": "ibase_trans",
        "body": "ibase_trans()$0"
    },
    "ibase_wait_event": {
        "prefix": "ibase_wait_event",
        "body": "ibase_wait_event(${1:event_name1})$0"
    },
    "iconv": {
        "prefix": "iconv",
        "body": "iconv(${1:in_charset}, ${2:out_charset}, ${3:str})$0"
    },
    "iconv_get_encoding": {
        "prefix": "iconv_get_encoding",
        "body": "iconv_get_encoding()$0"
    },
    "iconv_mime_decode": {
        "prefix": "iconv_mime_decode",
        "body": "iconv_mime_decode(${1:encoded_header})$0"
    },
    "iconv_mime_decode_headers": {
        "prefix": "iconv_mime_decode_headers",
        "body": "iconv_mime_decode_headers(${1:encoded_headers})$0"
    },
    "iconv_mime_encode": {
        "prefix": "iconv_mime_encode",
        "body": "iconv_mime_encode(${1:field_name}, ${2:field_value})$0"
    },
    "iconv_set_encoding": {
        "prefix": "iconv_set_encoding",
        "body": "iconv_set_encoding(${1:type}, ${2:charset})$0"
    },
    "iconv_strlen": {
        "prefix": "iconv_strlen",
        "body": "iconv_strlen(${1:str})$0"
    },
    "iconv_strpos": {
        "prefix": "iconv_strpos",
        "body": "iconv_strpos(${1:haystack}, ${2:needle})$0"
    },
    "iconv_strrpos": {
        "prefix": "iconv_strrpos",
        "body": "iconv_strrpos(${1:haystack}, ${2:needle})$0"
    },
    "iconv_substr": {
        "prefix": "iconv_substr",
        "body": "iconv_substr(${1:str}, ${2:offset})$0"
    },
    "id3_get_frame_long_name": {
        "prefix": "id3_get_frame_long_name",
        "body": "id3_get_frame_long_name(${1:frameId})$0"
    },
    "id3_get_frame_short_name": {
        "prefix": "id3_get_frame_short_name",
        "body": "id3_get_frame_short_name(${1:frameId})$0"
    },
    "id3_get_genre_id": {
        "prefix": "id3_get_genre_id",
        "body": "id3_get_genre_id(${1:genre})$0"
    },
    "id3_get_genre_list": {
        "prefix": "id3_get_genre_list",
        "body": "id3_get_genre_list()$0"
    },
    "id3_get_genre_name": {
        "prefix": "id3_get_genre_name",
        "body": "id3_get_genre_name(${1:genre_id})$0"
    },
    "id3_get_tag": {
        "prefix": "id3_get_tag",
        "body": "id3_get_tag(${1:filename})$0"
    },
    "id3_get_version": {
        "prefix": "id3_get_version",
        "body": "id3_get_version(${1:filename})$0"
    },
    "id3_remove_tag": {
        "prefix": "id3_remove_tag",
        "body": "id3_remove_tag(${1:filename})$0"
    },
    "id3_set_tag": {
        "prefix": "id3_set_tag",
        "body": "id3_set_tag(${1:filename}, ${2:tag})$0"
    },
    "idate": {
        "prefix": "idate",
        "body": "idate(${1:format})$0"
    },
    "idn_to_ascii": {
        "prefix": "idn_to_ascii",
        "body": "idn_to_ascii(${1:domain})$0"
    },
    "idn_to_unicode": {
        "prefix": "idn_to_unicode",
        "body": "idn_to_unicode()$0"
    },
    "idn_to_utf8": {
        "prefix": "idn_to_utf8",
        "body": "idn_to_utf8(${1:domain})$0"
    },
    "ifx_affected_rows": {
        "prefix": "ifx_affected_rows",
        "body": "ifx_affected_rows(${1:result_id})$0"
    },
    "ifx_blobinfile_mode": {
        "prefix": "ifx_blobinfile_mode",
        "body": "ifx_blobinfile_mode(${1:mode})$0"
    },
    "ifx_byteasvarchar": {
        "prefix": "ifx_byteasvarchar",
        "body": "ifx_byteasvarchar(${1:mode})$0"
    },
    "ifx_close": {
        "prefix": "ifx_close",
        "body": "ifx_close()$0"
    },
    "ifx_connect": {
        "prefix": "ifx_connect",
        "body": "ifx_connect()$0"
    },
    "ifx_copy_blob": {
        "prefix": "ifx_copy_blob",
        "body": "ifx_copy_blob(${1:bid})$0"
    },
    "ifx_create_blob": {
        "prefix": "ifx_create_blob",
        "body": "ifx_create_blob(${1:type}, ${2:mode}, ${3:param})$0"
    },
    "ifx_create_char": {
        "prefix": "ifx_create_char",
        "body": "ifx_create_char(${1:param})$0"
    },
    "ifx_do": {
        "prefix": "ifx_do",
        "body": "ifx_do(${1:result_id})$0"
    },
    "ifx_error": {
        "prefix": "ifx_error",
        "body": "ifx_error()$0"
    },
    "ifx_errormsg": {
        "prefix": "ifx_errormsg",
        "body": "ifx_errormsg()$0"
    },
    "ifx_fetch_row": {
        "prefix": "ifx_fetch_row",
        "body": "ifx_fetch_row(${1:result_id})$0"
    },
    "ifx_fieldproperties": {
        "prefix": "ifx_fieldproperties",
        "body": "ifx_fieldproperties(${1:result_id})$0"
    },
    "ifx_fieldtypes": {
        "prefix": "ifx_fieldtypes",
        "body": "ifx_fieldtypes(${1:result_id})$0"
    },
    "ifx_free_blob": {
        "prefix": "ifx_free_blob",
        "body": "ifx_free_blob(${1:bid})$0"
    },
    "ifx_free_char": {
        "prefix": "ifx_free_char",
        "body": "ifx_free_char(${1:bid})$0"
    },
    "ifx_free_result": {
        "prefix": "ifx_free_result",
        "body": "ifx_free_result(${1:result_id})$0"
    },
    "ifx_get_blob": {
        "prefix": "ifx_get_blob",
        "body": "ifx_get_blob(${1:bid})$0"
    },
    "ifx_get_char": {
        "prefix": "ifx_get_char",
        "body": "ifx_get_char(${1:bid})$0"
    },
    "ifx_getsqlca": {
        "prefix": "ifx_getsqlca",
        "body": "ifx_getsqlca(${1:result_id})$0"
    },
    "ifx_htmltbl_result": {
        "prefix": "ifx_htmltbl_result",
        "body": "ifx_htmltbl_result(${1:result_id})$0"
    },
    "ifx_nullformat": {
        "prefix": "ifx_nullformat",
        "body": "ifx_nullformat(${1:mode})$0"
    },
    "ifx_num_fields": {
        "prefix": "ifx_num_fields",
        "body": "ifx_num_fields(${1:result_id})$0"
    },
    "ifx_num_rows": {
        "prefix": "ifx_num_rows",
        "body": "ifx_num_rows(${1:result_id})$0"
    },
    "ifx_pconnect": {
        "prefix": "ifx_pconnect",
        "body": "ifx_pconnect()$0"
    },
    "ifx_prepare": {
        "prefix": "ifx_prepare",
        "body": "ifx_prepare(${1:query}, ${2:link_identifier})$0"
    },
    "ifx_query": {
        "prefix": "ifx_query",
        "body": "ifx_query(${1:query}, ${2:link_identifier})$0"
    },
    "ifx_textasvarchar": {
        "prefix": "ifx_textasvarchar",
        "body": "ifx_textasvarchar(${1:mode})$0"
    },
    "ifx_update_blob": {
        "prefix": "ifx_update_blob",
        "body": "ifx_update_blob(${1:bid}, ${2:content})$0"
    },
    "ifx_update_char": {
        "prefix": "ifx_update_char",
        "body": "ifx_update_char(${1:bid}, ${2:content})$0"
    },
    "ifxus_close_slob": {
        "prefix": "ifxus_close_slob",
        "body": "ifxus_close_slob(${1:bid})$0"
    },
    "ifxus_create_slob": {
        "prefix": "ifxus_create_slob",
        "body": "ifxus_create_slob(${1:mode})$0"
    },
    "ifxus_free_slob": {
        "prefix": "ifxus_free_slob",
        "body": "ifxus_free_slob(${1:bid})$0"
    },
    "ifxus_open_slob": {
        "prefix": "ifxus_open_slob",
        "body": "ifxus_open_slob(${1:bid}, ${2:mode})$0"
    },
    "ifxus_read_slob": {
        "prefix": "ifxus_read_slob",
        "body": "ifxus_read_slob(${1:bid}, ${2:nbytes})$0"
    },
    "ifxus_seek_slob": {
        "prefix": "ifxus_seek_slob",
        "body": "ifxus_seek_slob(${1:bid}, ${2:mode}, ${3:offset})$0"
    },
    "ifxus_tell_slob": {
        "prefix": "ifxus_tell_slob",
        "body": "ifxus_tell_slob(${1:bid})$0"
    },
    "ifxus_write_slob": {
        "prefix": "ifxus_write_slob",
        "body": "ifxus_write_slob(${1:bid}, ${2:content})$0"
    },
    "ignore_user_abort": {
        "prefix": "ignore_user_abort",
        "body": "ignore_user_abort()$0"
    },
    "iis_add_server": {
        "prefix": "iis_add_server",
        "body": "iis_add_server(${1:path}, ${2:comment}, ${3:server_ip}, ${4:port}, ${5:host_name}, ${6:rights}, ${7:start_server})$0"
    },
    "iis_get_dir_security": {
        "prefix": "iis_get_dir_security",
        "body": "iis_get_dir_security(${1:server_instance}, ${2:virtual_path})$0"
    },
    "iis_get_script_map": {
        "prefix": "iis_get_script_map",
        "body": "iis_get_script_map(${1:server_instance}, ${2:virtual_path}, ${3:script_extension})$0"
    },
    "iis_get_server_by_comment": {
        "prefix": "iis_get_server_by_comment",
        "body": "iis_get_server_by_comment(${1:comment})$0"
    },
    "iis_get_server_by_path": {
        "prefix": "iis_get_server_by_path",
        "body": "iis_get_server_by_path(${1:path})$0"
    },
    "iis_get_server_rights": {
        "prefix": "iis_get_server_rights",
        "body": "iis_get_server_rights(${1:server_instance}, ${2:virtual_path})$0"
    },
    "iis_get_service_state": {
        "prefix": "iis_get_service_state",
        "body": "iis_get_service_state(${1:service_id})$0"
    },
    "iis_remove_server": {
        "prefix": "iis_remove_server",
        "body": "iis_remove_server(${1:server_instance})$0"
    },
    "iis_set_app_settings": {
        "prefix": "iis_set_app_settings",
        "body": "iis_set_app_settings(${1:server_instance}, ${2:virtual_path}, ${3:application_scope})$0"
    },
    "iis_set_dir_security": {
        "prefix": "iis_set_dir_security",
        "body": "iis_set_dir_security(${1:server_instance}, ${2:virtual_path}, ${3:directory_flags})$0"
    },
    "iis_set_script_map": {
        "prefix": "iis_set_script_map",
        "body": "iis_set_script_map(${1:server_instance}, ${2:virtual_path}, ${3:script_extension}, ${4:engine_path}, ${5:allow_scripting})$0"
    },
    "iis_set_server_rights": {
        "prefix": "iis_set_server_rights",
        "body": "iis_set_server_rights(${1:server_instance}, ${2:virtual_path}, ${3:directory_flags})$0"
    },
    "iis_start_server": {
        "prefix": "iis_start_server",
        "body": "iis_start_server(${1:server_instance})$0"
    },
    "iis_start_service": {
        "prefix": "iis_start_service",
        "body": "iis_start_service(${1:service_id})$0"
    },
    "iis_stop_server": {
        "prefix": "iis_stop_server",
        "body": "iis_stop_server(${1:server_instance})$0"
    },
    "iis_stop_service": {
        "prefix": "iis_stop_service",
        "body": "iis_stop_service(${1:service_id})$0"
    },
    "image2wbmp": {
        "prefix": "image2wbmp",
        "body": "image2wbmp(${1:image})$0"
    },
    "image_type_to_extension": {
        "prefix": "image_type_to_extension",
        "body": "image_type_to_extension(${1:imagetype})$0"
    },
    "image_type_to_mime_type": {
        "prefix": "image_type_to_mime_type",
        "body": "image_type_to_mime_type(${1:imagetype})$0"
    },
    "imagealphablending": {
        "prefix": "imagealphablending",
        "body": "imagealphablending(${1:image}, ${2:blendmode})$0"
    },
    "imageantialias": {
        "prefix": "imageantialias",
        "body": "imageantialias(${1:image}, ${2:enabled})$0"
    },
    "imagearc": {
        "prefix": "imagearc",
        "body": "imagearc(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:start}, ${7:end}, ${8:color})$0"
    },
    "imagechar": {
        "prefix": "imagechar",
        "body": "imagechar(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:c}, ${6:color})$0"
    },
    "imagecharup": {
        "prefix": "imagecharup",
        "body": "imagecharup(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:c}, ${6:color})$0"
    },
    "imagecolorallocate": {
        "prefix": "imagecolorallocate",
        "body": "imagecolorallocate(${1:image}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "imagecolorallocatealpha": {
        "prefix": "imagecolorallocatealpha",
        "body": "imagecolorallocatealpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})$0"
    },
    "imagecolorat": {
        "prefix": "imagecolorat",
        "body": "imagecolorat(${1:image}, ${2:x}, ${3:y})$0"
    },
    "imagecolorclosest": {
        "prefix": "imagecolorclosest",
        "body": "imagecolorclosest(${1:image}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "imagecolorclosestalpha": {
        "prefix": "imagecolorclosestalpha",
        "body": "imagecolorclosestalpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})$0"
    },
    "imagecolorclosesthwb": {
        "prefix": "imagecolorclosesthwb",
        "body": "imagecolorclosesthwb(${1:image}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "imagecolordeallocate": {
        "prefix": "imagecolordeallocate",
        "body": "imagecolordeallocate(${1:image}, ${2:color})$0"
    },
    "imagecolorexact": {
        "prefix": "imagecolorexact",
        "body": "imagecolorexact(${1:image}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "imagecolorexactalpha": {
        "prefix": "imagecolorexactalpha",
        "body": "imagecolorexactalpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})$0"
    },
    "imagecolormatch": {
        "prefix": "imagecolormatch",
        "body": "imagecolormatch(${1:image1}, ${2:image2})$0"
    },
    "imagecolorresolve": {
        "prefix": "imagecolorresolve",
        "body": "imagecolorresolve(${1:image}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "imagecolorresolvealpha": {
        "prefix": "imagecolorresolvealpha",
        "body": "imagecolorresolvealpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})$0"
    },
    "imagecolorset": {
        "prefix": "imagecolorset",
        "body": "imagecolorset(${1:image}, ${2:index}, ${3:red}, ${4:green}, ${5:blue})$0"
    },
    "imagecolorsforindex": {
        "prefix": "imagecolorsforindex",
        "body": "imagecolorsforindex(${1:image}, ${2:index})$0"
    },
    "imagecolorstotal": {
        "prefix": "imagecolorstotal",
        "body": "imagecolorstotal(${1:image})$0"
    },
    "imagecolortransparent": {
        "prefix": "imagecolortransparent",
        "body": "imagecolortransparent(${1:image})$0"
    },
    "imageconvolution": {
        "prefix": "imageconvolution",
        "body": "imageconvolution(${1:image}, ${2:matrix}, ${3:div}, ${4:offset})$0"
    },
    "imagecopy": {
        "prefix": "imagecopy",
        "body": "imagecopy(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h})$0"
    },
    "imagecopymerge": {
        "prefix": "imagecopymerge",
        "body": "imagecopymerge(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h}, ${9:pct})$0"
    },
    "imagecopymergegray": {
        "prefix": "imagecopymergegray",
        "body": "imagecopymergegray(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h}, ${9:pct})$0"
    },
    "imagecopyresampled": {
        "prefix": "imagecopyresampled",
        "body": "imagecopyresampled(${1:dst_image}, ${2:src_image}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:dst_w}, ${8:dst_h}, ${9:src_w}, ${10:src_h})$0"
    },
    "imagecopyresized": {
        "prefix": "imagecopyresized",
        "body": "imagecopyresized(${1:dst_image}, ${2:src_image}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:dst_w}, ${8:dst_h}, ${9:src_w}, ${10:src_h})$0"
    },
    "imagecreate": {
        "prefix": "imagecreate",
        "body": "imagecreate(${1:width}, ${2:height})$0"
    },
    "imagecreatefromgd": {
        "prefix": "imagecreatefromgd",
        "body": "imagecreatefromgd(${1:filename})$0"
    },
    "imagecreatefromgd2": {
        "prefix": "imagecreatefromgd2",
        "body": "imagecreatefromgd2(${1:filename})$0"
    },
    "imagecreatefromgd2part": {
        "prefix": "imagecreatefromgd2part",
        "body": "imagecreatefromgd2part(${1:filename}, ${2:srcX}, ${3:srcY}, ${4:width}, ${5:height})$0"
    },
    "imagecreatefromgif": {
        "prefix": "imagecreatefromgif",
        "body": "imagecreatefromgif(${1:filename})$0"
    },
    "imagecreatefromjpeg": {
        "prefix": "imagecreatefromjpeg",
        "body": "imagecreatefromjpeg(${1:filename})$0"
    },
    "imagecreatefrompng": {
        "prefix": "imagecreatefrompng",
        "body": "imagecreatefrompng(${1:filename})$0"
    },
    "imagecreatefromstring": {
        "prefix": "imagecreatefromstring",
        "body": "imagecreatefromstring(${1:data})$0"
    },
    "imagecreatefromwbmp": {
        "prefix": "imagecreatefromwbmp",
        "body": "imagecreatefromwbmp(${1:filename})$0"
    },
    "imagecreatefromxbm": {
        "prefix": "imagecreatefromxbm",
        "body": "imagecreatefromxbm(${1:filename})$0"
    },
    "imagecreatefromxpm": {
        "prefix": "imagecreatefromxpm",
        "body": "imagecreatefromxpm(${1:filename})$0"
    },
    "imagecreatetruecolor": {
        "prefix": "imagecreatetruecolor",
        "body": "imagecreatetruecolor(${1:width}, ${2:height})$0"
    },
    "imagedashedline": {
        "prefix": "imagedashedline",
        "body": "imagedashedline(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})$0"
    },
    "imagedestroy": {
        "prefix": "imagedestroy",
        "body": "imagedestroy(${1:image})$0"
    },
    "imageellipse": {
        "prefix": "imageellipse",
        "body": "imageellipse(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:color})$0"
    },
    "imagefill": {
        "prefix": "imagefill",
        "body": "imagefill(${1:image}, ${2:x}, ${3:y}, ${4:color})$0"
    },
    "imagefilledarc": {
        "prefix": "imagefilledarc",
        "body": "imagefilledarc(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:start}, ${7:end}, ${8:color}, ${9:style})$0"
    },
    "imagefilledellipse": {
        "prefix": "imagefilledellipse",
        "body": "imagefilledellipse(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:color})$0"
    },
    "imagefilledpolygon": {
        "prefix": "imagefilledpolygon",
        "body": "imagefilledpolygon(${1:image}, ${2:points}, ${3:num_points}, ${4:color})$0"
    },
    "imagefilledrectangle": {
        "prefix": "imagefilledrectangle",
        "body": "imagefilledrectangle(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})$0"
    },
    "imagefilltoborder": {
        "prefix": "imagefilltoborder",
        "body": "imagefilltoborder(${1:image}, ${2:x}, ${3:y}, ${4:border}, ${5:color})$0"
    },
    "imagefilter": {
        "prefix": "imagefilter",
        "body": "imagefilter(${1:image}, ${2:filtertype})$0"
    },
    "imagefontheight": {
        "prefix": "imagefontheight",
        "body": "imagefontheight(${1:font})$0"
    },
    "imagefontwidth": {
        "prefix": "imagefontwidth",
        "body": "imagefontwidth(${1:font})$0"
    },
    "imageftbbox": {
        "prefix": "imageftbbox",
        "body": "imageftbbox(${1:size}, ${2:angle}, ${3:fontfile}, ${4:text})$0"
    },
    "imagefttext": {
        "prefix": "imagefttext",
        "body": "imagefttext(${1:image}, ${2:size}, ${3:angle}, ${4:x}, ${5:y}, ${6:color}, ${7:fontfile}, ${8:text})$0"
    },
    "imagegammacorrect": {
        "prefix": "imagegammacorrect",
        "body": "imagegammacorrect(${1:image}, ${2:inputgamma}, ${3:outputgamma})$0"
    },
    "imagegd": {
        "prefix": "imagegd",
        "body": "imagegd(${1:image})$0"
    },
    "imagegd2": {
        "prefix": "imagegd2",
        "body": "imagegd2(${1:image})$0"
    },
    "imagegif": {
        "prefix": "imagegif",
        "body": "imagegif(${1:image})$0"
    },
    "imagegrabscreen": {
        "prefix": "imagegrabscreen",
        "body": "imagegrabscreen()$0"
    },
    "imagegrabwindow": {
        "prefix": "imagegrabwindow",
        "body": "imagegrabwindow(${1:window_handle})$0"
    },
    "imageinterlace": {
        "prefix": "imageinterlace",
        "body": "imageinterlace(${1:image})$0"
    },
    "imageistruecolor": {
        "prefix": "imageistruecolor",
        "body": "imageistruecolor(${1:image})$0"
    },
    "imagejpeg": {
        "prefix": "imagejpeg",
        "body": "imagejpeg(${1:image})$0"
    },
    "imagelayereffect": {
        "prefix": "imagelayereffect",
        "body": "imagelayereffect(${1:image}, ${2:effect})$0"
    },
    "imageline": {
        "prefix": "imageline",
        "body": "imageline(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})$0"
    },
    "imageloadfont": {
        "prefix": "imageloadfont",
        "body": "imageloadfont(${1:file})$0"
    },
    "imagepalettecopy": {
        "prefix": "imagepalettecopy",
        "body": "imagepalettecopy(${1:destination}, ${2:source})$0"
    },
    "imagepng": {
        "prefix": "imagepng",
        "body": "imagepng(${1:image})$0"
    },
    "imagepolygon": {
        "prefix": "imagepolygon",
        "body": "imagepolygon(${1:image}, ${2:points}, ${3:num_points}, ${4:color})$0"
    },
    "imagepsbbox": {
        "prefix": "imagepsbbox",
        "body": "imagepsbbox(${1:text}, ${2:font}, ${3:size})$0"
    },
    "imagepsencodefont": {
        "prefix": "imagepsencodefont",
        "body": "imagepsencodefont(${1:font_index}, ${2:encodingfile})$0"
    },
    "imagepsextendfont": {
        "prefix": "imagepsextendfont",
        "body": "imagepsextendfont(${1:font_index}, ${2:extend})$0"
    },
    "imagepsfreefont": {
        "prefix": "imagepsfreefont",
        "body": "imagepsfreefont(${1:font_index})$0"
    },
    "imagepsloadfont": {
        "prefix": "imagepsloadfont",
        "body": "imagepsloadfont(${1:filename})$0"
    },
    "imagepsslantfont": {
        "prefix": "imagepsslantfont",
        "body": "imagepsslantfont(${1:font_index}, ${2:slant})$0"
    },
    "imagepstext": {
        "prefix": "imagepstext",
        "body": "imagepstext(${1:image}, ${2:text}, ${3:font_index}, ${4:size}, ${5:foreground}, ${6:background}, ${7:x}, ${8:y})$0"
    },
    "imagerectangle": {
        "prefix": "imagerectangle",
        "body": "imagerectangle(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})$0"
    },
    "imagerotate": {
        "prefix": "imagerotate",
        "body": "imagerotate(${1:image}, ${2:angle}, ${3:bgd_color})$0"
    },
    "imagesavealpha": {
        "prefix": "imagesavealpha",
        "body": "imagesavealpha(${1:image}, ${2:saveflag})$0"
    },
    "imagesetbrush": {
        "prefix": "imagesetbrush",
        "body": "imagesetbrush(${1:image}, ${2:brush})$0"
    },
    "imagesetpixel": {
        "prefix": "imagesetpixel",
        "body": "imagesetpixel(${1:image}, ${2:x}, ${3:y}, ${4:color})$0"
    },
    "imagesetstyle": {
        "prefix": "imagesetstyle",
        "body": "imagesetstyle(${1:image}, ${2:style})$0"
    },
    "imagesetthickness": {
        "prefix": "imagesetthickness",
        "body": "imagesetthickness(${1:image}, ${2:thickness})$0"
    },
    "imagesettile": {
        "prefix": "imagesettile",
        "body": "imagesettile(${1:image}, ${2:tile})$0"
    },
    "imagestring": {
        "prefix": "imagestring",
        "body": "imagestring(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:string}, ${6:color})$0"
    },
    "imagestringup": {
        "prefix": "imagestringup",
        "body": "imagestringup(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:string}, ${6:color})$0"
    },
    "imagesx": {
        "prefix": "imagesx",
        "body": "imagesx(${1:image})$0"
    },
    "imagesy": {
        "prefix": "imagesy",
        "body": "imagesy(${1:image})$0"
    },
    "imagetruecolortopalette": {
        "prefix": "imagetruecolortopalette",
        "body": "imagetruecolortopalette(${1:image}, ${2:dither}, ${3:ncolors})$0"
    },
    "imagettfbbox": {
        "prefix": "imagettfbbox",
        "body": "imagettfbbox(${1:size}, ${2:angle}, ${3:fontfile}, ${4:text})$0"
    },
    "imagettftext": {
        "prefix": "imagettftext",
        "body": "imagettftext(${1:image}, ${2:size}, ${3:angle}, ${4:x}, ${5:y}, ${6:color}, ${7:fontfile}, ${8:text})$0"
    },
    "imagetypes": {
        "prefix": "imagetypes",
        "body": "imagetypes()$0"
    },
    "imagewbmp": {
        "prefix": "imagewbmp",
        "body": "imagewbmp(${1:image})$0"
    },
    "imagexbm": {
        "prefix": "imagexbm",
        "body": "imagexbm(${1:image}, ${2:filename})$0"
    },
    "imap_8bit": {
        "prefix": "imap_8bit",
        "body": "imap_8bit(${1:string})$0"
    },
    "imap_alerts": {
        "prefix": "imap_alerts",
        "body": "imap_alerts()$0"
    },
    "imap_append": {
        "prefix": "imap_append",
        "body": "imap_append(${1:imap_stream}, ${2:mailbox}, ${3:message})$0"
    },
    "imap_base64": {
        "prefix": "imap_base64",
        "body": "imap_base64(${1:text})$0"
    },
    "imap_binary": {
        "prefix": "imap_binary",
        "body": "imap_binary(${1:string})$0"
    },
    "imap_body": {
        "prefix": "imap_body",
        "body": "imap_body(${1:imap_stream}, ${2:msg_number})$0"
    },
    "imap_bodystruct": {
        "prefix": "imap_bodystruct",
        "body": "imap_bodystruct(${1:imap_stream}, ${2:msg_number}, ${3:section})$0"
    },
    "imap_check": {
        "prefix": "imap_check",
        "body": "imap_check(${1:imap_stream})$0"
    },
    "imap_clearflag_full": {
        "prefix": "imap_clearflag_full",
        "body": "imap_clearflag_full(${1:imap_stream}, ${2:sequence}, ${3:flag})$0"
    },
    "imap_close": {
        "prefix": "imap_close",
        "body": "imap_close(${1:imap_stream})$0"
    },
    "imap_createmailbox": {
        "prefix": "imap_createmailbox",
        "body": "imap_createmailbox(${1:imap_stream}, ${2:mailbox})$0"
    },
    "imap_delete": {
        "prefix": "imap_delete",
        "body": "imap_delete(${1:imap_stream}, ${2:msg_number})$0"
    },
    "imap_deletemailbox": {
        "prefix": "imap_deletemailbox",
        "body": "imap_deletemailbox(${1:imap_stream}, ${2:mailbox})$0"
    },
    "imap_errors": {
        "prefix": "imap_errors",
        "body": "imap_errors()$0"
    },
    "imap_expunge": {
        "prefix": "imap_expunge",
        "body": "imap_expunge(${1:imap_stream})$0"
    },
    "imap_fetch_overview": {
        "prefix": "imap_fetch_overview",
        "body": "imap_fetch_overview(${1:imap_stream}, ${2:sequence})$0"
    },
    "imap_fetchbody": {
        "prefix": "imap_fetchbody",
        "body": "imap_fetchbody(${1:imap_stream}, ${2:msg_number}, ${3:section})$0"
    },
    "imap_fetchheader": {
        "prefix": "imap_fetchheader",
        "body": "imap_fetchheader(${1:imap_stream}, ${2:msg_number})$0"
    },
    "imap_fetchstructure": {
        "prefix": "imap_fetchstructure",
        "body": "imap_fetchstructure(${1:imap_stream}, ${2:msg_number})$0"
    },
    "imap_gc": {
        "prefix": "imap_gc",
        "body": "imap_gc(${1:imap_stream}, ${2:caches})$0"
    },
    "imap_get_quota": {
        "prefix": "imap_get_quota",
        "body": "imap_get_quota(${1:imap_stream}, ${2:quota_root})$0"
    },
    "imap_get_quotaroot": {
        "prefix": "imap_get_quotaroot",
        "body": "imap_get_quotaroot(${1:imap_stream}, ${2:quota_root})$0"
    },
    "imap_getacl": {
        "prefix": "imap_getacl",
        "body": "imap_getacl(${1:imap_stream}, ${2:mailbox})$0"
    },
    "imap_getmailboxes": {
        "prefix": "imap_getmailboxes",
        "body": "imap_getmailboxes(${1:imap_stream}, ${2:ref}, ${3:pattern})$0"
    },
    "imap_getsubscribed": {
        "prefix": "imap_getsubscribed",
        "body": "imap_getsubscribed(${1:imap_stream}, ${2:ref}, ${3:pattern})$0"
    },
    "imap_header": {
        "prefix": "imap_header",
        "body": "imap_header()$0"
    },
    "imap_headerinfo": {
        "prefix": "imap_headerinfo",
        "body": "imap_headerinfo(${1:imap_stream}, ${2:msg_number})$0"
    },
    "imap_headers": {
        "prefix": "imap_headers",
        "body": "imap_headers(${1:imap_stream})$0"
    },
    "imap_last_error": {
        "prefix": "imap_last_error",
        "body": "imap_last_error()$0"
    },
    "imap_list": {
        "prefix": "imap_list",
        "body": "imap_list(${1:imap_stream}, ${2:ref}, ${3:pattern})$0"
    },
    "imap_listmailbox": {
        "prefix": "imap_listmailbox",
        "body": "imap_listmailbox()$0"
    },
    "imap_listscan": {
        "prefix": "imap_listscan",
        "body": "imap_listscan(${1:imap_stream}, ${2:ref}, ${3:pattern}, ${4:content})$0"
    },
    "imap_listsubscribed": {
        "prefix": "imap_listsubscribed",
        "body": "imap_listsubscribed()$0"
    },
    "imap_lsub": {
        "prefix": "imap_lsub",
        "body": "imap_lsub(${1:imap_stream}, ${2:ref}, ${3:pattern})$0"
    },
    "imap_mail": {
        "prefix": "imap_mail",
        "body": "imap_mail(${1:to}, ${2:subject}, ${3:message})$0"
    },
    "imap_mail_compose": {
        "prefix": "imap_mail_compose",
        "body": "imap_mail_compose(${1:envelope}, ${2:body})$0"
    },
    "imap_mail_copy": {
        "prefix": "imap_mail_copy",
        "body": "imap_mail_copy(${1:imap_stream}, ${2:msglist}, ${3:mailbox})$0"
    },
    "imap_mail_move": {
        "prefix": "imap_mail_move",
        "body": "imap_mail_move(${1:imap_stream}, ${2:msglist}, ${3:mailbox})$0"
    },
    "imap_mailboxmsginfo": {
        "prefix": "imap_mailboxmsginfo",
        "body": "imap_mailboxmsginfo(${1:imap_stream})$0"
    },
    "imap_mime_header_decode": {
        "prefix": "imap_mime_header_decode",
        "body": "imap_mime_header_decode(${1:text})$0"
    },
    "imap_msgno": {
        "prefix": "imap_msgno",
        "body": "imap_msgno(${1:imap_stream}, ${2:uid})$0"
    },
    "imap_num_msg": {
        "prefix": "imap_num_msg",
        "body": "imap_num_msg(${1:imap_stream})$0"
    },
    "imap_num_recent": {
        "prefix": "imap_num_recent",
        "body": "imap_num_recent(${1:imap_stream})$0"
    },
    "imap_open": {
        "prefix": "imap_open",
        "body": "imap_open(${1:mailbox}, ${2:username}, ${3:password})$0"
    },
    "imap_ping": {
        "prefix": "imap_ping",
        "body": "imap_ping(${1:imap_stream})$0"
    },
    "imap_qprint": {
        "prefix": "imap_qprint",
        "body": "imap_qprint(${1:string})$0"
    },
    "imap_renamemailbox": {
        "prefix": "imap_renamemailbox",
        "body": "imap_renamemailbox(${1:imap_stream}, ${2:old_mbox}, ${3:new_mbox})$0"
    },
    "imap_reopen": {
        "prefix": "imap_reopen",
        "body": "imap_reopen(${1:imap_stream}, ${2:mailbox})$0"
    },
    "imap_rfc822_parse_adrlist": {
        "prefix": "imap_rfc822_parse_adrlist",
        "body": "imap_rfc822_parse_adrlist(${1:address}, ${2:default_host})$0"
    },
    "imap_rfc822_parse_headers": {
        "prefix": "imap_rfc822_parse_headers",
        "body": "imap_rfc822_parse_headers(${1:headers})$0"
    },
    "imap_rfc822_write_address": {
        "prefix": "imap_rfc822_write_address",
        "body": "imap_rfc822_write_address(${1:mailbox}, ${2:host}, ${3:personal})$0"
    },
    "imap_savebody": {
        "prefix": "imap_savebody",
        "body": "imap_savebody(${1:imap_stream}, ${2:file}, ${3:msg_number})$0"
    },
    "imap_scanmailbox": {
        "prefix": "imap_scanmailbox",
        "body": "imap_scanmailbox()$0"
    },
    "imap_search": {
        "prefix": "imap_search",
        "body": "imap_search(${1:imap_stream}, ${2:criteria})$0"
    },
    "imap_set_quota": {
        "prefix": "imap_set_quota",
        "body": "imap_set_quota(${1:imap_stream}, ${2:quota_root}, ${3:quota_limit})$0"
    },
    "imap_setacl": {
        "prefix": "imap_setacl",
        "body": "imap_setacl(${1:imap_stream}, ${2:mailbox}, ${3:id}, ${4:rights})$0"
    },
    "imap_setflag_full": {
        "prefix": "imap_setflag_full",
        "body": "imap_setflag_full(${1:imap_stream}, ${2:sequence}, ${3:flag})$0"
    },
    "imap_sort": {
        "prefix": "imap_sort",
        "body": "imap_sort(${1:imap_stream}, ${2:criteria}, ${3:reverse})$0"
    },
    "imap_status": {
        "prefix": "imap_status",
        "body": "imap_status(${1:imap_stream}, ${2:mailbox}, ${3:options})$0"
    },
    "imap_subscribe": {
        "prefix": "imap_subscribe",
        "body": "imap_subscribe(${1:imap_stream}, ${2:mailbox})$0"
    },
    "imap_thread": {
        "prefix": "imap_thread",
        "body": "imap_thread(${1:imap_stream})$0"
    },
    "imap_timeout": {
        "prefix": "imap_timeout",
        "body": "imap_timeout(${1:timeout_type})$0"
    },
    "imap_uid": {
        "prefix": "imap_uid",
        "body": "imap_uid(${1:imap_stream}, ${2:msg_number})$0"
    },
    "imap_undelete": {
        "prefix": "imap_undelete",
        "body": "imap_undelete(${1:imap_stream}, ${2:msg_number})$0"
    },
    "imap_unsubscribe": {
        "prefix": "imap_unsubscribe",
        "body": "imap_unsubscribe(${1:imap_stream}, ${2:mailbox})$0"
    },
    "imap_utf7_decode": {
        "prefix": "imap_utf7_decode",
        "body": "imap_utf7_decode(${1:text})$0"
    },
    "imap_utf7_encode": {
        "prefix": "imap_utf7_encode",
        "body": "imap_utf7_encode(${1:data})$0"
    },
    "imap_utf8": {
        "prefix": "imap_utf8",
        "body": "imap_utf8(${1:mime_encoded_text})$0"
    },
    "implode": {
        "prefix": "implode",
        "body": "implode(${1:glue}, ${2:pieces})$0"
    },
    "import_request_variables": {
        "prefix": "import_request_variables",
        "body": "import_request_variables(${1:types})$0"
    },
    "in_array": {
        "prefix": "in_array",
        "body": "in_array(${1:needle}, ${2:haystack})$0"
    },
    "": {
        "prefix": "",
        "body": "()$0"
    },
    "inclued_get_data": {
        "prefix": "inclued_get_data",
        "body": "inclued_get_data()$0"
    },
    "inet_ntop": {
        "prefix": "inet_ntop",
        "body": "inet_ntop(${1:in_addr})$0"
    },
    "inet_pton": {
        "prefix": "inet_pton",
        "body": "inet_pton(${1:address})$0"
    },
    "ingres_autocommit": {
        "prefix": "ingres_autocommit",
        "body": "ingres_autocommit(${1:link})$0"
    },
    "ingres_autocommit_state": {
        "prefix": "ingres_autocommit_state",
        "body": "ingres_autocommit_state(${1:link})$0"
    },
    "ingres_charset": {
        "prefix": "ingres_charset",
        "body": "ingres_charset(${1:link})$0"
    },
    "ingres_close": {
        "prefix": "ingres_close",
        "body": "ingres_close(${1:link})$0"
    },
    "ingres_commit": {
        "prefix": "ingres_commit",
        "body": "ingres_commit(${1:link})$0"
    },
    "ingres_connect": {
        "prefix": "ingres_connect",
        "body": "ingres_connect()$0"
    },
    "ingres_cursor": {
        "prefix": "ingres_cursor",
        "body": "ingres_cursor(${1:result})$0"
    },
    "ingres_errno": {
        "prefix": "ingres_errno",
        "body": "ingres_errno()$0"
    },
    "ingres_error": {
        "prefix": "ingres_error",
        "body": "ingres_error()$0"
    },
    "ingres_errsqlstate": {
        "prefix": "ingres_errsqlstate",
        "body": "ingres_errsqlstate()$0"
    },
    "ingres_escape_string": {
        "prefix": "ingres_escape_string",
        "body": "ingres_escape_string(${1:link}, ${2:source_string})$0"
    },
    "ingres_execute": {
        "prefix": "ingres_execute",
        "body": "ingres_execute(${1:result})$0"
    },
    "ingres_fetch_array": {
        "prefix": "ingres_fetch_array",
        "body": "ingres_fetch_array(${1:result})$0"
    },
    "ingres_fetch_assoc": {
        "prefix": "ingres_fetch_assoc",
        "body": "ingres_fetch_assoc(${1:result})$0"
    },
    "ingres_fetch_object": {
        "prefix": "ingres_fetch_object",
        "body": "ingres_fetch_object(${1:result})$0"
    },
    "ingres_fetch_proc_return": {
        "prefix": "ingres_fetch_proc_return",
        "body": "ingres_fetch_proc_return(${1:result})$0"
    },
    "ingres_fetch_row": {
        "prefix": "ingres_fetch_row",
        "body": "ingres_fetch_row(${1:result})$0"
    },
    "ingres_field_length": {
        "prefix": "ingres_field_length",
        "body": "ingres_field_length(${1:result}, ${2:index})$0"
    },
    "ingres_field_name": {
        "prefix": "ingres_field_name",
        "body": "ingres_field_name(${1:result}, ${2:index})$0"
    },
    "ingres_field_nullable": {
        "prefix": "ingres_field_nullable",
        "body": "ingres_field_nullable(${1:result}, ${2:index})$0"
    },
    "ingres_field_precision": {
        "prefix": "ingres_field_precision",
        "body": "ingres_field_precision(${1:result}, ${2:index})$0"
    },
    "ingres_field_scale": {
        "prefix": "ingres_field_scale",
        "body": "ingres_field_scale(${1:result}, ${2:index})$0"
    },
    "ingres_field_type": {
        "prefix": "ingres_field_type",
        "body": "ingres_field_type(${1:result}, ${2:index})$0"
    },
    "ingres_free_result": {
        "prefix": "ingres_free_result",
        "body": "ingres_free_result(${1:result})$0"
    },
    "ingres_next_error": {
        "prefix": "ingres_next_error",
        "body": "ingres_next_error()$0"
    },
    "ingres_num_fields": {
        "prefix": "ingres_num_fields",
        "body": "ingres_num_fields(${1:result})$0"
    },
    "ingres_num_rows": {
        "prefix": "ingres_num_rows",
        "body": "ingres_num_rows(${1:result})$0"
    },
    "ingres_pconnect": {
        "prefix": "ingres_pconnect",
        "body": "ingres_pconnect()$0"
    },
    "ingres_prepare": {
        "prefix": "ingres_prepare",
        "body": "ingres_prepare(${1:link}, ${2:query})$0"
    },
    "ingres_query": {
        "prefix": "ingres_query",
        "body": "ingres_query(${1:link}, ${2:query})$0"
    },
    "ingres_result_seek": {
        "prefix": "ingres_result_seek",
        "body": "ingres_result_seek(${1:result}, ${2:position})$0"
    },
    "ingres_rollback": {
        "prefix": "ingres_rollback",
        "body": "ingres_rollback(${1:link})$0"
    },
    "ingres_set_environment": {
        "prefix": "ingres_set_environment",
        "body": "ingres_set_environment(${1:link}, ${2:options})$0"
    },
    "ingres_unbuffered_query": {
        "prefix": "ingres_unbuffered_query",
        "body": "ingres_unbuffered_query(${1:link}, ${2:query})$0"
    },
    "ini_alter": {
        "prefix": "ini_alter",
        "body": "ini_alter()$0"
    },
    "ini_get": {
        "prefix": "ini_get",
        "body": "ini_get(${1:varname})$0"
    },
    "ini_get_all": {
        "prefix": "ini_get_all",
        "body": "ini_get_all()$0"
    },
    "ini_restore": {
        "prefix": "ini_restore",
        "body": "ini_restore(${1:varname})$0"
    },
    "ini_set": {
        "prefix": "ini_set",
        "body": "ini_set(${1:varname}, ${2:newvalue})$0"
    },
    "inotify_add_watch": {
        "prefix": "inotify_add_watch",
        "body": "inotify_add_watch(${1:inotify_instance}, ${2:pathname}, ${3:mask})$0"
    },
    "inotify_init": {
        "prefix": "inotify_init",
        "body": "inotify_init()$0"
    },
    "inotify_queue_len": {
        "prefix": "inotify_queue_len",
        "body": "inotify_queue_len(${1:inotify_instance})$0"
    },
    "inotify_read": {
        "prefix": "inotify_read",
        "body": "inotify_read(${1:inotify_instance})$0"
    },
    "inotify_rm_watch": {
        "prefix": "inotify_rm_watch",
        "body": "inotify_rm_watch(${1:inotify_instance}, ${2:watch_descriptor})$0"
    },
    "intdiv": {
        "prefix": "intdiv",
        "body": "intdiv(${1:dividend}, ${2:divisor})$0"
    },
    "interface_exists": {
        "prefix": "interface_exists",
        "body": "interface_exists(${1:interface_name})$0"
    },
    "intl_error_name": {
        "prefix": "intl_error_name",
        "body": "intl_error_name(${1:error_code})$0"
    },
    "intl_get_error_code": {
        "prefix": "intl_get_error_code",
        "body": "intl_get_error_code()$0"
    },
    "intl_get_error_message": {
        "prefix": "intl_get_error_message",
        "body": "intl_get_error_message()$0"
    },
    "intl_is_failure": {
        "prefix": "intl_is_failure",
        "body": "intl_is_failure(${1:error_code})$0"
    },
    "intval": {
        "prefix": "intval",
        "body": "intval(${1:var})$0"
    },
    "ip2long": {
        "prefix": "ip2long",
        "body": "ip2long(${1:ip_address})$0"
    },
    "iptcembed": {
        "prefix": "iptcembed",
        "body": "iptcembed(${1:iptcdata}, ${2:jpeg_file_name})$0"
    },
    "iptcparse": {
        "prefix": "iptcparse",
        "body": "iptcparse(${1:iptcblock})$0"
    },
    "is_a": {
        "prefix": "is_a",
        "body": "is_a(${1:object}, ${2:class_name})$0"
    },
    "is_array": {
        "prefix": "is_array",
        "body": "is_array(${1:var})$0"
    },
    "is_bool": {
        "prefix": "is_bool",
        "body": "is_bool(${1:var})$0"
    },
    "is_callable": {
        "prefix": "is_callable",
        "body": "is_callable(${1:name})$0"
    },
    "is_dir": {
        "prefix": "is_dir",
        "body": "is_dir(${1:filename})$0"
    },
    "is_double": {
        "prefix": "is_double",
        "body": "is_double()$0"
    },
    "is_executable": {
        "prefix": "is_executable",
        "body": "is_executable(${1:filename})$0"
    },
    "is_file": {
        "prefix": "is_file",
        "body": "is_file(${1:filename})$0"
    },
    "is_finite": {
        "prefix": "is_finite",
        "body": "is_finite(${1:val})$0"
    },
    "is_float": {
        "prefix": "is_float",
        "body": "is_float(${1:var})$0"
    },
    "is_infinite": {
        "prefix": "is_infinite",
        "body": "is_infinite(${1:val})$0"
    },
    "is_int": {
        "prefix": "is_int",
        "body": "is_int(${1:var})$0"
    },
    "is_integer": {
        "prefix": "is_integer",
        "body": "is_integer()$0"
    },
    "is_link": {
        "prefix": "is_link",
        "body": "is_link(${1:filename})$0"
    },
    "is_long": {
        "prefix": "is_long",
        "body": "is_long()$0"
    },
    "is_nan": {
        "prefix": "is_nan",
        "body": "is_nan(${1:val})$0"
    },
    "is_null": {
        "prefix": "is_null",
        "body": "is_null(${1:var})$0"
    },
    "is_numeric": {
        "prefix": "is_numeric",
        "body": "is_numeric(${1:var})$0"
    },
    "is_object": {
        "prefix": "is_object",
        "body": "is_object(${1:var})$0"
    },
    "is_readable": {
        "prefix": "is_readable",
        "body": "is_readable(${1:filename})$0"
    },
    "is_real": {
        "prefix": "is_real",
        "body": "is_real()$0"
    },
    "is_resource": {
        "prefix": "is_resource",
        "body": "is_resource(${1:var})$0"
    },
    "is_scalar": {
        "prefix": "is_scalar",
        "body": "is_scalar(${1:var})$0"
    },
    "is_soap_fault": {
        "prefix": "is_soap_fault",
        "body": "is_soap_fault(${1:object})$0"
    },
    "is_string": {
        "prefix": "is_string",
        "body": "is_string(${1:var})$0"
    },
    "is_subclass_of": {
        "prefix": "is_subclass_of",
        "body": "is_subclass_of(${1:object}, ${2:class_name})$0"
    },
    "is_uploaded_file": {
        "prefix": "is_uploaded_file",
        "body": "is_uploaded_file(${1:filename})$0"
    },
    "is_writable": {
        "prefix": "is_writable",
        "body": "is_writable(${1:filename})$0"
    },
    "is_writeable": {
        "prefix": "is_writeable",
        "body": "is_writeable()$0"
    },
    "isset": {
        "prefix": "isset",
        "body": "diset(${1:var})$0"
    },
    "diset": {
        "prefix": "diset",
        "body": "diset(${1:var})$0"
    },
    "iterator_apply": {
        "prefix": "iterator_apply",
        "body": "iterator_apply(${1:iterator}, ${2:function})$0"
    },
    "iterator_count": {
        "prefix": "iterator_count",
        "body": "iterator_count(${1:iterator})$0"
    },
    "iterator_to_array": {
        "prefix": "iterator_to_array",
        "body": "iterator_to_array(${1:iterator})$0"
    },
    "java_last_exception_clear": {
        "prefix": "java_last_exception_clear",
        "body": "java_last_exception_clear()$0"
    },
    "java_last_exception_get": {
        "prefix": "java_last_exception_get",
        "body": "java_last_exception_get()$0"
    },
    "JDDayOfWeek": {
        "prefix": "JDDayOfWeek",
        "body": "JDDayOfWeek(${1:julianday})$0"
    },
    "JDMonthName": {
        "prefix": "JDMonthName",
        "body": "JDMonthName(${1:julianday}, ${2:mode})$0"
    },
    "JDToFrench": {
        "prefix": "JDToFrench",
        "body": "JDToFrench(${1:juliandaycount})$0"
    },
    "JDToGregorian": {
        "prefix": "JDToGregorian",
        "body": "JDToGregorian(${1:julianday})$0"
    },
    "jdtojewish": {
        "prefix": "jdtojewish",
        "body": "jdtojewish(${1:juliandaycount})$0"
    },
    "JDToJulian": {
        "prefix": "JDToJulian",
        "body": "JDToJulian(${1:julianday})$0"
    },
    "jdtounix": {
        "prefix": "jdtounix",
        "body": "jdtounix(${1:jday})$0"
    },
    "JewishToJD": {
        "prefix": "JewishToJD",
        "body": "JewishToJD(${1:month}, ${2:day}, ${3:year})$0"
    },
    "join": {
        "prefix": "join",
        "body": "join()$0"
    },
    "jpeg2wbmp": {
        "prefix": "jpeg2wbmp",
        "body": "jpeg2wbmp(${1:jpegname}, ${2:wbmpname}, ${3:dest_height}, ${4:dest_width}, ${5:threshold})$0"
    },
    "json_decode": {
        "prefix": "json_decode",
        "body": "json_decode(${1:json})$0"
    },
    "json_encode": {
        "prefix": "json_encode",
        "body": "json_encode(${1:value})$0"
    },
    "json_last_error": {
        "prefix": "json_last_error",
        "body": "json_last_error()$0"
    },
    "judy_type": {
        "prefix": "judy_type",
        "body": "judy_type(${1:array})$0"
    },
    "judy_version": {
        "prefix": "judy_version",
        "body": "judy_version()$0"
    },
    "JulianToJD": {
        "prefix": "JulianToJD",
        "body": "JulianToJD(${1:month}, ${2:day}, ${3:year})$0"
    },
    "kadm5_chpass_principal": {
        "prefix": "kadm5_chpass_principal",
        "body": "kadm5_chpass_principal(${1:handle}, ${2:principal}, ${3:password})$0"
    },
    "kadm5_create_principal": {
        "prefix": "kadm5_create_principal",
        "body": "kadm5_create_principal(${1:handle}, ${2:principal})$0"
    },
    "kadm5_delete_principal": {
        "prefix": "kadm5_delete_principal",
        "body": "kadm5_delete_principal(${1:handle}, ${2:principal})$0"
    },
    "kadm5_destroy": {
        "prefix": "kadm5_destroy",
        "body": "kadm5_destroy(${1:handle})$0"
    },
    "kadm5_flush": {
        "prefix": "kadm5_flush",
        "body": "kadm5_flush(${1:handle})$0"
    },
    "kadm5_get_policies": {
        "prefix": "kadm5_get_policies",
        "body": "kadm5_get_policies(${1:handle})$0"
    },
    "kadm5_get_principal": {
        "prefix": "kadm5_get_principal",
        "body": "kadm5_get_principal(${1:handle}, ${2:principal})$0"
    },
    "kadm5_get_principals": {
        "prefix": "kadm5_get_principals",
        "body": "kadm5_get_principals(${1:handle})$0"
    },
    "kadm5_init_with_password": {
        "prefix": "kadm5_init_with_password",
        "body": "kadm5_init_with_password(${1:admin_server}, ${2:realm}, ${3:principal}, ${4:password})$0"
    },
    "kadm5_modify_principal": {
        "prefix": "kadm5_modify_principal",
        "body": "kadm5_modify_principal(${1:handle}, ${2:principal}, ${3:options})$0"
    },
    "key": {
        "prefix": "key",
        "body": "key(${1:array})$0"
    },
    "krsort": {
        "prefix": "krsort",
        "body": "krsort(${1:array})$0"
    },
    "ksort": {
        "prefix": "ksort",
        "body": "ksort(${1:array})$0"
    },
    "lcfirst": {
        "prefix": "lcfirst",
        "body": "lcfirst(${1:str})$0"
    },
    "lcg_value": {
        "prefix": "lcg_value",
        "body": "lcg_value()$0"
    },
    "lchgrp": {
        "prefix": "lchgrp",
        "body": "lchgrp(${1:filename}, ${2:group})$0"
    },
    "lchown": {
        "prefix": "lchown",
        "body": "lchown(${1:filename}, ${2:user})$0"
    },
    "ldap_8859_to_t61": {
        "prefix": "ldap_8859_to_t61",
        "body": "ldap_8859_to_t61(${1:value})$0"
    },
    "ldap_add": {
        "prefix": "ldap_add",
        "body": "ldap_add(${1:link_identifier}, ${2:dn}, ${3:entry})$0"
    },
    "ldap_bind": {
        "prefix": "ldap_bind",
        "body": "ldap_bind(${1:link_identifier})$0"
    },
    "ldap_close": {
        "prefix": "ldap_close",
        "body": "ldap_close()$0"
    },
    "ldap_compare": {
        "prefix": "ldap_compare",
        "body": "ldap_compare(${1:link_identifier}, ${2:dn}, ${3:attribute}, ${4:value})$0"
    },
    "ldap_connect": {
        "prefix": "ldap_connect",
        "body": "ldap_connect()$0"
    },
    "ldap_count_entries": {
        "prefix": "ldap_count_entries",
        "body": "ldap_count_entries(${1:link_identifier}, ${2:result_identifier})$0"
    },
    "ldap_delete": {
        "prefix": "ldap_delete",
        "body": "ldap_delete(${1:link_identifier}, ${2:dn})$0"
    },
    "ldap_dn2ufn": {
        "prefix": "ldap_dn2ufn",
        "body": "ldap_dn2ufn(${1:dn})$0"
    },
    "ldap_err2str": {
        "prefix": "ldap_err2str",
        "body": "ldap_err2str(${1:errno})$0"
    },
    "ldap_errno": {
        "prefix": "ldap_errno",
        "body": "ldap_errno(${1:link_identifier})$0"
    },
    "ldap_error": {
        "prefix": "ldap_error",
        "body": "ldap_error(${1:link_identifier})$0"
    },
    "ldap_explode_dn": {
        "prefix": "ldap_explode_dn",
        "body": "ldap_explode_dn(${1:dn}, ${2:with_attrib})$0"
    },
    "ldap_first_attribute": {
        "prefix": "ldap_first_attribute",
        "body": "ldap_first_attribute(${1:link_identifier}, ${2:result_entry_identifier})$0"
    },
    "ldap_first_entry": {
        "prefix": "ldap_first_entry",
        "body": "ldap_first_entry(${1:link_identifier}, ${2:result_identifier})$0"
    },
    "ldap_first_reference": {
        "prefix": "ldap_first_reference",
        "body": "ldap_first_reference(${1:link}, ${2:result})$0"
    },
    "ldap_free_result": {
        "prefix": "ldap_free_result",
        "body": "ldap_free_result(${1:result_identifier})$0"
    },
    "ldap_get_attributes": {
        "prefix": "ldap_get_attributes",
        "body": "ldap_get_attributes(${1:link_identifier}, ${2:result_entry_identifier})$0"
    },
    "ldap_get_dn": {
        "prefix": "ldap_get_dn",
        "body": "ldap_get_dn(${1:link_identifier}, ${2:result_entry_identifier})$0"
    },
    "ldap_get_entries": {
        "prefix": "ldap_get_entries",
        "body": "ldap_get_entries(${1:link_identifier}, ${2:result_identifier})$0"
    },
    "ldap_get_option": {
        "prefix": "ldap_get_option",
        "body": "ldap_get_option(${1:link_identifier}, ${2:option}, ${3:retval})$0"
    },
    "ldap_get_values": {
        "prefix": "ldap_get_values",
        "body": "ldap_get_values(${1:link_identifier}, ${2:result_entry_identifier}, ${3:attribute})$0"
    },
    "ldap_get_values_len": {
        "prefix": "ldap_get_values_len",
        "body": "ldap_get_values_len(${1:link_identifier}, ${2:result_entry_identifier}, ${3:attribute})$0"
    },
    "ldap_list": {
        "prefix": "ldap_list",
        "body": "ldap_list(${1:link_identifier}, ${2:base_dn}, ${3:filter})$0"
    },
    "ldap_mod_add": {
        "prefix": "ldap_mod_add",
        "body": "ldap_mod_add(${1:link_identifier}, ${2:dn}, ${3:entry})$0"
    },
    "ldap_mod_del": {
        "prefix": "ldap_mod_del",
        "body": "ldap_mod_del(${1:link_identifier}, ${2:dn}, ${3:entry})$0"
    },
    "ldap_mod_replace": {
        "prefix": "ldap_mod_replace",
        "body": "ldap_mod_replace(${1:link_identifier}, ${2:dn}, ${3:entry})$0"
    },
    "ldap_modify": {
        "prefix": "ldap_modify",
        "body": "ldap_modify(${1:link_identifier}, ${2:dn}, ${3:entry})$0"
    },
    "ldap_next_attribute": {
        "prefix": "ldap_next_attribute",
        "body": "ldap_next_attribute(${1:link_identifier}, ${2:result_entry_identifier})$0"
    },
    "ldap_next_entry": {
        "prefix": "ldap_next_entry",
        "body": "ldap_next_entry(${1:link_identifier}, ${2:result_entry_identifier})$0"
    },
    "ldap_next_reference": {
        "prefix": "ldap_next_reference",
        "body": "ldap_next_reference(${1:link}, ${2:entry})$0"
    },
    "ldap_parse_reference": {
        "prefix": "ldap_parse_reference",
        "body": "ldap_parse_reference(${1:link}, ${2:entry}, ${3:referrals})$0"
    },
    "ldap_parse_result": {
        "prefix": "ldap_parse_result",
        "body": "ldap_parse_result(${1:link}, ${2:result}, ${3:errcode})$0"
    },
    "ldap_read": {
        "prefix": "ldap_read",
        "body": "ldap_read(${1:link_identifier}, ${2:base_dn}, ${3:filter})$0"
    },
    "ldap_rename": {
        "prefix": "ldap_rename",
        "body": "ldap_rename(${1:link_identifier}, ${2:dn}, ${3:newrdn}, ${4:newparent}, ${5:deleteoldrdn})$0"
    },
    "ldap_sasl_bind": {
        "prefix": "ldap_sasl_bind",
        "body": "ldap_sasl_bind(${1:link})$0"
    },
    "ldap_search": {
        "prefix": "ldap_search",
        "body": "ldap_search(${1:link_identifier}, ${2:base_dn}, ${3:filter})$0"
    },
    "ldap_set_option": {
        "prefix": "ldap_set_option",
        "body": "ldap_set_option(${1:link_identifier}, ${2:option}, ${3:newval})$0"
    },
    "ldap_set_rebind_proc": {
        "prefix": "ldap_set_rebind_proc",
        "body": "ldap_set_rebind_proc(${1:link}, ${2:callback})$0"
    },
    "ldap_sort": {
        "prefix": "ldap_sort",
        "body": "ldap_sort(${1:link}, ${2:result}, ${3:sortfilter})$0"
    },
    "ldap_start_tls": {
        "prefix": "ldap_start_tls",
        "body": "ldap_start_tls(${1:link})$0"
    },
    "ldap_t61_to_8859": {
        "prefix": "ldap_t61_to_8859",
        "body": "ldap_t61_to_8859(${1:value})$0"
    },
    "ldap_unbind": {
        "prefix": "ldap_unbind",
        "body": "ldap_unbind(${1:link_identifier})$0"
    },
    "levenshtein": {
        "prefix": "levenshtein",
        "body": "levenshtein(${1:str1}, ${2:str2})$0"
    },
    "libxml_clear_errors": {
        "prefix": "libxml_clear_errors",
        "body": "libxml_clear_errors()$0"
    },
    "libxml_disable_entity_loader": {
        "prefix": "libxml_disable_entity_loader",
        "body": "libxml_disable_entity_loader()$0"
    },
    "libxml_get_errors": {
        "prefix": "libxml_get_errors",
        "body": "libxml_get_errors()$0"
    },
    "libxml_get_last_error": {
        "prefix": "libxml_get_last_error",
        "body": "libxml_get_last_error()$0"
    },
    "libxml_set_streams_context": {
        "prefix": "libxml_set_streams_context",
        "body": "libxml_set_streams_context(${1:streams_context})$0"
    },
    "libxml_use_internal_errors": {
        "prefix": "libxml_use_internal_errors",
        "body": "libxml_use_internal_errors()$0"
    },
    "link": {
        "prefix": "link",
        "body": "link(${1:target}, ${2:link})$0"
    },
    "linkinfo": {
        "prefix": "linkinfo",
        "body": "linkinfo(${1:path})$0"
    },
    "list": {
        "prefix": "list",
        "body": "daftar(${1:varname})$0"
    },
    "daftar": {
        "prefix": "daftar",
        "body": "daftar(${1:varname})$0"
    },
    "localeconv": {
        "prefix": "localeconv",
        "body": "localeconv()$0"
    },
    "localtime": {
        "prefix": "localtime",
        "body": "localtime()$0"
    },
    "log": {
        "prefix": "log",
        "body": "log(${1:arg})$0"
    },
    "log10": {
        "prefix": "log10",
        "body": "log10(${1:arg})$0"
    },
    "log1p": {
        "prefix": "log1p",
        "body": "log1p(${1:number})$0"
    },
    "long2ip": {
        "prefix": "long2ip",
        "body": "long2ip(${1:proper_address})$0"
    },
    "lstat": {
        "prefix": "lstat",
        "body": "lstat(${1:filename})$0"
    },
    "ltrim": {
        "prefix": "ltrim",
        "body": "ltrim(${1:str})$0"
    },
    "lzf_compress": {
        "prefix": "lzf_compress",
        "body": "lzf_compress(${1:data})$0"
    },
    "lzf_decompress": {
        "prefix": "lzf_decompress",
        "body": "lzf_decompress(${1:data})$0"
    },
    "lzf_optimized_for": {
        "prefix": "lzf_optimized_for",
        "body": "lzf_optimized_for()$0"
    },
    "m_checkstatus": {
        "prefix": "m_checkstatus",
        "body": "m_checkstatus(${1:conn}, ${2:identifier})$0"
    },
    "m_completeauthorizations": {
        "prefix": "m_completeauthorizations",
        "body": "m_completeauthorizations(${1:conn}, ${2:array})$0"
    },
    "m_connect": {
        "prefix": "m_connect",
        "body": "m_connect(${1:conn})$0"
    },
    "m_connectionerror": {
        "prefix": "m_connectionerror",
        "body": "m_connectionerror(${1:conn})$0"
    },
    "m_deletetrans": {
        "prefix": "m_deletetrans",
        "body": "m_deletetrans(${1:conn}, ${2:identifier})$0"
    },
    "m_destroyconn": {
        "prefix": "m_destroyconn",
        "body": "m_destroyconn(${1:conn})$0"
    },
    "m_destroyengine": {
        "prefix": "m_destroyengine",
        "body": "m_destroyengine()$0"
    },
    "m_getcell": {
        "prefix": "m_getcell",
        "body": "m_getcell(${1:conn}, ${2:identifier}, ${3:column}, ${4:row})$0"
    },
    "m_getcellbynum": {
        "prefix": "m_getcellbynum",
        "body": "m_getcellbynum(${1:conn}, ${2:identifier}, ${3:column}, ${4:row})$0"
    },
    "m_getcommadelimited": {
        "prefix": "m_getcommadelimited",
        "body": "m_getcommadelimited(${1:conn}, ${2:identifier})$0"
    },
    "m_getheader": {
        "prefix": "m_getheader",
        "body": "m_getheader(${1:conn}, ${2:identifier}, ${3:column_num})$0"
    },
    "m_initconn": {
        "prefix": "m_initconn",
        "body": "m_initconn()$0"
    },
    "m_initengine": {
        "prefix": "m_initengine",
        "body": "m_initengine(${1:location})$0"
    },
    "m_iscommadelimited": {
        "prefix": "m_iscommadelimited",
        "body": "m_iscommadelimited(${1:conn}, ${2:identifier})$0"
    },
    "m_maxconntimeout": {
        "prefix": "m_maxconntimeout",
        "body": "m_maxconntimeout(${1:conn}, ${2:secs})$0"
    },
    "m_monitor": {
        "prefix": "m_monitor",
        "body": "m_monitor(${1:conn})$0"
    },
    "m_numcolumns": {
        "prefix": "m_numcolumns",
        "body": "m_numcolumns(${1:conn}, ${2:identifier})$0"
    },
    "m_numrows": {
        "prefix": "m_numrows",
        "body": "m_numrows(${1:conn}, ${2:identifier})$0"
    },
    "m_parsecommadelimited": {
        "prefix": "m_parsecommadelimited",
        "body": "m_parsecommadelimited(${1:conn}, ${2:identifier})$0"
    },
    "m_responsekeys": {
        "prefix": "m_responsekeys",
        "body": "m_responsekeys(${1:conn}, ${2:identifier})$0"
    },
    "m_responseparam": {
        "prefix": "m_responseparam",
        "body": "m_responseparam(${1:conn}, ${2:identifier}, ${3:key})$0"
    },
    "m_returnstatus": {
        "prefix": "m_returnstatus",
        "body": "m_returnstatus(${1:conn}, ${2:identifier})$0"
    },
    "m_setblocking": {
        "prefix": "m_setblocking",
        "body": "m_setblocking(${1:conn}, ${2:tf})$0"
    },
    "m_setdropfile": {
        "prefix": "m_setdropfile",
        "body": "m_setdropfile(${1:conn}, ${2:directory})$0"
    },
    "m_setip": {
        "prefix": "m_setip",
        "body": "m_setip(${1:conn}, ${2:host}, ${3:port})$0"
    },
    "m_setssl": {
        "prefix": "m_setssl",
        "body": "m_setssl(${1:conn}, ${2:host}, ${3:port})$0"
    },
    "m_setssl_cafile": {
        "prefix": "m_setssl_cafile",
        "body": "m_setssl_cafile(${1:conn}, ${2:cafile})$0"
    },
    "m_setssl_files": {
        "prefix": "m_setssl_files",
        "body": "m_setssl_files(${1:conn}, ${2:sslkeyfile}, ${3:sslcertfile})$0"
    },
    "m_settimeout": {
        "prefix": "m_settimeout",
        "body": "m_settimeout(${1:conn}, ${2:seconds})$0"
    },
    "m_sslcert_gen_hash": {
        "prefix": "m_sslcert_gen_hash",
        "body": "m_sslcert_gen_hash(${1:filename})$0"
    },
    "m_transactionssent": {
        "prefix": "m_transactionssent",
        "body": "m_transactionssent(${1:conn})$0"
    },
    "m_transinqueue": {
        "prefix": "m_transinqueue",
        "body": "m_transinqueue(${1:conn})$0"
    },
    "m_transkeyval": {
        "prefix": "m_transkeyval",
        "body": "m_transkeyval(${1:conn}, ${2:identifier}, ${3:key}, ${4:value})$0"
    },
    "m_transnew": {
        "prefix": "m_transnew",
        "body": "m_transnew(${1:conn})$0"
    },
    "m_transsend": {
        "prefix": "m_transsend",
        "body": "m_transsend(${1:conn}, ${2:identifier})$0"
    },
    "m_uwait": {
        "prefix": "m_uwait",
        "body": "m_uwait(${1:microsecs})$0"
    },
    "m_validateidentifier": {
        "prefix": "m_validateidentifier",
        "body": "m_validateidentifier(${1:conn}, ${2:tf})$0"
    },
    "m_verifyconnection": {
        "prefix": "m_verifyconnection",
        "body": "m_verifyconnection(${1:conn}, ${2:tf})$0"
    },
    "m_verifysslcert": {
        "prefix": "m_verifysslcert",
        "body": "m_verifysslcert(${1:conn}, ${2:tf})$0"
    },
    "magic_quotes_runtime": {
        "prefix": "magic_quotes_runtime",
        "body": "magic_quotes_runtime()$0"
    },
    "mail": {
        "prefix": "mail",
        "body": "mail(${1:to}, ${2:subject}, ${3:message})$0"
    },
    "mailparse_determine_best_xfer_encoding": {
        "prefix": "mailparse_determine_best_xfer_encoding",
        "body": "mailparse_determine_best_xfer_encoding(${1:fp})$0"
    },
    "mailparse_msg_create": {
        "prefix": "mailparse_msg_create",
        "body": "mailparse_msg_create()$0"
    },
    "mailparse_msg_extract_part": {
        "prefix": "mailparse_msg_extract_part",
        "body": "mailparse_msg_extract_part(${1:mimemail}, ${2:msgbody})$0"
    },
    "mailparse_msg_extract_part_file": {
        "prefix": "mailparse_msg_extract_part_file",
        "body": "mailparse_msg_extract_part_file(${1:mimemail}, ${2:filename})$0"
    },
    "mailparse_msg_extract_whole_part_file": {
        "prefix": "mailparse_msg_extract_whole_part_file",
        "body": "mailparse_msg_extract_whole_part_file(${1:mimemail}, ${2:filename})$0"
    },
    "mailparse_msg_free": {
        "prefix": "mailparse_msg_free",
        "body": "mailparse_msg_free(${1:mimemail})$0"
    },
    "mailparse_msg_get_part": {
        "prefix": "mailparse_msg_get_part",
        "body": "mailparse_msg_get_part(${1:mimemail}, ${2:mimesection})$0"
    },
    "mailparse_msg_get_part_data": {
        "prefix": "mailparse_msg_get_part_data",
        "body": "mailparse_msg_get_part_data(${1:mimemail})$0"
    },
    "mailparse_msg_get_structure": {
        "prefix": "mailparse_msg_get_structure",
        "body": "mailparse_msg_get_structure(${1:mimemail})$0"
    },
    "mailparse_msg_parse": {
        "prefix": "mailparse_msg_parse",
        "body": "mailparse_msg_parse(${1:mimemail}, ${2:data})$0"
    },
    "mailparse_msg_parse_file": {
        "prefix": "mailparse_msg_parse_file",
        "body": "mailparse_msg_parse_file(${1:filename})$0"
    },
    "mailparse_rfc822_parse_addresses": {
        "prefix": "mailparse_rfc822_parse_addresses",
        "body": "mailparse_rfc822_parse_addresses(${1:addresses})$0"
    },
    "mailparse_stream_encode": {
        "prefix": "mailparse_stream_encode",
        "body": "mailparse_stream_encode(${1:sourcefp}, ${2:destfp}, ${3:encoding})$0"
    },
    "mailparse_uudecode_all": {
        "prefix": "mailparse_uudecode_all",
        "body": "mailparse_uudecode_all(${1:fp})$0"
    },
    "main": {
        "prefix": "main",
        "body": "main()$0"
    },
    "max": {
        "prefix": "max",
        "body": "max(${1:values})$0"
    },
    "maxdb_bind_param": {
        "prefix": "maxdb_bind_param",
        "body": "maxdb_bind_param()$0"
    },
    "maxdb_bind_result": {
        "prefix": "maxdb_bind_result",
        "body": "maxdb_bind_result()$0"
    },
    "maxdb_client_encoding": {
        "prefix": "maxdb_client_encoding",
        "body": "maxdb_client_encoding()$0"
    },
    "maxdb_connect_errno": {
        "prefix": "maxdb_connect_errno",
        "body": "maxdb_connect_errno()$0"
    },
    "maxdb_connect_error": {
        "prefix": "maxdb_connect_error",
        "body": "maxdb_connect_error()$0"
    },
    "maxdb_debug": {
        "prefix": "maxdb_debug",
        "body": "maxdb_debug(${1:debug})$0"
    },
    "maxdb_disable_rpl_parse": {
        "prefix": "maxdb_disable_rpl_parse",
        "body": "maxdb_disable_rpl_parse(${1:link})$0"
    },
    "maxdb_dump_debug_info": {
        "prefix": "maxdb_dump_debug_info",
        "body": "maxdb_dump_debug_info(${1:link})$0"
    },
    "maxdb_embedded_connect": {
        "prefix": "maxdb_embedded_connect",
        "body": "maxdb_embedded_connect()$0"
    },
    "maxdb_enable_reads_from_master": {
        "prefix": "maxdb_enable_reads_from_master",
        "body": "maxdb_enable_reads_from_master(${1:link})$0"
    },
    "maxdb_enable_rpl_parse": {
        "prefix": "maxdb_enable_rpl_parse",
        "body": "maxdb_enable_rpl_parse(${1:link})$0"
    },
    "maxdb_escape_string": {
        "prefix": "maxdb_escape_string",
        "body": "maxdb_escape_string()$0"
    },
    "maxdb_execute": {
        "prefix": "maxdb_execute",
        "body": "maxdb_execute()$0"
    },
    "maxdb_fetch": {
        "prefix": "maxdb_fetch",
        "body": "maxdb_fetch()$0"
    },
    "maxdb_get_client_info": {
        "prefix": "maxdb_get_client_info",
        "body": "maxdb_get_client_info()$0"
    },
    "maxdb_get_client_version": {
        "prefix": "maxdb_get_client_version",
        "body": "maxdb_get_client_version()$0"
    },
    "maxdb_get_metadata": {
        "prefix": "maxdb_get_metadata",
        "body": "maxdb_get_metadata()$0"
    },
    "maxdb_init": {
        "prefix": "maxdb_init",
        "body": "maxdb_init()$0"
    },
    "maxdb_master_query": {
        "prefix": "maxdb_master_query",
        "body": "maxdb_master_query(${1:link}, ${2:query})$0"
    },
    "maxdb_param_count": {
        "prefix": "maxdb_param_count",
        "body": "maxdb_param_count()$0"
    },
    "maxdb_report": {
        "prefix": "maxdb_report",
        "body": "maxdb_report(${1:flags})$0"
    },
    "maxdb_rpl_parse_enabled": {
        "prefix": "maxdb_rpl_parse_enabled",
        "body": "maxdb_rpl_parse_enabled(${1:link})$0"
    },
    "maxdb_rpl_probe": {
        "prefix": "maxdb_rpl_probe",
        "body": "maxdb_rpl_probe(${1:link})$0"
    },
    "maxdb_send_long_data": {
        "prefix": "maxdb_send_long_data",
        "body": "maxdb_send_long_data()$0"
    },
    "maxdb_server_end": {
        "prefix": "maxdb_server_end",
        "body": "maxdb_server_end()$0"
    },
    "maxdb_server_init": {
        "prefix": "maxdb_server_init",
        "body": "maxdb_server_init()$0"
    },
    "maxdb_set_opt": {
        "prefix": "maxdb_set_opt",
        "body": "maxdb_set_opt()$0"
    },
    "maxdb_stmt_sqlstate": {
        "prefix": "maxdb_stmt_sqlstate",
        "body": "maxdb_stmt_sqlstate(${1:stmt})$0"
    },
    "maxdb_thread_safe": {
        "prefix": "maxdb_thread_safe",
        "body": "maxdb_thread_safe()$0"
    },
    "mb_check_encoding": {
        "prefix": "mb_check_encoding",
        "body": "mb_check_encoding()$0"
    },
    "mb_convert_case": {
        "prefix": "mb_convert_case",
        "body": "mb_convert_case(${1:str}, ${2:mode = MB_CASE_UPPER})$0"
    },
    "mb_convert_encoding": {
        "prefix": "mb_convert_encoding",
        "body": "mb_convert_encoding(${1:str}, ${2:to_encoding})$0"
    },
    "mb_convert_kana": {
        "prefix": "mb_convert_kana",
        "body": "mb_convert_kana(${1:str})$0"
    },
    "mb_convert_variables": {
        "prefix": "mb_convert_variables",
        "body": "mb_convert_variables(${1:to_encoding}, ${2:from_encoding}, ${3:vars})$0"
    },
    "mb_decode_mimeheader": {
        "prefix": "mb_decode_mimeheader",
        "body": "mb_decode_mimeheader(${1:str})$0"
    },
    "mb_decode_numericentity": {
        "prefix": "mb_decode_numericentity",
        "body": "mb_decode_numericentity(${1:str}, ${2:convmap}, ${3:encoding})$0"
    },
    "mb_detect_encoding": {
        "prefix": "mb_detect_encoding",
        "body": "mb_detect_encoding(${1:str})$0"
    },
    "mb_detect_order": {
        "prefix": "mb_detect_order",
        "body": "mb_detect_order()$0"
    },
    "mb_encode_mimeheader": {
        "prefix": "mb_encode_mimeheader",
        "body": "mb_encode_mimeheader(${1:str})$0"
    },
    "mb_encode_numericentity": {
        "prefix": "mb_encode_numericentity",
        "body": "mb_encode_numericentity(${1:str}, ${2:convmap}, ${3:encoding})$0"
    },
    "mb_encoding_aliases": {
        "prefix": "mb_encoding_aliases",
        "body": "mb_encoding_aliases(${1:encoding})$0"
    },
    "mb_ereg": {
        "prefix": "mb_ereg",
        "body": "mb_ereg(${1:pattern}, ${2:string})$0"
    },
    "mb_ereg_match": {
        "prefix": "mb_ereg_match",
        "body": "mb_ereg_match(${1:pattern}, ${2:string})$0"
    },
    "mb_ereg_replace": {
        "prefix": "mb_ereg_replace",
        "body": "mb_ereg_replace(${1:pattern}, ${2:replacement}, ${3:string})$0"
    },
    "mb_ereg_search": {
        "prefix": "mb_ereg_search",
        "body": "mb_ereg_search()$0"
    },
    "mb_ereg_search_getpos": {
        "prefix": "mb_ereg_search_getpos",
        "body": "mb_ereg_search_getpos()$0"
    },
    "mb_ereg_search_getregs": {
        "prefix": "mb_ereg_search_getregs",
        "body": "mb_ereg_search_getregs()$0"
    },
    "mb_ereg_search_init": {
        "prefix": "mb_ereg_search_init",
        "body": "mb_ereg_search_init(${1:string})$0"
    },
    "mb_ereg_search_pos": {
        "prefix": "mb_ereg_search_pos",
        "body": "mb_ereg_search_pos()$0"
    },
    "mb_ereg_search_regs": {
        "prefix": "mb_ereg_search_regs",
        "body": "mb_ereg_search_regs()$0"
    },
    "mb_ereg_search_setpos": {
        "prefix": "mb_ereg_search_setpos",
        "body": "mb_ereg_search_setpos(${1:position})$0"
    },
    "mb_eregi": {
        "prefix": "mb_eregi",
        "body": "mb_eregi(${1:pattern}, ${2:string})$0"
    },
    "mb_eregi_replace": {
        "prefix": "mb_eregi_replace",
        "body": "mb_eregi_replace(${1:pattern}, ${2:replace}, ${3:string})$0"
    },
    "mb_get_info": {
        "prefix": "mb_get_info",
        "body": "mb_get_info()$0"
    },
    "mb_http_input": {
        "prefix": "mb_http_input",
        "body": "mb_http_input()$0"
    },
    "mb_http_output": {
        "prefix": "mb_http_output",
        "body": "mb_http_output()$0"
    },
    "mb_internal_encoding": {
        "prefix": "mb_internal_encoding",
        "body": "mb_internal_encoding()$0"
    },
    "mb_language": {
        "prefix": "mb_language",
        "body": "mb_language()$0"
    },
    "mb_list_encodings": {
        "prefix": "mb_list_encodings",
        "body": "mb_list_encodings()$0"
    },
    "mb_output_handler": {
        "prefix": "mb_output_handler",
        "body": "mb_output_handler(${1:contents}, ${2:status})$0"
    },
    "mb_parse_str": {
        "prefix": "mb_parse_str",
        "body": "mb_parse_str(${1:encoded_string})$0"
    },
    "mb_preferred_mime_name": {
        "prefix": "mb_preferred_mime_name",
        "body": "mb_preferred_mime_name(${1:encoding})$0"
    },
    "mb_regex_encoding": {
        "prefix": "mb_regex_encoding",
        "body": "mb_regex_encoding()$0"
    },
    "mb_regex_set_options": {
        "prefix": "mb_regex_set_options",
        "body": "mb_regex_set_options()$0"
    },
    "mb_send_mail": {
        "prefix": "mb_send_mail",
        "body": "mb_send_mail(${1:to}, ${2:subject}, ${3:message})$0"
    },
    "mb_split": {
        "prefix": "mb_split",
        "body": "mb_split(${1:pattern}, ${2:string})$0"
    },
    "mb_strcut": {
        "prefix": "mb_strcut",
        "body": "mb_strcut(${1:str}, ${2:start})$0"
    },
    "mb_strimwidth": {
        "prefix": "mb_strimwidth",
        "body": "mb_strimwidth(${1:str}, ${2:start}, ${3:width})$0"
    },
    "mb_stripos": {
        "prefix": "mb_stripos",
        "body": "mb_stripos(${1:haystack}, ${2:needle})$0"
    },
    "mb_stristr": {
        "prefix": "mb_stristr",
        "body": "mb_stristr(${1:haystack}, ${2:needle})$0"
    },
    "mb_strlen": {
        "prefix": "mb_strlen",
        "body": "mb_strlen(${1:str})$0"
    },
    "mb_strpos": {
        "prefix": "mb_strpos",
        "body": "mb_strpos(${1:haystack}, ${2:needle})$0"
    },
    "mb_strrchr": {
        "prefix": "mb_strrchr",
        "body": "mb_strrchr(${1:haystack}, ${2:needle})$0"
    },
    "mb_strrichr": {
        "prefix": "mb_strrichr",
        "body": "mb_strrichr(${1:haystack}, ${2:needle})$0"
    },
    "mb_strripos": {
        "prefix": "mb_strripos",
        "body": "mb_strripos(${1:haystack}, ${2:needle})$0"
    },
    "mb_strrpos": {
        "prefix": "mb_strrpos",
        "body": "mb_strrpos(${1:haystack}, ${2:needle})$0"
    },
    "mb_strstr": {
        "prefix": "mb_strstr",
        "body": "mb_strstr(${1:haystack}, ${2:needle})$0"
    },
    "mb_strtolower": {
        "prefix": "mb_strtolower",
        "body": "mb_strtolower(${1:str})$0"
    },
    "mb_strtoupper": {
        "prefix": "mb_strtoupper",
        "body": "mb_strtoupper(${1:str})$0"
    },
    "mb_strwidth": {
        "prefix": "mb_strwidth",
        "body": "mb_strwidth(${1:str})$0"
    },
    "mb_substitute_character": {
        "prefix": "mb_substitute_character",
        "body": "mb_substitute_character()$0"
    },
    "mb_substr": {
        "prefix": "mb_substr",
        "body": "mb_substr(${1:str}, ${2:start})$0"
    },
    "mb_substr_count": {
        "prefix": "mb_substr_count",
        "body": "mb_substr_count(${1:haystack}, ${2:needle})$0"
    },
    "mcrypt_cbc": {
        "prefix": "mcrypt_cbc",
        "body": "mcrypt_cbc(${1:cipher}, ${2:key}, ${3:data}, ${4:mode})$0"
    },
    "mcrypt_cfb": {
        "prefix": "mcrypt_cfb",
        "body": "mcrypt_cfb(${1:cipher}, ${2:key}, ${3:data}, ${4:mode}, ${5:iv})$0"
    },
    "mcrypt_create_iv": {
        "prefix": "mcrypt_create_iv",
        "body": "mcrypt_create_iv(${1:size})$0"
    },
    "mcrypt_decrypt": {
        "prefix": "mcrypt_decrypt",
        "body": "mcrypt_decrypt(${1:cipher}, ${2:key}, ${3:data}, ${4:mode})$0"
    },
    "mcrypt_ecb": {
        "prefix": "mcrypt_ecb",
        "body": "mcrypt_ecb(${1:cipher}, ${2:key}, ${3:data}, ${4:mode})$0"
    },
    "mcrypt_enc_get_algorithms_name": {
        "prefix": "mcrypt_enc_get_algorithms_name",
        "body": "mcrypt_enc_get_algorithms_name(${1:td})$0"
    },
    "mcrypt_enc_get_block_size": {
        "prefix": "mcrypt_enc_get_block_size",
        "body": "mcrypt_enc_get_block_size(${1:td})$0"
    },
    "mcrypt_enc_get_iv_size": {
        "prefix": "mcrypt_enc_get_iv_size",
        "body": "mcrypt_enc_get_iv_size(${1:td})$0"
    },
    "mcrypt_enc_get_key_size": {
        "prefix": "mcrypt_enc_get_key_size",
        "body": "mcrypt_enc_get_key_size(${1:td})$0"
    },
    "mcrypt_enc_get_modes_name": {
        "prefix": "mcrypt_enc_get_modes_name",
        "body": "mcrypt_enc_get_modes_name(${1:td})$0"
    },
    "mcrypt_enc_get_supported_key_sizes": {
        "prefix": "mcrypt_enc_get_supported_key_sizes",
        "body": "mcrypt_enc_get_supported_key_sizes(${1:td})$0"
    },
    "mcrypt_enc_is_block_algorithm": {
        "prefix": "mcrypt_enc_is_block_algorithm",
        "body": "mcrypt_enc_is_block_algorithm(${1:td})$0"
    },
    "mcrypt_enc_is_block_algorithm_mode": {
        "prefix": "mcrypt_enc_is_block_algorithm_mode",
        "body": "mcrypt_enc_is_block_algorithm_mode(${1:td})$0"
    },
    "mcrypt_enc_is_block_mode": {
        "prefix": "mcrypt_enc_is_block_mode",
        "body": "mcrypt_enc_is_block_mode(${1:td})$0"
    },
    "mcrypt_enc_self_test": {
        "prefix": "mcrypt_enc_self_test",
        "body": "mcrypt_enc_self_test(${1:td})$0"
    },
    "mcrypt_encrypt": {
        "prefix": "mcrypt_encrypt",
        "body": "mcrypt_encrypt(${1:cipher}, ${2:key}, ${3:data}, ${4:mode})$0"
    },
    "mcrypt_generic": {
        "prefix": "mcrypt_generic",
        "body": "mcrypt_generic(${1:td}, ${2:data})$0"
    },
    "mcrypt_generic_deinit": {
        "prefix": "mcrypt_generic_deinit",
        "body": "mcrypt_generic_deinit(${1:td})$0"
    },
    "mcrypt_generic_end": {
        "prefix": "mcrypt_generic_end",
        "body": "mcrypt_generic_end(${1:td})$0"
    },
    "mcrypt_generic_init": {
        "prefix": "mcrypt_generic_init",
        "body": "mcrypt_generic_init(${1:td}, ${2:key}, ${3:iv})$0"
    },
    "mcrypt_get_block_size": {
        "prefix": "mcrypt_get_block_size",
        "body": "mcrypt_get_block_size(${1:cipher})$0"
    },
    "mcrypt_get_cipher_name": {
        "prefix": "mcrypt_get_cipher_name",
        "body": "mcrypt_get_cipher_name(${1:cipher})$0"
    },
    "mcrypt_get_iv_size": {
        "prefix": "mcrypt_get_iv_size",
        "body": "mcrypt_get_iv_size(${1:cipher}, ${2:mode})$0"
    },
    "mcrypt_get_key_size": {
        "prefix": "mcrypt_get_key_size",
        "body": "mcrypt_get_key_size(${1:cipher})$0"
    },
    "mcrypt_list_algorithms": {
        "prefix": "mcrypt_list_algorithms",
        "body": "mcrypt_list_algorithms()$0"
    },
    "mcrypt_list_modes": {
        "prefix": "mcrypt_list_modes",
        "body": "mcrypt_list_modes()$0"
    },
    "mcrypt_module_close": {
        "prefix": "mcrypt_module_close",
        "body": "mcrypt_module_close(${1:td})$0"
    },
    "mcrypt_module_get_algo_block_size": {
        "prefix": "mcrypt_module_get_algo_block_size",
        "body": "mcrypt_module_get_algo_block_size(${1:algorithm})$0"
    },
    "mcrypt_module_get_algo_key_size": {
        "prefix": "mcrypt_module_get_algo_key_size",
        "body": "mcrypt_module_get_algo_key_size(${1:algorithm})$0"
    },
    "mcrypt_module_get_supported_key_sizes": {
        "prefix": "mcrypt_module_get_supported_key_sizes",
        "body": "mcrypt_module_get_supported_key_sizes(${1:algorithm})$0"
    },
    "mcrypt_module_is_block_algorithm": {
        "prefix": "mcrypt_module_is_block_algorithm",
        "body": "mcrypt_module_is_block_algorithm(${1:algorithm})$0"
    },
    "mcrypt_module_is_block_algorithm_mode": {
        "prefix": "mcrypt_module_is_block_algorithm_mode",
        "body": "mcrypt_module_is_block_algorithm_mode(${1:mode})$0"
    },
    "mcrypt_module_is_block_mode": {
        "prefix": "mcrypt_module_is_block_mode",
        "body": "mcrypt_module_is_block_mode(${1:mode})$0"
    },
    "mcrypt_module_open": {
        "prefix": "mcrypt_module_open",
        "body": "mcrypt_module_open(${1:algorithm}, ${2:algorithm_directory}, ${3:mode}, ${4:mode_directory})$0"
    },
    "mcrypt_module_self_test": {
        "prefix": "mcrypt_module_self_test",
        "body": "mcrypt_module_self_test(${1:algorithm})$0"
    },
    "mcrypt_ofb": {
        "prefix": "mcrypt_ofb",
        "body": "mcrypt_ofb(${1:cipher}, ${2:key}, ${3:data}, ${4:mode}, ${5:iv})$0"
    },
    "md5": {
        "prefix": "md5",
        "body": "md5(${1:str})$0"
    },
    "md5_file": {
        "prefix": "md5_file",
        "body": "md5_file(${1:filename})$0"
    },
    "mdecrypt_generic": {
        "prefix": "mdecrypt_generic",
        "body": "mdecrypt_generic(${1:td}, ${2:data})$0"
    },
    "memcache_debug": {
        "prefix": "memcache_debug",
        "body": "memcache_debug(${1:on_off})$0"
    },
    "memory_get_peak_usage": {
        "prefix": "memory_get_peak_usage",
        "body": "memory_get_peak_usage()$0"
    },
    "memory_get_usage": {
        "prefix": "memory_get_usage",
        "body": "memory_get_usage()$0"
    },
    "metaphone": {
        "prefix": "metaphone",
        "body": "metaphone(${1:str})$0"
    },
    "method_exists": {
        "prefix": "method_exists",
        "body": "method_exists(${1:object}, ${2:method_name})$0"
    },
    "mhash": {
        "prefix": "mhash",
        "body": "mhash(${1:hash}, ${2:data})$0"
    },
    "mhash_count": {
        "prefix": "mhash_count",
        "body": "mhash_count()$0"
    },
    "mhash_get_block_size": {
        "prefix": "mhash_get_block_size",
        "body": "mhash_get_block_size(${1:hash})$0"
    },
    "mhash_get_hash_name": {
        "prefix": "mhash_get_hash_name",
        "body": "mhash_get_hash_name(${1:hash})$0"
    },
    "mhash_keygen_s2k": {
        "prefix": "mhash_keygen_s2k",
        "body": "mhash_keygen_s2k(${1:hash}, ${2:password}, ${3:salt}, ${4:bytes})$0"
    },
    "microtime": {
        "prefix": "microtime",
        "body": "microtime()$0"
    },
    "mime_content_type": {
        "prefix": "mime_content_type",
        "body": "mime_content_type(${1:filename})$0"
    },
    "min": {
        "prefix": "min",
        "body": "min(${1:values})$0"
    },
    "ming_keypress": {
        "prefix": "ming_keypress",
        "body": "ming_keypress(${1:char})$0"
    },
    "ming_setcubicthreshold": {
        "prefix": "ming_setcubicthreshold",
        "body": "ming_setcubicthreshold(${1:threshold})$0"
    },
    "ming_setscale": {
        "prefix": "ming_setscale",
        "body": "ming_setscale(${1:scale})$0"
    },
    "ming_setswfcompression": {
        "prefix": "ming_setswfcompression",
        "body": "ming_setswfcompression(${1:level})$0"
    },
    "ming_useconstants": {
        "prefix": "ming_useconstants",
        "body": "ming_useconstants(${1:use})$0"
    },
    "ming_useswfversion": {
        "prefix": "ming_useswfversion",
        "body": "ming_useswfversion(${1:version})$0"
    },
    "mkdir": {
        "prefix": "mkdir",
        "body": "mkdir(${1:pathname})$0"
    },
    "mktime": {
        "prefix": "mktime",
        "body": "mktime()$0"
    },
    "money_format": {
        "prefix": "money_format",
        "body": "money_format(${1:format}, ${2:number})$0"
    },
    "move_uploaded_file": {
        "prefix": "move_uploaded_file",
        "body": "move_uploaded_file(${1:filename}, ${2:destination})$0"
    },
    "mqseries_back": {
        "prefix": "mqseries_back",
        "body": "mqseries_back(${1:hconn}, ${2:compCode}, ${3:reason})$0"
    },
    "mqseries_begin": {
        "prefix": "mqseries_begin",
        "body": "mqseries_begin(${1:hconn}, ${2:beginOptions}, ${3:compCode}, ${4:reason})$0"
    },
    "mqseries_close": {
        "prefix": "mqseries_close",
        "body": "mqseries_close(${1:hconn}, ${2:hobj}, ${3:options}, ${4:compCode}, ${5:reason})$0"
    },
    "mqseries_cmit": {
        "prefix": "mqseries_cmit",
        "body": "mqseries_cmit(${1:hconn}, ${2:compCode}, ${3:reason})$0"
    },
    "mqseries_conn": {
        "prefix": "mqseries_conn",
        "body": "mqseries_conn(${1:qManagerName}, ${2:hconn}, ${3:compCode}, ${4:reason})$0"
    },
    "mqseries_connx": {
        "prefix": "mqseries_connx",
        "body": "mqseries_connx(${1:qManagerName}, ${2:connOptions}, ${3:hconn}, ${4:compCode}, ${5:reason})$0"
    },
    "mqseries_disc": {
        "prefix": "mqseries_disc",
        "body": "mqseries_disc(${1:hconn}, ${2:compCode}, ${3:reason})$0"
    },
    "mqseries_get": {
        "prefix": "mqseries_get",
        "body": "mqseries_get(${1:hConn}, ${2:hObj}, ${3:md}, ${4:gmo}, ${5:bufferLength}, ${6:msg}, ${7:data_length}, ${8:compCode}, ${9:reason})$0"
    },
    "mqseries_inq": {
        "prefix": "mqseries_inq",
        "body": "mqseries_inq(${1:hconn}, ${2:hobj}, ${3:selectorCount}, ${4:selectors}, ${5:intAttrCount}, ${6:intAttr}, ${7:charAttrLength}, ${8:charAttr}, ${9:compCode}, ${10:reason})$0"
    },
    "mqseries_open": {
        "prefix": "mqseries_open",
        "body": "mqseries_open(${1:hconn}, ${2:objDesc}, ${3:option}, ${4:hobj}, ${5:compCode}, ${6:reason})$0"
    },
    "mqseries_put": {
        "prefix": "mqseries_put",
        "body": "mqseries_put(${1:hConn}, ${2:hObj}, ${3:md}, ${4:pmo}, ${5:message}, ${6:compCode}, ${7:reason})$0"
    },
    "mqseries_put1": {
        "prefix": "mqseries_put1",
        "body": "mqseries_put1(${1:hconn}, ${2:objDesc}, ${3:msgDesc}, ${4:pmo}, ${5:buffer}, ${6:compCode}, ${7:reason})$0"
    },
    "mqseries_set": {
        "prefix": "mqseries_set",
        "body": "mqseries_set(${1:hconn}, ${2:hobj}, ${3:selectorcount}, ${4:selectors}, ${5:intattrcount}, ${6:intattrs}, ${7:charattrlength}, ${8:charattrs}, ${9:compCode}, ${10:reason})$0"
    },
    "mqseries_strerror": {
        "prefix": "mqseries_strerror",
        "body": "mqseries_strerror(${1:reason})$0"
    },
    "msession_connect": {
        "prefix": "msession_connect",
        "body": "msession_connect(${1:host}, ${2:port})$0"
    },
    "msession_count": {
        "prefix": "msession_count",
        "body": "msession_count()$0"
    },
    "msession_create": {
        "prefix": "msession_create",
        "body": "msession_create(${1:session})$0"
    },
    "msession_destroy": {
        "prefix": "msession_destroy",
        "body": "msession_destroy(${1:name})$0"
    },
    "msession_disconnect": {
        "prefix": "msession_disconnect",
        "body": "msession_disconnect()$0"
    },
    "msession_find": {
        "prefix": "msession_find",
        "body": "msession_find(${1:name}, ${2:value})$0"
    },
    "msession_get": {
        "prefix": "msession_get",
        "body": "msession_get(${1:session}, ${2:name}, ${3:value})$0"
    },
    "msession_get_array": {
        "prefix": "msession_get_array",
        "body": "msession_get_array(${1:session})$0"
    },
    "msession_get_data": {
        "prefix": "msession_get_data",
        "body": "msession_get_data(${1:session})$0"
    },
    "msession_inc": {
        "prefix": "msession_inc",
        "body": "msession_inc(${1:session}, ${2:name})$0"
    },
    "msession_list": {
        "prefix": "msession_list",
        "body": "msession_list()$0"
    },
    "msession_listvar": {
        "prefix": "msession_listvar",
        "body": "msession_listvar(${1:name})$0"
    },
    "msession_lock": {
        "prefix": "msession_lock",
        "body": "msession_lock(${1:name})$0"
    },
    "msession_plugin": {
        "prefix": "msession_plugin",
        "body": "msession_plugin(${1:session}, ${2:val})$0"
    },
    "msession_randstr": {
        "prefix": "msession_randstr",
        "body": "msession_randstr(${1:param})$0"
    },
    "msession_set": {
        "prefix": "msession_set",
        "body": "msession_set(${1:session}, ${2:name}, ${3:value})$0"
    },
    "msession_set_array": {
        "prefix": "msession_set_array",
        "body": "msession_set_array(${1:session}, ${2:tuples})$0"
    },
    "msession_set_data": {
        "prefix": "msession_set_data",
        "body": "msession_set_data(${1:session}, ${2:value})$0"
    },
    "msession_timeout": {
        "prefix": "msession_timeout",
        "body": "msession_timeout(${1:session})$0"
    },
    "msession_uniq": {
        "prefix": "msession_uniq",
        "body": "msession_uniq(${1:param})$0"
    },
    "msession_unlock": {
        "prefix": "msession_unlock",
        "body": "msession_unlock(${1:session}, ${2:key})$0"
    },
    "msg_get_queue": {
        "prefix": "msg_get_queue",
        "body": "msg_get_queue(${1:key})$0"
    },
    "msg_queue_exists": {
        "prefix": "msg_queue_exists",
        "body": "msg_queue_exists(${1:key})$0"
    },
    "msg_receive": {
        "prefix": "msg_receive",
        "body": "msg_receive(${1:queue}, ${2:desiredmsgtype}, ${3:msgtype}, ${4:maxsize}, ${5:message})$0"
    },
    "msg_remove_queue": {
        "prefix": "msg_remove_queue",
        "body": "msg_remove_queue(${1:queue})$0"
    },
    "msg_send": {
        "prefix": "msg_send",
        "body": "msg_send(${1:queue}, ${2:msgtype}, ${3:message})$0"
    },
    "msg_set_queue": {
        "prefix": "msg_set_queue",
        "body": "msg_set_queue(${1:queue}, ${2:data})$0"
    },
    "msg_stat_queue": {
        "prefix": "msg_stat_queue",
        "body": "msg_stat_queue(${1:queue})$0"
    },
    "msql": {
        "prefix": "msql",
        "body": "msql()$0"
    },
    "msql_affected_rows": {
        "prefix": "msql_affected_rows",
        "body": "msql_affected_rows(${1:result})$0"
    },
    "msql_close": {
        "prefix": "msql_close",
        "body": "msql_close()$0"
    },
    "msql_connect": {
        "prefix": "msql_connect",
        "body": "msql_connect()$0"
    },
    "msql_create_db": {
        "prefix": "msql_create_db",
        "body": "msql_create_db(${1:database_name})$0"
    },
    "msql_createdb": {
        "prefix": "msql_createdb",
        "body": "msql_createdb()$0"
    },
    "msql_data_seek": {
        "prefix": "msql_data_seek",
        "body": "msql_data_seek(${1:result}, ${2:row_number})$0"
    },
    "msql_db_query": {
        "prefix": "msql_db_query",
        "body": "msql_db_query(${1:database}, ${2:query})$0"
    },
    "msql_dbname": {
        "prefix": "msql_dbname",
        "body": "msql_dbname()$0"
    },
    "msql_drop_db": {
        "prefix": "msql_drop_db",
        "body": "msql_drop_db(${1:database_name})$0"
    },
    "msql_error": {
        "prefix": "msql_error",
        "body": "msql_error()$0"
    },
    "msql_fetch_array": {
        "prefix": "msql_fetch_array",
        "body": "msql_fetch_array(${1:result})$0"
    },
    "msql_fetch_field": {
        "prefix": "msql_fetch_field",
        "body": "msql_fetch_field(${1:result})$0"
    },
    "msql_fetch_object": {
        "prefix": "msql_fetch_object",
        "body": "msql_fetch_object(${1:result})$0"
    },
    "msql_fetch_row": {
        "prefix": "msql_fetch_row",
        "body": "msql_fetch_row(${1:result})$0"
    },
    "msql_field_flags": {
        "prefix": "msql_field_flags",
        "body": "msql_field_flags(${1:result}, ${2:field_offset})$0"
    },
    "msql_field_len": {
        "prefix": "msql_field_len",
        "body": "msql_field_len(${1:result}, ${2:field_offset})$0"
    },
    "msql_field_name": {
        "prefix": "msql_field_name",
        "body": "msql_field_name(${1:result}, ${2:field_offset})$0"
    },
    "msql_field_seek": {
        "prefix": "msql_field_seek",
        "body": "msql_field_seek(${1:result}, ${2:field_offset})$0"
    },
    "msql_field_table": {
        "prefix": "msql_field_table",
        "body": "msql_field_table(${1:result}, ${2:field_offset})$0"
    },
    "msql_field_type": {
        "prefix": "msql_field_type",
        "body": "msql_field_type(${1:result}, ${2:field_offset})$0"
    },
    "msql_fieldflags": {
        "prefix": "msql_fieldflags",
        "body": "msql_fieldflags()$0"
    },
    "msql_fieldlen": {
        "prefix": "msql_fieldlen",
        "body": "msql_fieldlen()$0"
    },
    "msql_fieldname": {
        "prefix": "msql_fieldname",
        "body": "msql_fieldname()$0"
    },
    "msql_fieldtable": {
        "prefix": "msql_fieldtable",
        "body": "msql_fieldtable()$0"
    },
    "msql_fieldtype": {
        "prefix": "msql_fieldtype",
        "body": "msql_fieldtype()$0"
    },
    "msql_free_result": {
        "prefix": "msql_free_result",
        "body": "msql_free_result(${1:result})$0"
    },
    "msql_list_dbs": {
        "prefix": "msql_list_dbs",
        "body": "msql_list_dbs()$0"
    },
    "msql_list_fields": {
        "prefix": "msql_list_fields",
        "body": "msql_list_fields(${1:database}, ${2:tablename})$0"
    },
    "msql_list_tables": {
        "prefix": "msql_list_tables",
        "body": "msql_list_tables(${1:database})$0"
    },
    "msql_num_fields": {
        "prefix": "msql_num_fields",
        "body": "msql_num_fields(${1:result})$0"
    },
    "msql_num_rows": {
        "prefix": "msql_num_rows",
        "body": "msql_num_rows(${1:query_identifier})$0"
    },
    "msql_numfields": {
        "prefix": "msql_numfields",
        "body": "msql_numfields()$0"
    },
    "msql_numrows": {
        "prefix": "msql_numrows",
        "body": "msql_numrows()$0"
    },
    "msql_pconnect": {
        "prefix": "msql_pconnect",
        "body": "msql_pconnect()$0"
    },
    "msql_query": {
        "prefix": "msql_query",
        "body": "msql_query(${1:query})$0"
    },
    "msql_regcase": {
        "prefix": "msql_regcase",
        "body": "msql_regcase()$0"
    },
    "msql_result": {
        "prefix": "msql_result",
        "body": "msql_result(${1:result}, ${2:row})$0"
    },
    "msql_select_db": {
        "prefix": "msql_select_db",
        "body": "msql_select_db(${1:database_name})$0"
    },
    "msql_tablename": {
        "prefix": "msql_tablename",
        "body": "msql_tablename()$0"
    },
    "mssql_bind": {
        "prefix": "mssql_bind",
        "body": "mssql_bind(${1:stmt}, ${2:param_name}, ${3:var}, ${4:type})$0"
    },
    "mssql_close": {
        "prefix": "mssql_close",
        "body": "mssql_close()$0"
    },
    "mssql_connect": {
        "prefix": "mssql_connect",
        "body": "mssql_connect()$0"
    },
    "mssql_data_seek": {
        "prefix": "mssql_data_seek",
        "body": "mssql_data_seek(${1:result_identifier}, ${2:row_number})$0"
    },
    "mssql_execute": {
        "prefix": "mssql_execute",
        "body": "mssql_execute(${1:stmt})$0"
    },
    "mssql_fetch_array": {
        "prefix": "mssql_fetch_array",
        "body": "mssql_fetch_array(${1:result})$0"
    },
    "mssql_fetch_assoc": {
        "prefix": "mssql_fetch_assoc",
        "body": "mssql_fetch_assoc(${1:result_id})$0"
    },
    "mssql_fetch_batch": {
        "prefix": "mssql_fetch_batch",
        "body": "mssql_fetch_batch(${1:result})$0"
    },
    "mssql_fetch_field": {
        "prefix": "mssql_fetch_field",
        "body": "mssql_fetch_field(${1:result})$0"
    },
    "mssql_fetch_object": {
        "prefix": "mssql_fetch_object",
        "body": "mssql_fetch_object(${1:result})$0"
    },
    "mssql_fetch_row": {
        "prefix": "mssql_fetch_row",
        "body": "mssql_fetch_row(${1:result})$0"
    },
    "mssql_field_length": {
        "prefix": "mssql_field_length",
        "body": "mssql_field_length(${1:result})$0"
    },
    "mssql_field_name": {
        "prefix": "mssql_field_name",
        "body": "mssql_field_name(${1:result})$0"
    },
    "mssql_field_seek": {
        "prefix": "mssql_field_seek",
        "body": "mssql_field_seek(${1:result}, ${2:field_offset})$0"
    },
    "mssql_field_type": {
        "prefix": "mssql_field_type",
        "body": "mssql_field_type(${1:result})$0"
    },
    "mssql_free_result": {
        "prefix": "mssql_free_result",
        "body": "mssql_free_result(${1:result})$0"
    },
    "mssql_free_statement": {
        "prefix": "mssql_free_statement",
        "body": "mssql_free_statement(${1:stmt})$0"
    },
    "mssql_get_last_message": {
        "prefix": "mssql_get_last_message",
        "body": "mssql_get_last_message()$0"
    },
    "mssql_guid_string": {
        "prefix": "mssql_guid_string",
        "body": "mssql_guid_string(${1:binary})$0"
    },
    "mssql_init": {
        "prefix": "mssql_init",
        "body": "mssql_init(${1:sp_name})$0"
    },
    "mssql_min_error_severity": {
        "prefix": "mssql_min_error_severity",
        "body": "mssql_min_error_severity(${1:severity})$0"
    },
    "mssql_min_message_severity": {
        "prefix": "mssql_min_message_severity",
        "body": "mssql_min_message_severity(${1:severity})$0"
    },
    "mssql_next_result": {
        "prefix": "mssql_next_result",
        "body": "mssql_next_result(${1:result_id})$0"
    },
    "mssql_num_fields": {
        "prefix": "mssql_num_fields",
        "body": "mssql_num_fields(${1:result})$0"
    },
    "mssql_num_rows": {
        "prefix": "mssql_num_rows",
        "body": "mssql_num_rows(${1:result})$0"
    },
    "mssql_pconnect": {
        "prefix": "mssql_pconnect",
        "body": "mssql_pconnect()$0"
    },
    "mssql_query": {
        "prefix": "mssql_query",
        "body": "mssql_query(${1:query})$0"
    },
    "mssql_result": {
        "prefix": "mssql_result",
        "body": "mssql_result(${1:result}, ${2:row}, ${3:field})$0"
    },
    "mssql_rows_affected": {
        "prefix": "mssql_rows_affected",
        "body": "mssql_rows_affected(${1:link_identifier})$0"
    },
    "mssql_select_db": {
        "prefix": "mssql_select_db",
        "body": "mssql_select_db(${1:database_name})$0"
    },
    "mt_getrandmax": {
        "prefix": "mt_getrandmax",
        "body": "mt_getrandmax()$0"
    },
    "mt_rand": {
        "prefix": "mt_rand",
        "body": "mt_rand()$0"
    },
    "mt_srand": {
        "prefix": "mt_srand",
        "body": "mt_srand()$0"
    },
    "mysql_affected_rows": {
        "prefix": "mysql_affected_rows",
        "body": "mysql_affected_rows()$0"
    },
    "mysql_client_encoding": {
        "prefix": "mysql_client_encoding",
        "body": "mysql_client_encoding()$0"
    },
    "mysql_close": {
        "prefix": "mysql_close",
        "body": "mysql_close()$0"
    },
    "mysql_connect": {
        "prefix": "mysql_connect",
        "body": "mysql_connect()$0"
    },
    "mysql_create_db": {
        "prefix": "mysql_create_db",
        "body": "mysql_create_db(${1:database_name})$0"
    },
    "mysql_data_seek": {
        "prefix": "mysql_data_seek",
        "body": "mysql_data_seek(${1:result}, ${2:row_number})$0"
    },
    "mysql_db_name": {
        "prefix": "mysql_db_name",
        "body": "mysql_db_name(${1:result}, ${2:row})$0"
    },
    "mysql_db_query": {
        "prefix": "mysql_db_query",
        "body": "mysql_db_query(${1:database}, ${2:query})$0"
    },
    "mysql_drop_db": {
        "prefix": "mysql_drop_db",
        "body": "mysql_drop_db(${1:database_name})$0"
    },
    "mysql_errno": {
        "prefix": "mysql_errno",
        "body": "mysql_errno()$0"
    },
    "mysql_error": {
        "prefix": "mysql_error",
        "body": "mysql_error()$0"
    },
    "mysql_escape_string": {
        "prefix": "mysql_escape_string",
        "body": "mysql_escape_string(${1:unescaped_string})$0"
    },
    "mysql_fetch_array": {
        "prefix": "mysql_fetch_array",
        "body": "mysql_fetch_array(${1:result})$0"
    },
    "mysql_fetch_assoc": {
        "prefix": "mysql_fetch_assoc",
        "body": "mysql_fetch_assoc(${1:result})$0"
    },
    "mysql_fetch_field": {
        "prefix": "mysql_fetch_field",
        "body": "mysql_fetch_field(${1:result})$0"
    },
    "mysql_fetch_lengths": {
        "prefix": "mysql_fetch_lengths",
        "body": "mysql_fetch_lengths(${1:result})$0"
    },
    "mysql_fetch_object": {
        "prefix": "mysql_fetch_object",
        "body": "mysql_fetch_object(${1:result})$0"
    },
    "mysql_fetch_row": {
        "prefix": "mysql_fetch_row",
        "body": "mysql_fetch_row(${1:result})$0"
    },
    "mysql_field_flags": {
        "prefix": "mysql_field_flags",
        "body": "mysql_field_flags(${1:result}, ${2:field_offset})$0"
    },
    "mysql_field_len": {
        "prefix": "mysql_field_len",
        "body": "mysql_field_len(${1:result}, ${2:field_offset})$0"
    },
    "mysql_field_name": {
        "prefix": "mysql_field_name",
        "body": "mysql_field_name(${1:result}, ${2:field_offset})$0"
    },
    "mysql_field_seek": {
        "prefix": "mysql_field_seek",
        "body": "mysql_field_seek(${1:result}, ${2:field_offset})$0"
    },
    "mysql_field_table": {
        "prefix": "mysql_field_table",
        "body": "mysql_field_table(${1:result}, ${2:field_offset})$0"
    },
    "mysql_field_type": {
        "prefix": "mysql_field_type",
        "body": "mysql_field_type(${1:result}, ${2:field_offset})$0"
    },
    "mysql_free_result": {
        "prefix": "mysql_free_result",
        "body": "mysql_free_result(${1:result})$0"
    },
    "mysql_get_client_info": {
        "prefix": "mysql_get_client_info",
        "body": "mysql_get_client_info()$0"
    },
    "mysql_get_host_info": {
        "prefix": "mysql_get_host_info",
        "body": "mysql_get_host_info()$0"
    },
    "mysql_get_proto_info": {
        "prefix": "mysql_get_proto_info",
        "body": "mysql_get_proto_info()$0"
    },
    "mysql_get_server_info": {
        "prefix": "mysql_get_server_info",
        "body": "mysql_get_server_info()$0"
    },
    "mysql_info": {
        "prefix": "mysql_info",
        "body": "mysql_info()$0"
    },
    "mysql_insert_id": {
        "prefix": "mysql_insert_id",
        "body": "mysql_insert_id()$0"
    },
    "mysql_list_dbs": {
        "prefix": "mysql_list_dbs",
        "body": "mysql_list_dbs()$0"
    },
    "mysql_list_fields": {
        "prefix": "mysql_list_fields",
        "body": "mysql_list_fields(${1:database_name}, ${2:table_name})$0"
    },
    "mysql_list_processes": {
        "prefix": "mysql_list_processes",
        "body": "mysql_list_processes()$0"
    },
    "mysql_list_tables": {
        "prefix": "mysql_list_tables",
        "body": "mysql_list_tables(${1:database})$0"
    },
    "mysql_num_fields": {
        "prefix": "mysql_num_fields",
        "body": "mysql_num_fields(${1:result})$0"
    },
    "mysql_num_rows": {
        "prefix": "mysql_num_rows",
        "body": "mysql_num_rows(${1:result})$0"
    },
    "mysql_pconnect": {
        "prefix": "mysql_pconnect",
        "body": "mysql_pconnect()$0"
    },
    "mysql_ping": {
        "prefix": "mysql_ping",
        "body": "mysql_ping()$0"
    },
    "mysql_query": {
        "prefix": "mysql_query",
        "body": "mysql_query(${1:query})$0"
    },
    "mysql_real_escape_string": {
        "prefix": "mysql_real_escape_string",
        "body": "mysql_real_escape_string(${1:unescaped_string})$0"
    },
    "mysql_result": {
        "prefix": "mysql_result",
        "body": "mysql_result(${1:result}, ${2:row})$0"
    },
    "mysql_select_db": {
        "prefix": "mysql_select_db",
        "body": "mysql_select_db(${1:database_name})$0"
    },
    "mysql_set_charset": {
        "prefix": "mysql_set_charset",
        "body": "mysql_set_charset(${1:charset})$0"
    },
    "mysql_stat": {
        "prefix": "mysql_stat",
        "body": "mysql_stat()$0"
    },
    "mysql_tablename": {
        "prefix": "mysql_tablename",
        "body": "mysql_tablename(${1:result}, ${2:i})$0"
    },
    "mysql_thread_id": {
        "prefix": "mysql_thread_id",
        "body": "mysql_thread_id()$0"
    },
    "mysql_unbuffered_query": {
        "prefix": "mysql_unbuffered_query",
        "body": "mysql_unbuffered_query(${1:query})$0"
    },
    "mysqli_bind_param": {
        "prefix": "mysqli_bind_param",
        "body": "mysqli_bind_param()$0"
    },
    "mysqli_bind_result": {
        "prefix": "mysqli_bind_result",
        "body": "mysqli_bind_result()$0"
    },
    "mysqli_client_encoding": {
        "prefix": "mysqli_client_encoding",
        "body": "mysqli_client_encoding()$0"
    },
    "mysqli_connect": {
        "prefix": "mysqli_connect",
        "body": "mysqli_connect()$0"
    },
    "mysqli_disable_rpl_parse": {
        "prefix": "mysqli_disable_rpl_parse",
        "body": "mysqli_disable_rpl_parse(${1:link})$0"
    },
    "mysqli_enable_reads_from_master": {
        "prefix": "mysqli_enable_reads_from_master",
        "body": "mysqli_enable_reads_from_master(${1:link})$0"
    },
    "mysqli_enable_rpl_parse": {
        "prefix": "mysqli_enable_rpl_parse",
        "body": "mysqli_enable_rpl_parse(${1:link})$0"
    },
    "mysqli_escape_string": {
        "prefix": "mysqli_escape_string",
        "body": "mysqli_escape_string()$0"
    },
    "mysqli_execute": {
        "prefix": "mysqli_execute",
        "body": "mysqli_execute()$0"
    },
    "mysqli_fetch": {
        "prefix": "mysqli_fetch",
        "body": "mysqli_fetch()$0"
    },
    "mysqli_get_metadata": {
        "prefix": "mysqli_get_metadata",
        "body": "mysqli_get_metadata()$0"
    },
    "mysqli_master_query": {
        "prefix": "mysqli_master_query",
        "body": "mysqli_master_query(${1:link}, ${2:query})$0"
    },
    "mysqli_param_count": {
        "prefix": "mysqli_param_count",
        "body": "mysqli_param_count()$0"
    },
    "mysqli_report": {
        "prefix": "mysqli_report",
        "body": "mysqli_report(${1:flags})$0"
    },
    "mysqli_rpl_parse_enabled": {
        "prefix": "mysqli_rpl_parse_enabled",
        "body": "mysqli_rpl_parse_enabled(${1:link})$0"
    },
    "mysqli_rpl_probe": {
        "prefix": "mysqli_rpl_probe",
        "body": "mysqli_rpl_probe(${1:link})$0"
    },
    "mysqli_send_long_data": {
        "prefix": "mysqli_send_long_data",
        "body": "mysqli_send_long_data()$0"
    },
    "mysqli_set_opt": {
        "prefix": "mysqli_set_opt",
        "body": "mysqli_set_opt()$0"
    },
    "mysqli_slave_query": {
        "prefix": "mysqli_slave_query",
        "body": "mysqli_slave_query(${1:link}, ${2:query})$0"
    },
    "mysqlnd_qc_change_handler": {
        "prefix": "mysqlnd_qc_change_handler",
        "body": "mysqlnd_qc_change_handler(${1:handler})$0"
    },
    "mysqlnd_qc_clear_cache": {
        "prefix": "mysqlnd_qc_clear_cache",
        "body": "mysqlnd_qc_clear_cache()$0"
    },
    "mysqlnd_qc_get_cache_info": {
        "prefix": "mysqlnd_qc_get_cache_info",
        "body": "mysqlnd_qc_get_cache_info()$0"
    },
    "mysqlnd_qc_get_core_stats": {
        "prefix": "mysqlnd_qc_get_core_stats",
        "body": "mysqlnd_qc_get_core_stats()$0"
    },
    "mysqlnd_qc_get_handler": {
        "prefix": "mysqlnd_qc_get_handler",
        "body": "mysqlnd_qc_get_handler()$0"
    },
    "mysqlnd_qc_get_query_trace_log": {
        "prefix": "mysqlnd_qc_get_query_trace_log",
        "body": "mysqlnd_qc_get_query_trace_log()$0"
    },
    "mysqlnd_qc_set_user_handlers": {
        "prefix": "mysqlnd_qc_set_user_handlers",
        "body": "mysqlnd_qc_set_user_handlers(${1:get_hash}, ${2:find_query_in_cache}, ${3:return_to_cache}, ${4:add_query_to_cache_if_not_exists}, ${5:query_is_select}, ${6:update_query_run_time_stats}, ${7:get_stats}, ${8:clear_cache})$0"
    },
    "natcasesort": {
        "prefix": "natcasesort",
        "body": "natcasesort(${1:array})$0"
    },
    "natsort": {
        "prefix": "natsort",
        "body": "natsort(${1:array})$0"
    },
    "ncurses_addch": {
        "prefix": "ncurses_addch",
        "body": "ncurses_addch(${1:ch})$0"
    },
    "ncurses_addchnstr": {
        "prefix": "ncurses_addchnstr",
        "body": "ncurses_addchnstr(${1:s}, ${2:n})$0"
    },
    "ncurses_addchstr": {
        "prefix": "ncurses_addchstr",
        "body": "ncurses_addchstr(${1:s})$0"
    },
    "ncurses_addnstr": {
        "prefix": "ncurses_addnstr",
        "body": "ncurses_addnstr(${1:s}, ${2:n})$0"
    },
    "ncurses_addstr": {
        "prefix": "ncurses_addstr",
        "body": "ncurses_addstr(${1:text})$0"
    },
    "ncurses_assume_default_colors": {
        "prefix": "ncurses_assume_default_colors",
        "body": "ncurses_assume_default_colors(${1:fg}, ${2:bg})$0"
    },
    "ncurses_attroff": {
        "prefix": "ncurses_attroff",
        "body": "ncurses_attroff(${1:attributes})$0"
    },
    "ncurses_attron": {
        "prefix": "ncurses_attron",
        "body": "ncurses_attron(${1:attributes})$0"
    },
    "ncurses_attrset": {
        "prefix": "ncurses_attrset",
        "body": "ncurses_attrset(${1:attributes})$0"
    },
    "ncurses_baudrate": {
        "prefix": "ncurses_baudrate",
        "body": "ncurses_baudrate()$0"
    },
    "ncurses_beep": {
        "prefix": "ncurses_beep",
        "body": "ncurses_beep()$0"
    },
    "ncurses_bkgd": {
        "prefix": "ncurses_bkgd",
        "body": "ncurses_bkgd(${1:attrchar})$0"
    },
    "ncurses_bkgdset": {
        "prefix": "ncurses_bkgdset",
        "body": "ncurses_bkgdset(${1:attrchar})$0"
    },
    "ncurses_border": {
        "prefix": "ncurses_border",
        "body": "ncurses_border(${1:left}, ${2:right}, ${3:top}, ${4:bottom}, ${5:tl_corner}, ${6:tr_corner}, ${7:bl_corner}, ${8:br_corner})$0"
    },
    "ncurses_bottom_panel": {
        "prefix": "ncurses_bottom_panel",
        "body": "ncurses_bottom_panel(${1:panel})$0"
    },
    "ncurses_can_change_color": {
        "prefix": "ncurses_can_change_color",
        "body": "ncurses_can_change_color()$0"
    },
    "ncurses_cbreak": {
        "prefix": "ncurses_cbreak",
        "body": "ncurses_cbreak()$0"
    },
    "ncurses_clear": {
        "prefix": "ncurses_clear",
        "body": "ncurses_clear()$0"
    },
    "ncurses_clrtobot": {
        "prefix": "ncurses_clrtobot",
        "body": "ncurses_clrtobot()$0"
    },
    "ncurses_clrtoeol": {
        "prefix": "ncurses_clrtoeol",
        "body": "ncurses_clrtoeol()$0"
    },
    "ncurses_color_content": {
        "prefix": "ncurses_color_content",
        "body": "ncurses_color_content(${1:color}, ${2:r}, ${3:g}, ${4:b})$0"
    },
    "ncurses_color_set": {
        "prefix": "ncurses_color_set",
        "body": "ncurses_color_set(${1:pair})$0"
    },
    "ncurses_curs_set": {
        "prefix": "ncurses_curs_set",
        "body": "ncurses_curs_set(${1:visibility})$0"
    },
    "ncurses_def_prog_mode": {
        "prefix": "ncurses_def_prog_mode",
        "body": "ncurses_def_prog_mode()$0"
    },
    "ncurses_def_shell_mode": {
        "prefix": "ncurses_def_shell_mode",
        "body": "ncurses_def_shell_mode()$0"
    },
    "ncurses_define_key": {
        "prefix": "ncurses_define_key",
        "body": "ncurses_define_key(${1:definition}, ${2:keycode})$0"
    },
    "ncurses_del_panel": {
        "prefix": "ncurses_del_panel",
        "body": "ncurses_del_panel(${1:panel})$0"
    },
    "ncurses_delay_output": {
        "prefix": "ncurses_delay_output",
        "body": "ncurses_delay_output(${1:milliseconds})$0"
    },
    "ncurses_delch": {
        "prefix": "ncurses_delch",
        "body": "ncurses_delch()$0"
    },
    "ncurses_deleteln": {
        "prefix": "ncurses_deleteln",
        "body": "ncurses_deleteln()$0"
    },
    "ncurses_delwin": {
        "prefix": "ncurses_delwin",
        "body": "ncurses_delwin(${1:window})$0"
    },
    "ncurses_doupdate": {
        "prefix": "ncurses_doupdate",
        "body": "ncurses_doupdate()$0"
    },
    "ncurses_echo": {
        "prefix": "ncurses_echo",
        "body": "ncurses_echo()$0"
    },
    "ncurses_echochar": {
        "prefix": "ncurses_echochar",
        "body": "ncurses_echochar(${1:character})$0"
    },
    "ncurses_end": {
        "prefix": "ncurses_end",
        "body": "ncurses_end()$0"
    },
    "ncurses_erase": {
        "prefix": "ncurses_erase",
        "body": "ncurses_erase()$0"
    },
    "ncurses_erasechar": {
        "prefix": "ncurses_erasechar",
        "body": "ncurses_erasechar()$0"
    },
    "ncurses_filter": {
        "prefix": "ncurses_filter",
        "body": "ncurses_filter()$0"
    },
    "ncurses_flash": {
        "prefix": "ncurses_flash",
        "body": "ncurses_flash()$0"
    },
    "ncurses_flushinp": {
        "prefix": "ncurses_flushinp",
        "body": "ncurses_flushinp()$0"
    },
    "ncurses_getch": {
        "prefix": "ncurses_getch",
        "body": "ncurses_getch()$0"
    },
    "ncurses_getmaxyx": {
        "prefix": "ncurses_getmaxyx",
        "body": "ncurses_getmaxyx(${1:window}, ${2:y}, ${3:x})$0"
    },
    "ncurses_getmouse": {
        "prefix": "ncurses_getmouse",
        "body": "ncurses_getmouse(${1:mevent})$0"
    },
    "ncurses_getyx": {
        "prefix": "ncurses_getyx",
        "body": "ncurses_getyx(${1:window}, ${2:y}, ${3:x})$0"
    },
    "ncurses_halfdelay": {
        "prefix": "ncurses_halfdelay",
        "body": "ncurses_halfdelay(${1:tenth})$0"
    },
    "ncurses_has_colors": {
        "prefix": "ncurses_has_colors",
        "body": "ncurses_has_colors()$0"
    },
    "ncurses_has_ic": {
        "prefix": "ncurses_has_ic",
        "body": "ncurses_has_ic()$0"
    },
    "ncurses_has_il": {
        "prefix": "ncurses_has_il",
        "body": "ncurses_has_il()$0"
    },
    "ncurses_has_key": {
        "prefix": "ncurses_has_key",
        "body": "ncurses_has_key(${1:keycode})$0"
    },
    "ncurses_hide_panel": {
        "prefix": "ncurses_hide_panel",
        "body": "ncurses_hide_panel(${1:panel})$0"
    },
    "ncurses_hline": {
        "prefix": "ncurses_hline",
        "body": "ncurses_hline(${1:charattr}, ${2:n})$0"
    },
    "ncurses_inch": {
        "prefix": "ncurses_inch",
        "body": "ncurses_inch()$0"
    },
    "ncurses_init": {
        "prefix": "ncurses_init",
        "body": "ncurses_init()$0"
    },
    "ncurses_init_color": {
        "prefix": "ncurses_init_color",
        "body": "ncurses_init_color(${1:color}, ${2:r}, ${3:g}, ${4:b})$0"
    },
    "ncurses_init_pair": {
        "prefix": "ncurses_init_pair",
        "body": "ncurses_init_pair(${1:pair}, ${2:fg}, ${3:bg})$0"
    },
    "ncurses_insch": {
        "prefix": "ncurses_insch",
        "body": "ncurses_insch(${1:character})$0"
    },
    "ncurses_insdelln": {
        "prefix": "ncurses_insdelln",
        "body": "ncurses_insdelln(${1:count})$0"
    },
    "ncurses_insertln": {
        "prefix": "ncurses_insertln",
        "body": "ncurses_insertln()$0"
    },
    "ncurses_insstr": {
        "prefix": "ncurses_insstr",
        "body": "ncurses_insstr(${1:text})$0"
    },
    "ncurses_instr": {
        "prefix": "ncurses_instr",
        "body": "ncurses_instr(${1:buffer})$0"
    },
    "ncurses_isendwin": {
        "prefix": "ncurses_isendwin",
        "body": "ncurses_isendwin()$0"
    },
    "ncurses_keyok": {
        "prefix": "ncurses_keyok",
        "body": "ncurses_keyok(${1:keycode}, ${2:enable})$0"
    },
    "ncurses_keypad": {
        "prefix": "ncurses_keypad",
        "body": "ncurses_keypad(${1:window}, ${2:bf})$0"
    },
    "ncurses_killchar": {
        "prefix": "ncurses_killchar",
        "body": "ncurses_killchar()$0"
    },
    "ncurses_longname": {
        "prefix": "ncurses_longname",
        "body": "ncurses_longname()$0"
    },
    "ncurses_meta": {
        "prefix": "ncurses_meta",
        "body": "ncurses_meta(${1:window}, ${2:8bit})$0"
    },
    "ncurses_mouse_trafo": {
        "prefix": "ncurses_mouse_trafo",
        "body": "ncurses_mouse_trafo(${1:y}, ${2:x}, ${3:toscreen})$0"
    },
    "ncurses_mouseinterval": {
        "prefix": "ncurses_mouseinterval",
        "body": "ncurses_mouseinterval(${1:milliseconds})$0"
    },
    "ncurses_mousemask": {
        "prefix": "ncurses_mousemask",
        "body": "ncurses_mousemask(${1:newmask}, ${2:oldmask})$0"
    },
    "ncurses_move": {
        "prefix": "ncurses_move",
        "body": "ncurses_move(${1:y}, ${2:x})$0"
    },
    "ncurses_move_panel": {
        "prefix": "ncurses_move_panel",
        "body": "ncurses_move_panel(${1:panel}, ${2:startx}, ${3:starty})$0"
    },
    "ncurses_mvaddch": {
        "prefix": "ncurses_mvaddch",
        "body": "ncurses_mvaddch(${1:y}, ${2:x}, ${3:c})$0"
    },
    "ncurses_mvaddchnstr": {
        "prefix": "ncurses_mvaddchnstr",
        "body": "ncurses_mvaddchnstr(${1:y}, ${2:x}, ${3:s}, ${4:n})$0"
    },
    "ncurses_mvaddchstr": {
        "prefix": "ncurses_mvaddchstr",
        "body": "ncurses_mvaddchstr(${1:y}, ${2:x}, ${3:s})$0"
    },
    "ncurses_mvaddnstr": {
        "prefix": "ncurses_mvaddnstr",
        "body": "ncurses_mvaddnstr(${1:y}, ${2:x}, ${3:s}, ${4:n})$0"
    },
    "ncurses_mvaddstr": {
        "prefix": "ncurses_mvaddstr",
        "body": "ncurses_mvaddstr(${1:y}, ${2:x}, ${3:s})$0"
    },
    "ncurses_mvcur": {
        "prefix": "ncurses_mvcur",
        "body": "ncurses_mvcur(${1:old_y}, ${2:old_x}, ${3:new_y}, ${4:new_x})$0"
    },
    "ncurses_mvdelch": {
        "prefix": "ncurses_mvdelch",
        "body": "ncurses_mvdelch(${1:y}, ${2:x})$0"
    },
    "ncurses_mvgetch": {
        "prefix": "ncurses_mvgetch",
        "body": "ncurses_mvgetch(${1:y}, ${2:x})$0"
    },
    "ncurses_mvhline": {
        "prefix": "ncurses_mvhline",
        "body": "ncurses_mvhline(${1:y}, ${2:x}, ${3:attrchar}, ${4:n})$0"
    },
    "ncurses_mvinch": {
        "prefix": "ncurses_mvinch",
        "body": "ncurses_mvinch(${1:y}, ${2:x})$0"
    },
    "ncurses_mvvline": {
        "prefix": "ncurses_mvvline",
        "body": "ncurses_mvvline(${1:y}, ${2:x}, ${3:attrchar}, ${4:n})$0"
    },
    "ncurses_mvwaddstr": {
        "prefix": "ncurses_mvwaddstr",
        "body": "ncurses_mvwaddstr(${1:window}, ${2:y}, ${3:x}, ${4:text})$0"
    },
    "ncurses_napms": {
        "prefix": "ncurses_napms",
        "body": "ncurses_napms(${1:milliseconds})$0"
    },
    "ncurses_new_panel": {
        "prefix": "ncurses_new_panel",
        "body": "ncurses_new_panel(${1:window})$0"
    },
    "ncurses_newpad": {
        "prefix": "ncurses_newpad",
        "body": "ncurses_newpad(${1:rows}, ${2:cols})$0"
    },
    "ncurses_newwin": {
        "prefix": "ncurses_newwin",
        "body": "ncurses_newwin(${1:rows}, ${2:cols}, ${3:y}, ${4:x})$0"
    },
    "ncurses_nl": {
        "prefix": "ncurses_nl",
        "body": "ncurses_nl()$0"
    },
    "ncurses_nocbreak": {
        "prefix": "ncurses_nocbreak",
        "body": "ncurses_nocbreak()$0"
    },
    "ncurses_noecho": {
        "prefix": "ncurses_noecho",
        "body": "ncurses_noecho()$0"
    },
    "ncurses_nonl": {
        "prefix": "ncurses_nonl",
        "body": "ncurses_nonl()$0"
    },
    "ncurses_noqiflush": {
        "prefix": "ncurses_noqiflush",
        "body": "ncurses_noqiflush()$0"
    },
    "ncurses_noraw": {
        "prefix": "ncurses_noraw",
        "body": "ncurses_noraw()$0"
    },
    "ncurses_pair_content": {
        "prefix": "ncurses_pair_content",
        "body": "ncurses_pair_content(${1:pair}, ${2:f}, ${3:b})$0"
    },
    "ncurses_panel_above": {
        "prefix": "ncurses_panel_above",
        "body": "ncurses_panel_above(${1:panel})$0"
    },
    "ncurses_panel_below": {
        "prefix": "ncurses_panel_below",
        "body": "ncurses_panel_below(${1:panel})$0"
    },
    "ncurses_panel_window": {
        "prefix": "ncurses_panel_window",
        "body": "ncurses_panel_window(${1:panel})$0"
    },
    "ncurses_pnoutrefresh": {
        "prefix": "ncurses_pnoutrefresh",
        "body": "ncurses_pnoutrefresh(${1:pad}, ${2:pminrow}, ${3:pmincol}, ${4:sminrow}, ${5:smincol}, ${6:smaxrow}, ${7:smaxcol})$0"
    },
    "ncurses_prefresh": {
        "prefix": "ncurses_prefresh",
        "body": "ncurses_prefresh(${1:pad}, ${2:pminrow}, ${3:pmincol}, ${4:sminrow}, ${5:smincol}, ${6:smaxrow}, ${7:smaxcol})$0"
    },
    "ncurses_putp": {
        "prefix": "ncurses_putp",
        "body": "ncurses_putp(${1:text})$0"
    },
    "ncurses_qiflush": {
        "prefix": "ncurses_qiflush",
        "body": "ncurses_qiflush()$0"
    },
    "ncurses_raw": {
        "prefix": "ncurses_raw",
        "body": "ncurses_raw()$0"
    },
    "ncurses_refresh": {
        "prefix": "ncurses_refresh",
        "body": "ncurses_refresh(${1:ch})$0"
    },
    "ncurses_replace_panel": {
        "prefix": "ncurses_replace_panel",
        "body": "ncurses_replace_panel(${1:panel}, ${2:window})$0"
    },
    "ncurses_reset_prog_mode": {
        "prefix": "ncurses_reset_prog_mode",
        "body": "ncurses_reset_prog_mode()$0"
    },
    "ncurses_reset_shell_mode": {
        "prefix": "ncurses_reset_shell_mode",
        "body": "ncurses_reset_shell_mode()$0"
    },
    "ncurses_resetty": {
        "prefix": "ncurses_resetty",
        "body": "ncurses_resetty()$0"
    },
    "ncurses_savetty": {
        "prefix": "ncurses_savetty",
        "body": "ncurses_savetty()$0"
    },
    "ncurses_scr_dump": {
        "prefix": "ncurses_scr_dump",
        "body": "ncurses_scr_dump(${1:filename})$0"
    },
    "ncurses_scr_init": {
        "prefix": "ncurses_scr_init",
        "body": "ncurses_scr_init(${1:filename})$0"
    },
    "ncurses_scr_restore": {
        "prefix": "ncurses_scr_restore",
        "body": "ncurses_scr_restore(${1:filename})$0"
    },
    "ncurses_scr_set": {
        "prefix": "ncurses_scr_set",
        "body": "ncurses_scr_set(${1:filename})$0"
    },
    "ncurses_scrl": {
        "prefix": "ncurses_scrl",
        "body": "ncurses_scrl(${1:count})$0"
    },
    "ncurses_show_panel": {
        "prefix": "ncurses_show_panel",
        "body": "ncurses_show_panel(${1:panel})$0"
    },
    "ncurses_slk_attr": {
        "prefix": "ncurses_slk_attr",
        "body": "ncurses_slk_attr()$0"
    },
    "ncurses_slk_attroff": {
        "prefix": "ncurses_slk_attroff",
        "body": "ncurses_slk_attroff(${1:intarg})$0"
    },
    "ncurses_slk_attron": {
        "prefix": "ncurses_slk_attron",
        "body": "ncurses_slk_attron(${1:intarg})$0"
    },
    "ncurses_slk_attrset": {
        "prefix": "ncurses_slk_attrset",
        "body": "ncurses_slk_attrset(${1:intarg})$0"
    },
    "ncurses_slk_clear": {
        "prefix": "ncurses_slk_clear",
        "body": "ncurses_slk_clear()$0"
    },
    "ncurses_slk_color": {
        "prefix": "ncurses_slk_color",
        "body": "ncurses_slk_color(${1:intarg})$0"
    },
    "ncurses_slk_init": {
        "prefix": "ncurses_slk_init",
        "body": "ncurses_slk_init(${1:format})$0"
    },
    "ncurses_slk_noutrefresh": {
        "prefix": "ncurses_slk_noutrefresh",
        "body": "ncurses_slk_noutrefresh()$0"
    },
    "ncurses_slk_refresh": {
        "prefix": "ncurses_slk_refresh",
        "body": "ncurses_slk_refresh()$0"
    },
    "ncurses_slk_restore": {
        "prefix": "ncurses_slk_restore",
        "body": "ncurses_slk_restore()$0"
    },
    "ncurses_slk_set": {
        "prefix": "ncurses_slk_set",
        "body": "ncurses_slk_set(${1:labelnr}, ${2:label}, ${3:format})$0"
    },
    "ncurses_slk_touch": {
        "prefix": "ncurses_slk_touch",
        "body": "ncurses_slk_touch()$0"
    },
    "ncurses_standend": {
        "prefix": "ncurses_standend",
        "body": "ncurses_standend()$0"
    },
    "ncurses_standout": {
        "prefix": "ncurses_standout",
        "body": "ncurses_standout()$0"
    },
    "ncurses_start_color": {
        "prefix": "ncurses_start_color",
        "body": "ncurses_start_color()$0"
    },
    "ncurses_termattrs": {
        "prefix": "ncurses_termattrs",
        "body": "ncurses_termattrs()$0"
    },
    "ncurses_termname": {
        "prefix": "ncurses_termname",
        "body": "ncurses_termname()$0"
    },
    "ncurses_timeout": {
        "prefix": "ncurses_timeout",
        "body": "ncurses_timeout(${1:millisec})$0"
    },
    "ncurses_top_panel": {
        "prefix": "ncurses_top_panel",
        "body": "ncurses_top_panel(${1:panel})$0"
    },
    "ncurses_typeahead": {
        "prefix": "ncurses_typeahead",
        "body": "ncurses_typeahead(${1:fd})$0"
    },
    "ncurses_ungetch": {
        "prefix": "ncurses_ungetch",
        "body": "ncurses_ungetch(${1:keycode})$0"
    },
    "ncurses_ungetmouse": {
        "prefix": "ncurses_ungetmouse",
        "body": "ncurses_ungetmouse(${1:mevent})$0"
    },
    "ncurses_update_panels": {
        "prefix": "ncurses_update_panels",
        "body": "ncurses_update_panels()$0"
    },
    "ncurses_use_default_colors": {
        "prefix": "ncurses_use_default_colors",
        "body": "ncurses_use_default_colors()$0"
    },
    "ncurses_use_env": {
        "prefix": "ncurses_use_env",
        "body": "ncurses_use_env(${1:flag})$0"
    },
    "ncurses_use_extended_names": {
        "prefix": "ncurses_use_extended_names",
        "body": "ncurses_use_extended_names(${1:flag})$0"
    },
    "ncurses_vidattr": {
        "prefix": "ncurses_vidattr",
        "body": "ncurses_vidattr(${1:intarg})$0"
    },
    "ncurses_vline": {
        "prefix": "ncurses_vline",
        "body": "ncurses_vline(${1:charattr}, ${2:n})$0"
    },
    "ncurses_waddch": {
        "prefix": "ncurses_waddch",
        "body": "ncurses_waddch(${1:window}, ${2:ch})$0"
    },
    "ncurses_waddstr": {
        "prefix": "ncurses_waddstr",
        "body": "ncurses_waddstr(${1:window}, ${2:str})$0"
    },
    "ncurses_wattroff": {
        "prefix": "ncurses_wattroff",
        "body": "ncurses_wattroff(${1:window}, ${2:attrs})$0"
    },
    "ncurses_wattron": {
        "prefix": "ncurses_wattron",
        "body": "ncurses_wattron(${1:window}, ${2:attrs})$0"
    },
    "ncurses_wattrset": {
        "prefix": "ncurses_wattrset",
        "body": "ncurses_wattrset(${1:window}, ${2:attrs})$0"
    },
    "ncurses_wborder": {
        "prefix": "ncurses_wborder",
        "body": "ncurses_wborder(${1:window}, ${2:left}, ${3:right}, ${4:top}, ${5:bottom}, ${6:tl_corner}, ${7:tr_corner}, ${8:bl_corner}, ${9:br_corner})$0"
    },
    "ncurses_wclear": {
        "prefix": "ncurses_wclear",
        "body": "ncurses_wclear(${1:window})$0"
    },
    "ncurses_wcolor_set": {
        "prefix": "ncurses_wcolor_set",
        "body": "ncurses_wcolor_set(${1:window}, ${2:color_pair})$0"
    },
    "ncurses_werase": {
        "prefix": "ncurses_werase",
        "body": "ncurses_werase(${1:window})$0"
    },
    "ncurses_wgetch": {
        "prefix": "ncurses_wgetch",
        "body": "ncurses_wgetch(${1:window})$0"
    },
    "ncurses_whline": {
        "prefix": "ncurses_whline",
        "body": "ncurses_whline(${1:window}, ${2:charattr}, ${3:n})$0"
    },
    "ncurses_wmouse_trafo": {
        "prefix": "ncurses_wmouse_trafo",
        "body": "ncurses_wmouse_trafo(${1:window}, ${2:y}, ${3:x}, ${4:toscreen})$0"
    },
    "ncurses_wmove": {
        "prefix": "ncurses_wmove",
        "body": "ncurses_wmove(${1:window}, ${2:y}, ${3:x})$0"
    },
    "ncurses_wnoutrefresh": {
        "prefix": "ncurses_wnoutrefresh",
        "body": "ncurses_wnoutrefresh(${1:window})$0"
    },
    "ncurses_wrefresh": {
        "prefix": "ncurses_wrefresh",
        "body": "ncurses_wrefresh(${1:window})$0"
    },
    "ncurses_wstandend": {
        "prefix": "ncurses_wstandend",
        "body": "ncurses_wstandend(${1:window})$0"
    },
    "ncurses_wstandout": {
        "prefix": "ncurses_wstandout",
        "body": "ncurses_wstandout(${1:window})$0"
    },
    "ncurses_wvline": {
        "prefix": "ncurses_wvline",
        "body": "ncurses_wvline(${1:window}, ${2:charattr}, ${3:n})$0"
    },
    "newt_bell": {
        "prefix": "newt_bell",
        "body": "newt_bell()$0"
    },
    "newt_button": {
        "prefix": "newt_button",
        "body": "newt_button(${1:left}, ${2:top}, ${3:text})$0"
    },
    "newt_button_bar": {
        "prefix": "newt_button_bar",
        "body": "newt_button_bar(${1:buttons})$0"
    },
    "newt_centered_window": {
        "prefix": "newt_centered_window",
        "body": "newt_centered_window(${1:width}, ${2:height})$0"
    },
    "newt_checkbox": {
        "prefix": "newt_checkbox",
        "body": "newt_checkbox(${1:left}, ${2:top}, ${3:text}, ${4:def_value})$0"
    },
    "newt_checkbox_get_value": {
        "prefix": "newt_checkbox_get_value",
        "body": "newt_checkbox_get_value(${1:checkbox})$0"
    },
    "newt_checkbox_set_flags": {
        "prefix": "newt_checkbox_set_flags",
        "body": "newt_checkbox_set_flags(${1:checkbox}, ${2:flags}, ${3:sense})$0"
    },
    "newt_checkbox_set_value": {
        "prefix": "newt_checkbox_set_value",
        "body": "newt_checkbox_set_value(${1:checkbox}, ${2:value})$0"
    },
    "newt_checkbox_tree": {
        "prefix": "newt_checkbox_tree",
        "body": "newt_checkbox_tree(${1:left}, ${2:top}, ${3:height})$0"
    },
    "newt_checkbox_tree_add_item": {
        "prefix": "newt_checkbox_tree_add_item",
        "body": "newt_checkbox_tree_add_item(${1:checkboxtree}, ${2:text}, ${3:data}, ${4:flags}, ${5:index})$0"
    },
    "newt_checkbox_tree_find_item": {
        "prefix": "newt_checkbox_tree_find_item",
        "body": "newt_checkbox_tree_find_item(${1:checkboxtree}, ${2:data})$0"
    },
    "newt_checkbox_tree_get_current": {
        "prefix": "newt_checkbox_tree_get_current",
        "body": "newt_checkbox_tree_get_current(${1:checkboxtree})$0"
    },
    "newt_checkbox_tree_get_entry_value": {
        "prefix": "newt_checkbox_tree_get_entry_value",
        "body": "newt_checkbox_tree_get_entry_value(${1:checkboxtree}, ${2:data})$0"
    },
    "newt_checkbox_tree_get_multi_selection": {
        "prefix": "newt_checkbox_tree_get_multi_selection",
        "body": "newt_checkbox_tree_get_multi_selection(${1:checkboxtree}, ${2:seqnum})$0"
    },
    "newt_checkbox_tree_get_selection": {
        "prefix": "newt_checkbox_tree_get_selection",
        "body": "newt_checkbox_tree_get_selection(${1:checkboxtree})$0"
    },
    "newt_checkbox_tree_multi": {
        "prefix": "newt_checkbox_tree_multi",
        "body": "newt_checkbox_tree_multi(${1:left}, ${2:top}, ${3:height}, ${4:seq})$0"
    },
    "newt_checkbox_tree_set_current": {
        "prefix": "newt_checkbox_tree_set_current",
        "body": "newt_checkbox_tree_set_current(${1:checkboxtree}, ${2:data})$0"
    },
    "newt_checkbox_tree_set_entry": {
        "prefix": "newt_checkbox_tree_set_entry",
        "body": "newt_checkbox_tree_set_entry(${1:checkboxtree}, ${2:data}, ${3:text})$0"
    },
    "newt_checkbox_tree_set_entry_value": {
        "prefix": "newt_checkbox_tree_set_entry_value",
        "body": "newt_checkbox_tree_set_entry_value(${1:checkboxtree}, ${2:data}, ${3:value})$0"
    },
    "newt_checkbox_tree_set_width": {
        "prefix": "newt_checkbox_tree_set_width",
        "body": "newt_checkbox_tree_set_width(${1:checkbox_tree}, ${2:width})$0"
    },
    "newt_clear_key_buffer": {
        "prefix": "newt_clear_key_buffer",
        "body": "newt_clear_key_buffer()$0"
    },
    "newt_cls": {
        "prefix": "newt_cls",
        "body": "newt_cls()$0"
    },
    "newt_compact_button": {
        "prefix": "newt_compact_button",
        "body": "newt_compact_button(${1:left}, ${2:top}, ${3:text})$0"
    },
    "newt_component_add_callback": {
        "prefix": "newt_component_add_callback",
        "body": "newt_component_add_callback(${1:component}, ${2:func_name}, ${3:data})$0"
    },
    "newt_component_takes_focus": {
        "prefix": "newt_component_takes_focus",
        "body": "newt_component_takes_focus(${1:component}, ${2:takes_focus})$0"
    },
    "newt_create_grid": {
        "prefix": "newt_create_grid",
        "body": "newt_create_grid(${1:cols}, ${2:rows})$0"
    },
    "newt_cursor_off": {
        "prefix": "newt_cursor_off",
        "body": "newt_cursor_off()$0"
    },
    "newt_cursor_on": {
        "prefix": "newt_cursor_on",
        "body": "newt_cursor_on()$0"
    },
    "newt_delay": {
        "prefix": "newt_delay",
        "body": "newt_delay(${1:microseconds})$0"
    },
    "newt_draw_form": {
        "prefix": "newt_draw_form",
        "body": "newt_draw_form(${1:form})$0"
    },
    "newt_draw_root_text": {
        "prefix": "newt_draw_root_text",
        "body": "newt_draw_root_text(${1:left}, ${2:top}, ${3:text})$0"
    },
    "newt_entry": {
        "prefix": "newt_entry",
        "body": "newt_entry(${1:left}, ${2:top}, ${3:width})$0"
    },
    "newt_entry_get_value": {
        "prefix": "newt_entry_get_value",
        "body": "newt_entry_get_value(${1:entry})$0"
    },
    "newt_entry_set": {
        "prefix": "newt_entry_set",
        "body": "newt_entry_set(${1:entry}, ${2:value})$0"
    },
    "newt_entry_set_filter": {
        "prefix": "newt_entry_set_filter",
        "body": "newt_entry_set_filter(${1:entry}, ${2:filter}, ${3:data})$0"
    },
    "newt_entry_set_flags": {
        "prefix": "newt_entry_set_flags",
        "body": "newt_entry_set_flags(${1:entry}, ${2:flags}, ${3:sense})$0"
    },
    "newt_finished": {
        "prefix": "newt_finished",
        "body": "newt_finished()$0"
    },
    "newt_form": {
        "prefix": "newt_form",
        "body": "newt_form()$0"
    },
    "newt_form_add_component": {
        "prefix": "newt_form_add_component",
        "body": "newt_form_add_component(${1:form}, ${2:component})$0"
    },
    "newt_form_add_components": {
        "prefix": "newt_form_add_components",
        "body": "newt_form_add_components(${1:form}, ${2:components})$0"
    },
    "newt_form_add_hot_key": {
        "prefix": "newt_form_add_hot_key",
        "body": "newt_form_add_hot_key(${1:form}, ${2:key})$0"
    },
    "newt_form_destroy": {
        "prefix": "newt_form_destroy",
        "body": "newt_form_destroy(${1:form})$0"
    },
    "newt_form_get_current": {
        "prefix": "newt_form_get_current",
        "body": "newt_form_get_current(${1:form})$0"
    },
    "newt_form_run": {
        "prefix": "newt_form_run",
        "body": "newt_form_run(${1:form}, ${2:exit_struct})$0"
    },
    "newt_form_set_background": {
        "prefix": "newt_form_set_background",
        "body": "newt_form_set_background(${1:from}, ${2:background})$0"
    },
    "newt_form_set_height": {
        "prefix": "newt_form_set_height",
        "body": "newt_form_set_height(${1:form}, ${2:height})$0"
    },
    "newt_form_set_size": {
        "prefix": "newt_form_set_size",
        "body": "newt_form_set_size(${1:form})$0"
    },
    "newt_form_set_timer": {
        "prefix": "newt_form_set_timer",
        "body": "newt_form_set_timer(${1:form}, ${2:milliseconds})$0"
    },
    "newt_form_set_width": {
        "prefix": "newt_form_set_width",
        "body": "newt_form_set_width(${1:form}, ${2:width})$0"
    },
    "newt_form_watch_fd": {
        "prefix": "newt_form_watch_fd",
        "body": "newt_form_watch_fd(${1:form}, ${2:stream})$0"
    },
    "newt_get_screen_size": {
        "prefix": "newt_get_screen_size",
        "body": "newt_get_screen_size(${1:cols}, ${2:rows})$0"
    },
    "newt_grid_add_components_to_form": {
        "prefix": "newt_grid_add_components_to_form",
        "body": "newt_grid_add_components_to_form(${1:grid}, ${2:form}, ${3:recurse})$0"
    },
    "newt_grid_basic_window": {
        "prefix": "newt_grid_basic_window",
        "body": "newt_grid_basic_window(${1:text}, ${2:middle}, ${3:buttons})$0"
    },
    "newt_grid_free": {
        "prefix": "newt_grid_free",
        "body": "newt_grid_free(${1:grid}, ${2:recurse})$0"
    },
    "newt_grid_get_size": {
        "prefix": "newt_grid_get_size",
        "body": "newt_grid_get_size(${1:grid}, ${2:width}, ${3:height})$0"
    },
    "newt_grid_h_close_stacked": {
        "prefix": "newt_grid_h_close_stacked",
        "body": "newt_grid_h_close_stacked(${1:element1_type}, ${2:element1})$0"
    },
    "newt_grid_h_stacked": {
        "prefix": "newt_grid_h_stacked",
        "body": "newt_grid_h_stacked(${1:element1_type}, ${2:element1})$0"
    },
    "newt_grid_place": {
        "prefix": "newt_grid_place",
        "body": "newt_grid_place(${1:grid}, ${2:left}, ${3:top})$0"
    },
    "newt_grid_set_field": {
        "prefix": "newt_grid_set_field",
        "body": "newt_grid_set_field(${1:grid}, ${2:col}, ${3:row}, ${4:type}, ${5:val}, ${6:pad_left}, ${7:pad_top}, ${8:pad_right}, ${9:pad_bottom}, ${10:anchor})$0"
    },
    "newt_grid_simple_window": {
        "prefix": "newt_grid_simple_window",
        "body": "newt_grid_simple_window(${1:text}, ${2:middle}, ${3:buttons})$0"
    },
    "newt_grid_v_close_stacked": {
        "prefix": "newt_grid_v_close_stacked",
        "body": "newt_grid_v_close_stacked(${1:element1_type}, ${2:element1})$0"
    },
    "newt_grid_v_stacked": {
        "prefix": "newt_grid_v_stacked",
        "body": "newt_grid_v_stacked(${1:element1_type}, ${2:element1})$0"
    },
    "newt_grid_wrapped_window": {
        "prefix": "newt_grid_wrapped_window",
        "body": "newt_grid_wrapped_window(${1:grid}, ${2:title})$0"
    },
    "newt_grid_wrapped_window_at": {
        "prefix": "newt_grid_wrapped_window_at",
        "body": "newt_grid_wrapped_window_at(${1:grid}, ${2:title}, ${3:left}, ${4:top})$0"
    },
    "newt_init": {
        "prefix": "newt_init",
        "body": "newt_init()$0"
    },
    "newt_label": {
        "prefix": "newt_label",
        "body": "newt_label(${1:left}, ${2:top}, ${3:text})$0"
    },
    "newt_label_set_text": {
        "prefix": "newt_label_set_text",
        "body": "newt_label_set_text(${1:label}, ${2:text})$0"
    },
    "newt_listbox": {
        "prefix": "newt_listbox",
        "body": "newt_listbox(${1:left}, ${2:top}, ${3:height})$0"
    },
    "newt_listbox_append_entry": {
        "prefix": "newt_listbox_append_entry",
        "body": "newt_listbox_append_entry(${1:listbox}, ${2:text}, ${3:data})$0"
    },
    "newt_listbox_clear": {
        "prefix": "newt_listbox_clear",
        "body": "newt_listbox_clear(${1:listobx})$0"
    },
    "newt_listbox_clear_selection": {
        "prefix": "newt_listbox_clear_selection",
        "body": "newt_listbox_clear_selection(${1:listbox})$0"
    },
    "newt_listbox_delete_entry": {
        "prefix": "newt_listbox_delete_entry",
        "body": "newt_listbox_delete_entry(${1:listbox}, ${2:key})$0"
    },
    "newt_listbox_get_current": {
        "prefix": "newt_listbox_get_current",
        "body": "newt_listbox_get_current(${1:listbox})$0"
    },
    "newt_listbox_get_selection": {
        "prefix": "newt_listbox_get_selection",
        "body": "newt_listbox_get_selection(${1:listbox})$0"
    },
    "newt_listbox_insert_entry": {
        "prefix": "newt_listbox_insert_entry",
        "body": "newt_listbox_insert_entry(${1:listbox}, ${2:text}, ${3:data}, ${4:key})$0"
    },
    "newt_listbox_item_count": {
        "prefix": "newt_listbox_item_count",
        "body": "newt_listbox_item_count(${1:listbox})$0"
    },
    "newt_listbox_select_item": {
        "prefix": "newt_listbox_select_item",
        "body": "newt_listbox_select_item(${1:listbox}, ${2:key}, ${3:sense})$0"
    },
    "newt_listbox_set_current": {
        "prefix": "newt_listbox_set_current",
        "body": "newt_listbox_set_current(${1:listbox}, ${2:num})$0"
    },
    "newt_listbox_set_current_by_key": {
        "prefix": "newt_listbox_set_current_by_key",
        "body": "newt_listbox_set_current_by_key(${1:listbox}, ${2:key})$0"
    },
    "newt_listbox_set_data": {
        "prefix": "newt_listbox_set_data",
        "body": "newt_listbox_set_data(${1:listbox}, ${2:num}, ${3:data})$0"
    },
    "newt_listbox_set_entry": {
        "prefix": "newt_listbox_set_entry",
        "body": "newt_listbox_set_entry(${1:listbox}, ${2:num}, ${3:text})$0"
    },
    "newt_listbox_set_width": {
        "prefix": "newt_listbox_set_width",
        "body": "newt_listbox_set_width(${1:listbox}, ${2:width})$0"
    },
    "newt_listitem": {
        "prefix": "newt_listitem",
        "body": "newt_listitem(${1:left}, ${2:top}, ${3:text}, ${4:is_default}, ${5:prev_item}, ${6:data})$0"
    },
    "newt_listitem_get_data": {
        "prefix": "newt_listitem_get_data",
        "body": "newt_listitem_get_data(${1:item})$0"
    },
    "newt_listitem_set": {
        "prefix": "newt_listitem_set",
        "body": "newt_listitem_set(${1:item}, ${2:text})$0"
    },
    "newt_open_window": {
        "prefix": "newt_open_window",
        "body": "newt_open_window(${1:left}, ${2:top}, ${3:width}, ${4:height})$0"
    },
    "newt_pop_help_line": {
        "prefix": "newt_pop_help_line",
        "body": "newt_pop_help_line()$0"
    },
    "newt_pop_window": {
        "prefix": "newt_pop_window",
        "body": "newt_pop_window()$0"
    },
    "newt_push_help_line": {
        "prefix": "newt_push_help_line",
        "body": "newt_push_help_line()$0"
    },
    "newt_radio_get_current": {
        "prefix": "newt_radio_get_current",
        "body": "newt_radio_get_current(${1:set_member})$0"
    },
    "newt_radiobutton": {
        "prefix": "newt_radiobutton",
        "body": "newt_radiobutton(${1:left}, ${2:top}, ${3:text}, ${4:is_default})$0"
    },
    "newt_redraw_help_line": {
        "prefix": "newt_redraw_help_line",
        "body": "newt_redraw_help_line()$0"
    },
    "newt_reflow_text": {
        "prefix": "newt_reflow_text",
        "body": "newt_reflow_text(${1:text}, ${2:width}, ${3:flex_down}, ${4:flex_up}, ${5:actual_width}, ${6:actual_height})$0"
    },
    "newt_refresh": {
        "prefix": "newt_refresh",
        "body": "newt_refresh()$0"
    },
    "newt_resize_screen": {
        "prefix": "newt_resize_screen",
        "body": "newt_resize_screen()$0"
    },
    "newt_resume": {
        "prefix": "newt_resume",
        "body": "newt_resume()$0"
    },
    "newt_run_form": {
        "prefix": "newt_run_form",
        "body": "newt_run_form(${1:form})$0"
    },
    "newt_scale": {
        "prefix": "newt_scale",
        "body": "newt_scale(${1:left}, ${2:top}, ${3:width}, ${4:full_value})$0"
    },
    "newt_scale_set": {
        "prefix": "newt_scale_set",
        "body": "newt_scale_set(${1:scale}, ${2:amount})$0"
    },
    "newt_scrollbar_set": {
        "prefix": "newt_scrollbar_set",
        "body": "newt_scrollbar_set(${1:scrollbar}, ${2:where}, ${3:total})$0"
    },
    "newt_set_help_callback": {
        "prefix": "newt_set_help_callback",
        "body": "newt_set_help_callback(${1:function})$0"
    },
    "newt_set_suspend_callback": {
        "prefix": "newt_set_suspend_callback",
        "body": "newt_set_suspend_callback(${1:function}, ${2:data})$0"
    },
    "newt_suspend": {
        "prefix": "newt_suspend",
        "body": "newt_suspend()$0"
    },
    "newt_textbox": {
        "prefix": "newt_textbox",
        "body": "newt_textbox(${1:left}, ${2:top}, ${3:width}, ${4:height})$0"
    },
    "newt_textbox_get_num_lines": {
        "prefix": "newt_textbox_get_num_lines",
        "body": "newt_textbox_get_num_lines(${1:textbox})$0"
    },
    "newt_textbox_reflowed": {
        "prefix": "newt_textbox_reflowed",
        "body": "newt_textbox_reflowed(${1:left}, ${2:top}, ${3:*text}, ${4:width}, ${5:flex_down}, ${6:flex_up})$0"
    },
    "newt_textbox_set_height": {
        "prefix": "newt_textbox_set_height",
        "body": "newt_textbox_set_height(${1:textbox}, ${2:height})$0"
    },
    "newt_textbox_set_text": {
        "prefix": "newt_textbox_set_text",
        "body": "newt_textbox_set_text(${1:textbox}, ${2:text})$0"
    },
    "newt_vertical_scrollbar": {
        "prefix": "newt_vertical_scrollbar",
        "body": "newt_vertical_scrollbar(${1:left}, ${2:top}, ${3:height})$0"
    },
    "newt_wait_for_key": {
        "prefix": "newt_wait_for_key",
        "body": "newt_wait_for_key()$0"
    },
    "newt_win_choice": {
        "prefix": "newt_win_choice",
        "body": "newt_win_choice(${1:title}, ${2:button1_text}, ${3:button2_text}, ${4:format})$0"
    },
    "newt_win_entries": {
        "prefix": "newt_win_entries",
        "body": "newt_win_entries(${1:title}, ${2:text}, ${3:suggested_width}, ${4:flex_down}, ${5:flex_up}, ${6:data_width}, ${7:items}, ${8:button1})$0"
    },
    "newt_win_menu": {
        "prefix": "newt_win_menu",
        "body": "newt_win_menu(${1:title}, ${2:text}, ${3:suggestedWidth}, ${4:flexDown}, ${5:flexUp}, ${6:maxListHeight}, ${7:items}, ${8:listItem})$0"
    },
    "newt_win_message": {
        "prefix": "newt_win_message",
        "body": "newt_win_message(${1:title}, ${2:button_text}, ${3:format})$0"
    },
    "newt_win_messagev": {
        "prefix": "newt_win_messagev",
        "body": "newt_win_messagev(${1:title}, ${2:button_text}, ${3:format}, ${4:args})$0"
    },
    "newt_win_ternary": {
        "prefix": "newt_win_ternary",
        "body": "newt_win_ternary(${1:title}, ${2:button1_text}, ${3:button2_text}, ${4:button3_text}, ${5:format})$0"
    },
    "next": {
        "prefix": "next",
        "body": "next(${1:array})$0"
    },
    "ngettext": {
        "prefix": "ngettext",
        "body": "ngettext(${1:msgid1}, ${2:msgid2}, ${3:n})$0"
    },
    "nl2br": {
        "prefix": "nl2br",
        "body": "nl2br(${1:string})$0"
    },
    "nl_langinfo": {
        "prefix": "nl_langinfo",
        "body": "nl_langinfo(${1:item})$0"
    },
    "notes_body": {
        "prefix": "notes_body",
        "body": "notes_body(${1:server}, ${2:mailbox}, ${3:msg_number})$0"
    },
    "notes_copy_db": {
        "prefix": "notes_copy_db",
        "body": "notes_copy_db(${1:from_database_name}, ${2:to_database_name})$0"
    },
    "notes_create_db": {
        "prefix": "notes_create_db",
        "body": "notes_create_db(${1:database_name})$0"
    },
    "notes_create_note": {
        "prefix": "notes_create_note",
        "body": "notes_create_note(${1:database_name}, ${2:form_name})$0"
    },
    "notes_drop_db": {
        "prefix": "notes_drop_db",
        "body": "notes_drop_db(${1:database_name})$0"
    },
    "notes_find_note": {
        "prefix": "notes_find_note",
        "body": "notes_find_note(${1:database_name}, ${2:name})$0"
    },
    "notes_header_info": {
        "prefix": "notes_header_info",
        "body": "notes_header_info(${1:server}, ${2:mailbox}, ${3:msg_number})$0"
    },
    "notes_list_msgs": {
        "prefix": "notes_list_msgs",
        "body": "notes_list_msgs(${1:db})$0"
    },
    "notes_mark_read": {
        "prefix": "notes_mark_read",
        "body": "notes_mark_read(${1:database_name}, ${2:user_name}, ${3:note_id})$0"
    },
    "notes_mark_unread": {
        "prefix": "notes_mark_unread",
        "body": "notes_mark_unread(${1:database_name}, ${2:user_name}, ${3:note_id})$0"
    },
    "notes_nav_create": {
        "prefix": "notes_nav_create",
        "body": "notes_nav_create(${1:database_name}, ${2:name})$0"
    },
    "notes_search": {
        "prefix": "notes_search",
        "body": "notes_search(${1:database_name}, ${2:keywords})$0"
    },
    "notes_unread": {
        "prefix": "notes_unread",
        "body": "notes_unread(${1:database_name}, ${2:user_name})$0"
    },
    "notes_version": {
        "prefix": "notes_version",
        "body": "notes_version(${1:database_name})$0"
    },
    "nsapi_request_headers": {
        "prefix": "nsapi_request_headers",
        "body": "nsapi_request_headers()$0"
    },
    "nsapi_response_headers": {
        "prefix": "nsapi_response_headers",
        "body": "nsapi_response_headers()$0"
    },
    "nsapi_virtual": {
        "prefix": "nsapi_virtual",
        "body": "nsapi_virtual(${1:uri})$0"
    },
    "nthmac": {
        "prefix": "nthmac",
        "body": "nthmac(${1:clent}, ${2:data})$0"
    },
    "number_format": {
        "prefix": "number_format",
        "body": "number_format(${1:number})$0"
    },
    "oauth_get_sbs": {
        "prefix": "oauth_get_sbs",
        "body": "oauth_get_sbs(${1:http_method}, ${2:uri})$0"
    },
    "oauth_urlencode": {
        "prefix": "oauth_urlencode",
        "body": "oauth_urlencode(${1:uri})$0"
    },
    "ob_clean": {
        "prefix": "ob_clean",
        "body": "ob_clean()$0"
    },
    "ob_deflatehandler": {
        "prefix": "ob_deflatehandler",
        "body": "ob_deflatehandler(${1:data}, ${2:mode})$0"
    },
    "ob_end_clean": {
        "prefix": "ob_end_clean",
        "body": "ob_end_clean()$0"
    },
    "ob_end_flush": {
        "prefix": "ob_end_flush",
        "body": "ob_end_flush()$0"
    },
    "ob_etaghandler": {
        "prefix": "ob_etaghandler",
        "body": "ob_etaghandler(${1:data}, ${2:mode})$0"
    },
    "ob_flush": {
        "prefix": "ob_flush",
        "body": "ob_flush()$0"
    },
    "ob_get_clean": {
        "prefix": "ob_get_clean",
        "body": "ob_get_clean()$0"
    },
    "ob_get_contents": {
        "prefix": "ob_get_contents",
        "body": "ob_get_contents()$0"
    },
    "ob_get_flush": {
        "prefix": "ob_get_flush",
        "body": "ob_get_flush()$0"
    },
    "ob_get_length": {
        "prefix": "ob_get_length",
        "body": "ob_get_length()$0"
    },
    "ob_get_level": {
        "prefix": "ob_get_level",
        "body": "ob_get_level()$0"
    },
    "ob_get_status": {
        "prefix": "ob_get_status",
        "body": "ob_get_status()$0"
    },
    "ob_gzhandler": {
        "prefix": "ob_gzhandler",
        "body": "ob_gzhandler(${1:buffer}, ${2:mode})$0"
    },
    "ob_iconv_handler": {
        "prefix": "ob_iconv_handler",
        "body": "ob_iconv_handler(${1:contents}, ${2:status})$0"
    },
    "ob_implicit_flush": {
        "prefix": "ob_implicit_flush",
        "body": "ob_implicit_flush()$0"
    },
    "ob_inflatehandler": {
        "prefix": "ob_inflatehandler",
        "body": "ob_inflatehandler(${1:data}, ${2:mode})$0"
    },
    "ob_list_handlers": {
        "prefix": "ob_list_handlers",
        "body": "ob_list_handlers()$0"
    },
    "ob_start": {
        "prefix": "ob_start",
        "body": "ob_start()$0"
    },
    "ob_tidyhandler": {
        "prefix": "ob_tidyhandler",
        "body": "ob_tidyhandler(${1:input})$0"
    },
    "oci_bind_array_by_name": {
        "prefix": "oci_bind_array_by_name",
        "body": "oci_bind_array_by_name(${1:statement}, ${2:name}, ${3:var_array}, ${4:max_table_length})$0"
    },
    "oci_bind_by_name": {
        "prefix": "oci_bind_by_name",
        "body": "oci_bind_by_name(${1:statement}, ${2:bv_name}, ${3:variable})$0"
    },
    "oci_cancel": {
        "prefix": "oci_cancel",
        "body": "oci_cancel(${1:statement})$0"
    },
    "oci_close": {
        "prefix": "oci_close",
        "body": "oci_close(${1:connection})$0"
    },
    "oci_commit": {
        "prefix": "oci_commit",
        "body": "oci_commit(${1:connection})$0"
    },
    "oci_connect": {
        "prefix": "oci_connect",
        "body": "oci_connect(${1:username}, ${2:password})$0"
    },
    "oci_define_by_name": {
        "prefix": "oci_define_by_name",
        "body": "oci_define_by_name(${1:statement}, ${2:column_name}, ${3:variable})$0"
    },
    "oci_error": {
        "prefix": "oci_error",
        "body": "oci_error()$0"
    },
    "oci_execute": {
        "prefix": "oci_execute",
        "body": "oci_execute(${1:statement})$0"
    },
    "oci_fetch": {
        "prefix": "oci_fetch",
        "body": "oci_fetch(${1:statement})$0"
    },
    "oci_fetch_all": {
        "prefix": "oci_fetch_all",
        "body": "oci_fetch_all(${1:statement}, ${2:output})$0"
    },
    "oci_fetch_array": {
        "prefix": "oci_fetch_array",
        "body": "oci_fetch_array(${1:statement})$0"
    },
    "oci_fetch_assoc": {
        "prefix": "oci_fetch_assoc",
        "body": "oci_fetch_assoc(${1:statement})$0"
    },
    "oci_fetch_object": {
        "prefix": "oci_fetch_object",
        "body": "oci_fetch_object(${1:statement})$0"
    },
    "oci_fetch_row": {
        "prefix": "oci_fetch_row",
        "body": "oci_fetch_row(${1:statement})$0"
    },
    "oci_field_is_null": {
        "prefix": "oci_field_is_null",
        "body": "oci_field_is_null(${1:statement}, ${2:field})$0"
    },
    "oci_field_name": {
        "prefix": "oci_field_name",
        "body": "oci_field_name(${1:statement}, ${2:field})$0"
    },
    "oci_field_precision": {
        "prefix": "oci_field_precision",
        "body": "oci_field_precision(${1:statement}, ${2:field})$0"
    },
    "oci_field_scale": {
        "prefix": "oci_field_scale",
        "body": "oci_field_scale(${1:statement}, ${2:field})$0"
    },
    "oci_field_size": {
        "prefix": "oci_field_size",
        "body": "oci_field_size(${1:statement}, ${2:field})$0"
    },
    "oci_field_type": {
        "prefix": "oci_field_type",
        "body": "oci_field_type(${1:statement}, ${2:field})$0"
    },
    "oci_field_type_raw": {
        "prefix": "oci_field_type_raw",
        "body": "oci_field_type_raw(${1:statement}, ${2:field})$0"
    },
    "oci_free_statement": {
        "prefix": "oci_free_statement",
        "body": "oci_free_statement(${1:statement})$0"
    },
    "oci_internal_debug": {
        "prefix": "oci_internal_debug",
        "body": "oci_internal_debug(${1:onoff})$0"
    },
    "oci_lob_copy": {
        "prefix": "oci_lob_copy",
        "body": "oci_lob_copy(${1:lob_to}, ${2:lob_from})$0"
    },
    "oci_lob_is_equal": {
        "prefix": "oci_lob_is_equal",
        "body": "oci_lob_is_equal(${1:lob1}, ${2:lob2})$0"
    },
    "oci_new_collection": {
        "prefix": "oci_new_collection",
        "body": "oci_new_collection(${1:connection}, ${2:tdo})$0"
    },
    "oci_new_connect": {
        "prefix": "oci_new_connect",
        "body": "oci_new_connect(${1:username}, ${2:password})$0"
    },
    "oci_new_cursor": {
        "prefix": "oci_new_cursor",
        "body": "oci_new_cursor(${1:connection})$0"
    },
    "oci_new_descriptor": {
        "prefix": "oci_new_descriptor",
        "body": "oci_new_descriptor(${1:connection})$0"
    },
    "oci_num_fields": {
        "prefix": "oci_num_fields",
        "body": "oci_num_fields(${1:statement})$0"
    },
    "oci_num_rows": {
        "prefix": "oci_num_rows",
        "body": "oci_num_rows(${1:statement})$0"
    },
    "oci_parse": {
        "prefix": "oci_parse",
        "body": "oci_parse(${1:connection}, ${2:sql_text})$0"
    },
    "oci_password_change": {
        "prefix": "oci_password_change",
        "body": "oci_password_change(${1:connection}, ${2:username}, ${3:old_password}, ${4:new_password})$0"
    },
    "oci_pconnect": {
        "prefix": "oci_pconnect",
        "body": "oci_pconnect(${1:username}, ${2:password})$0"
    },
    "oci_result": {
        "prefix": "oci_result",
        "body": "oci_result(${1:statement}, ${2:field})$0"
    },
    "oci_rollback": {
        "prefix": "oci_rollback",
        "body": "oci_rollback(${1:connection})$0"
    },
    "oci_server_version": {
        "prefix": "oci_server_version",
        "body": "oci_server_version(${1:connection})$0"
    },
    "oci_set_action": {
        "prefix": "oci_set_action",
        "body": "oci_set_action(${1:connection}, ${2:action_name})$0"
    },
    "oci_set_client_identifier": {
        "prefix": "oci_set_client_identifier",
        "body": "oci_set_client_identifier(${1:connection}, ${2:client_identifier})$0"
    },
    "oci_set_client_info": {
        "prefix": "oci_set_client_info",
        "body": "oci_set_client_info(${1:connection}, ${2:client_info})$0"
    },
    "oci_set_edition": {
        "prefix": "oci_set_edition",
        "body": "oci_set_edition(${1:edition})$0"
    },
    "oci_set_module_name": {
        "prefix": "oci_set_module_name",
        "body": "oci_set_module_name(${1:connection}, ${2:module_name})$0"
    },
    "oci_set_prefetch": {
        "prefix": "oci_set_prefetch",
        "body": "oci_set_prefetch(${1:statement}, ${2:rows})$0"
    },
    "oci_statement_type": {
        "prefix": "oci_statement_type",
        "body": "oci_statement_type(${1:statement})$0"
    },
    "ocibindbyname": {
        "prefix": "ocibindbyname",
        "body": "ocibindbyname()$0"
    },
    "ocicancel": {
        "prefix": "ocicancel",
        "body": "ocicancel()$0"
    },
    "ocicloselob": {
        "prefix": "ocicloselob",
        "body": "ocicloselob()$0"
    },
    "ocicollappend": {
        "prefix": "ocicollappend",
        "body": "ocicollappend()$0"
    },
    "ocicollassign": {
        "prefix": "ocicollassign",
        "body": "ocicollassign()$0"
    },
    "ocicollassignelem": {
        "prefix": "ocicollassignelem",
        "body": "ocicollassignelem()$0"
    },
    "ocicollgetelem": {
        "prefix": "ocicollgetelem",
        "body": "ocicollgetelem()$0"
    },
    "ocicollmax": {
        "prefix": "ocicollmax",
        "body": "ocicollmax()$0"
    },
    "ocicollsize": {
        "prefix": "ocicollsize",
        "body": "ocicollsize()$0"
    },
    "ocicolltrim": {
        "prefix": "ocicolltrim",
        "body": "ocicolltrim()$0"
    },
    "ocicolumnisnull": {
        "prefix": "ocicolumnisnull",
        "body": "ocicolumnisnull()$0"
    },
    "ocicolumnname": {
        "prefix": "ocicolumnname",
        "body": "ocicolumnname()$0"
    },
    "ocicolumnprecision": {
        "prefix": "ocicolumnprecision",
        "body": "ocicolumnprecision()$0"
    },
    "ocicolumnscale": {
        "prefix": "ocicolumnscale",
        "body": "ocicolumnscale()$0"
    },
    "ocicolumnsize": {
        "prefix": "ocicolumnsize",
        "body": "ocicolumnsize()$0"
    },
    "ocicolumntype": {
        "prefix": "ocicolumntype",
        "body": "ocicolumntype()$0"
    },
    "ocicolumntyperaw": {
        "prefix": "ocicolumntyperaw",
        "body": "ocicolumntyperaw()$0"
    },
    "ocicommit": {
        "prefix": "ocicommit",
        "body": "ocicommit()$0"
    },
    "ocidefinebyname": {
        "prefix": "ocidefinebyname",
        "body": "ocidefinebyname()$0"
    },
    "ocierror": {
        "prefix": "ocierror",
        "body": "ocierror()$0"
    },
    "ociexecute": {
        "prefix": "ociexecute",
        "body": "ociexecute()$0"
    },
    "ocifetch": {
        "prefix": "ocifetch",
        "body": "ocifetch()$0"
    },
    "ocifetchinto": {
        "prefix": "ocifetchinto",
        "body": "ocifetchinto(${1:statement}, ${2:result})$0"
    },
    "ocifetchstatement": {
        "prefix": "ocifetchstatement",
        "body": "ocifetchstatement()$0"
    },
    "ocifreecollection": {
        "prefix": "ocifreecollection",
        "body": "ocifreecollection()$0"
    },
    "ocifreecursor": {
        "prefix": "ocifreecursor",
        "body": "ocifreecursor()$0"
    },
    "ocifreedesc": {
        "prefix": "ocifreedesc",
        "body": "ocifreedesc()$0"
    },
    "ocifreestatement": {
        "prefix": "ocifreestatement",
        "body": "ocifreestatement()$0"
    },
    "ociinternaldebug": {
        "prefix": "ociinternaldebug",
        "body": "ociinternaldebug()$0"
    },
    "ociloadlob": {
        "prefix": "ociloadlob",
        "body": "ociloadlob()$0"
    },
    "ocilogoff": {
        "prefix": "ocilogoff",
        "body": "ocilogoff()$0"
    },
    "ocilogon": {
        "prefix": "ocilogon",
        "body": "ocilogon()$0"
    },
    "ocinewcollection": {
        "prefix": "ocinewcollection",
        "body": "ocinewcollection()$0"
    },
    "ocinewcursor": {
        "prefix": "ocinewcursor",
        "body": "ocinewcursor()$0"
    },
    "ocinewdescriptor": {
        "prefix": "ocinewdescriptor",
        "body": "ocinewdescriptor()$0"
    },
    "ocinlogon": {
        "prefix": "ocinlogon",
        "body": "ocinlogon()$0"
    },
    "ocinumcols": {
        "prefix": "ocinumcols",
        "body": "ocinumcols()$0"
    },
    "ociparse": {
        "prefix": "ociparse",
        "body": "ociparse()$0"
    },
    "ociplogon": {
        "prefix": "ociplogon",
        "body": "ociplogon()$0"
    },
    "ociresult": {
        "prefix": "ociresult",
        "body": "ociresult()$0"
    },
    "ocirollback": {
        "prefix": "ocirollback",
        "body": "ocirollback()$0"
    },
    "ocirowcount": {
        "prefix": "ocirowcount",
        "body": "ocirowcount()$0"
    },
    "ocisavelob": {
        "prefix": "ocisavelob",
        "body": "ocisavelob()$0"
    },
    "ocisavelobfile": {
        "prefix": "ocisavelobfile",
        "body": "ocisavelobfile()$0"
    },
    "ociserverversion": {
        "prefix": "ociserverversion",
        "body": "ociserverversion()$0"
    },
    "ocisetprefetch": {
        "prefix": "ocisetprefetch",
        "body": "ocisetprefetch()$0"
    },
    "ocistatementtype": {
        "prefix": "ocistatementtype",
        "body": "ocistatementtype()$0"
    },
    "ociwritelobtofile": {
        "prefix": "ociwritelobtofile",
        "body": "ociwritelobtofile()$0"
    },
    "ociwritetemporarylob": {
        "prefix": "ociwritetemporarylob",
        "body": "ociwritetemporarylob()$0"
    },
    "octdec": {
        "prefix": "octdec",
        "body": "octdec(${1:octal_string})$0"
    },
    "odbc_autocommit": {
        "prefix": "odbc_autocommit",
        "body": "odbc_autocommit(${1:connection_id})$0"
    },
    "odbc_binmode": {
        "prefix": "odbc_binmode",
        "body": "odbc_binmode(${1:result_id}, ${2:mode})$0"
    },
    "odbc_close": {
        "prefix": "odbc_close",
        "body": "odbc_close(${1:connection_id})$0"
    },
    "odbc_close_all": {
        "prefix": "odbc_close_all",
        "body": "odbc_close_all()$0"
    },
    "odbc_columnprivileges": {
        "prefix": "odbc_columnprivileges",
        "body": "odbc_columnprivileges(${1:connection_id}, ${2:qualifier}, ${3:owner}, ${4:table_name}, ${5:column_name})$0"
    },
    "odbc_columns": {
        "prefix": "odbc_columns",
        "body": "odbc_columns(${1:connection_id})$0"
    },
    "odbc_commit": {
        "prefix": "odbc_commit",
        "body": "odbc_commit(${1:connection_id})$0"
    },
    "odbc_connect": {
        "prefix": "odbc_connect",
        "body": "odbc_connect(${1:dsn}, ${2:user}, ${3:password})$0"
    },
    "odbc_cursor": {
        "prefix": "odbc_cursor",
        "body": "odbc_cursor(${1:result_id})$0"
    },
    "odbc_data_source": {
        "prefix": "odbc_data_source",
        "body": "odbc_data_source(${1:connection_id}, ${2:fetch_type})$0"
    },
    "odbc_do": {
        "prefix": "odbc_do",
        "body": "odbc_do()$0"
    },
    "odbc_error": {
        "prefix": "odbc_error",
        "body": "odbc_error()$0"
    },
    "odbc_errormsg": {
        "prefix": "odbc_errormsg",
        "body": "odbc_errormsg()$0"
    },
    "odbc_exec": {
        "prefix": "odbc_exec",
        "body": "odbc_exec(${1:connection_id}, ${2:query_string})$0"
    },
    "odbc_execute": {
        "prefix": "odbc_execute",
        "body": "odbc_execute(${1:result_id})$0"
    },
    "odbc_fetch_array": {
        "prefix": "odbc_fetch_array",
        "body": "odbc_fetch_array(${1:result})$0"
    },
    "odbc_fetch_into": {
        "prefix": "odbc_fetch_into",
        "body": "odbc_fetch_into(${1:result_id}, ${2:result_array})$0"
    },
    "odbc_fetch_object": {
        "prefix": "odbc_fetch_object",
        "body": "odbc_fetch_object(${1:result})$0"
    },
    "odbc_fetch_row": {
        "prefix": "odbc_fetch_row",
        "body": "odbc_fetch_row(${1:result_id})$0"
    },
    "odbc_field_len": {
        "prefix": "odbc_field_len",
        "body": "odbc_field_len(${1:result_id}, ${2:field_number})$0"
    },
    "odbc_field_name": {
        "prefix": "odbc_field_name",
        "body": "odbc_field_name(${1:result_id}, ${2:field_number})$0"
    },
    "odbc_field_num": {
        "prefix": "odbc_field_num",
        "body": "odbc_field_num(${1:result_id}, ${2:field_name})$0"
    },
    "odbc_field_precision": {
        "prefix": "odbc_field_precision",
        "body": "odbc_field_precision()$0"
    },
    "odbc_field_scale": {
        "prefix": "odbc_field_scale",
        "body": "odbc_field_scale(${1:result_id}, ${2:field_number})$0"
    },
    "odbc_field_type": {
        "prefix": "odbc_field_type",
        "body": "odbc_field_type(${1:result_id}, ${2:field_number})$0"
    },
    "odbc_foreignkeys": {
        "prefix": "odbc_foreignkeys",
        "body": "odbc_foreignkeys(${1:connection_id}, ${2:pk_qualifier}, ${3:pk_owner}, ${4:pk_table}, ${5:fk_qualifier}, ${6:fk_owner}, ${7:fk_table})$0"
    },
    "odbc_free_result": {
        "prefix": "odbc_free_result",
        "body": "odbc_free_result(${1:result_id})$0"
    },
    "odbc_gettypeinfo": {
        "prefix": "odbc_gettypeinfo",
        "body": "odbc_gettypeinfo(${1:connection_id})$0"
    },
    "odbc_longreadlen": {
        "prefix": "odbc_longreadlen",
        "body": "odbc_longreadlen(${1:result_id}, ${2:length})$0"
    },
    "odbc_next_result": {
        "prefix": "odbc_next_result",
        "body": "odbc_next_result(${1:result_id})$0"
    },
    "odbc_num_fields": {
        "prefix": "odbc_num_fields",
        "body": "odbc_num_fields(${1:result_id})$0"
    },
    "odbc_num_rows": {
        "prefix": "odbc_num_rows",
        "body": "odbc_num_rows(${1:result_id})$0"
    },
    "odbc_pconnect": {
        "prefix": "odbc_pconnect",
        "body": "odbc_pconnect(${1:dsn}, ${2:user}, ${3:password})$0"
    },
    "odbc_prepare": {
        "prefix": "odbc_prepare",
        "body": "odbc_prepare(${1:connection_id}, ${2:query_string})$0"
    },
    "odbc_primarykeys": {
        "prefix": "odbc_primarykeys",
        "body": "odbc_primarykeys(${1:connection_id}, ${2:qualifier}, ${3:owner}, ${4:table})$0"
    },
    "odbc_procedurecolumns": {
        "prefix": "odbc_procedurecolumns",
        "body": "odbc_procedurecolumns(${1:connection_id})$0"
    },
    "odbc_procedures": {
        "prefix": "odbc_procedures",
        "body": "odbc_procedures(${1:connection_id})$0"
    },
    "odbc_result": {
        "prefix": "odbc_result",
        "body": "odbc_result(${1:result_id}, ${2:field})$0"
    },
    "odbc_result_all": {
        "prefix": "odbc_result_all",
        "body": "odbc_result_all(${1:result_id})$0"
    },
    "odbc_rollback": {
        "prefix": "odbc_rollback",
        "body": "odbc_rollback(${1:connection_id})$0"
    },
    "odbc_setoption": {
        "prefix": "odbc_setoption",
        "body": "odbc_setoption(${1:id}, ${2:function}, ${3:option}, ${4:param})$0"
    },
    "odbc_specialcolumns": {
        "prefix": "odbc_specialcolumns",
        "body": "odbc_specialcolumns(${1:connection_id}, ${2:type}, ${3:qualifier}, ${4:owner}, ${5:table}, ${6:scope}, ${7:nullable})$0"
    },
    "odbc_statistics": {
        "prefix": "odbc_statistics",
        "body": "odbc_statistics(${1:connection_id}, ${2:qualifier}, ${3:owner}, ${4:table_name}, ${5:unique}, ${6:accuracy})$0"
    },
    "odbc_tableprivileges": {
        "prefix": "odbc_tableprivileges",
        "body": "odbc_tableprivileges(${1:connection_id}, ${2:qualifier}, ${3:owner}, ${4:name})$0"
    },
    "odbc_tables": {
        "prefix": "odbc_tables",
        "body": "odbc_tables(${1:connection_id})$0"
    },
    "openal_buffer_create": {
        "prefix": "openal_buffer_create",
        "body": "openal_buffer_create()$0"
    },
    "openal_buffer_data": {
        "prefix": "openal_buffer_data",
        "body": "openal_buffer_data(${1:buffer}, ${2:format}, ${3:data}, ${4:freq})$0"
    },
    "openal_buffer_destroy": {
        "prefix": "openal_buffer_destroy",
        "body": "openal_buffer_destroy(${1:buffer})$0"
    },
    "openal_buffer_get": {
        "prefix": "openal_buffer_get",
        "body": "openal_buffer_get(${1:buffer}, ${2:property})$0"
    },
    "openal_buffer_loadwav": {
        "prefix": "openal_buffer_loadwav",
        "body": "openal_buffer_loadwav(${1:buffer}, ${2:wavfile})$0"
    },
    "openal_context_create": {
        "prefix": "openal_context_create",
        "body": "openal_context_create(${1:device})$0"
    },
    "openal_context_current": {
        "prefix": "openal_context_current",
        "body": "openal_context_current(${1:context})$0"
    },
    "openal_context_destroy": {
        "prefix": "openal_context_destroy",
        "body": "openal_context_destroy(${1:context})$0"
    },
    "openal_context_process": {
        "prefix": "openal_context_process",
        "body": "openal_context_process(${1:context})$0"
    },
    "openal_context_suspend": {
        "prefix": "openal_context_suspend",
        "body": "openal_context_suspend(${1:context})$0"
    },
    "openal_device_close": {
        "prefix": "openal_device_close",
        "body": "openal_device_close(${1:device})$0"
    },
    "openal_device_open": {
        "prefix": "openal_device_open",
        "body": "openal_device_open()$0"
    },
    "openal_listener_get": {
        "prefix": "openal_listener_get",
        "body": "openal_listener_get(${1:property})$0"
    },
    "openal_listener_set": {
        "prefix": "openal_listener_set",
        "body": "openal_listener_set(${1:property}, ${2:setting})$0"
    },
    "openal_source_create": {
        "prefix": "openal_source_create",
        "body": "openal_source_create()$0"
    },
    "openal_source_destroy": {
        "prefix": "openal_source_destroy",
        "body": "openal_source_destroy(${1:source})$0"
    },
    "openal_source_get": {
        "prefix": "openal_source_get",
        "body": "openal_source_get(${1:source}, ${2:property})$0"
    },
    "openal_source_pause": {
        "prefix": "openal_source_pause",
        "body": "openal_source_pause(${1:source})$0"
    },
    "openal_source_play": {
        "prefix": "openal_source_play",
        "body": "openal_source_play(${1:source})$0"
    },
    "openal_source_rewind": {
        "prefix": "openal_source_rewind",
        "body": "openal_source_rewind(${1:source})$0"
    },
    "openal_source_set": {
        "prefix": "openal_source_set",
        "body": "openal_source_set(${1:source}, ${2:property}, ${3:setting})$0"
    },
    "openal_source_stop": {
        "prefix": "openal_source_stop",
        "body": "openal_source_stop(${1:source})$0"
    },
    "openal_stream": {
        "prefix": "openal_stream",
        "body": "openal_stream(${1:source}, ${2:format}, ${3:rate})$0"
    },
    "opendir": {
        "prefix": "opendir",
        "body": "opendir(${1:path})$0"
    },
    "openlog": {
        "prefix": "openlog",
        "body": "openlog(${1:ident}, ${2:option}, ${3:facility})$0"
    },
    "openssl_csr_export": {
        "prefix": "openssl_csr_export",
        "body": "openssl_csr_export(${1:csr}, ${2:out})$0"
    },
    "openssl_csr_export_to_file": {
        "prefix": "openssl_csr_export_to_file",
        "body": "openssl_csr_export_to_file(${1:csr}, ${2:outfilename})$0"
    },
    "openssl_csr_get_public_key": {
        "prefix": "openssl_csr_get_public_key",
        "body": "openssl_csr_get_public_key(${1:csr})$0"
    },
    "openssl_csr_get_subject": {
        "prefix": "openssl_csr_get_subject",
        "body": "openssl_csr_get_subject(${1:csr})$0"
    },
    "openssl_csr_new": {
        "prefix": "openssl_csr_new",
        "body": "openssl_csr_new(${1:dn}, ${2:privkey})$0"
    },
    "openssl_csr_sign": {
        "prefix": "openssl_csr_sign",
        "body": "openssl_csr_sign(${1:csr}, ${2:cacert}, ${3:priv_key}, ${4:days})$0"
    },
    "openssl_decrypt": {
        "prefix": "openssl_decrypt",
        "body": "openssl_decrypt(${1:data}, ${2:method}, ${3:password})$0"
    },
    "openssl_dh_compute_key": {
        "prefix": "openssl_dh_compute_key",
        "body": "openssl_dh_compute_key(${1:pub_key}, ${2:dh_key})$0"
    },
    "openssl_digest": {
        "prefix": "openssl_digest",
        "body": "openssl_digest(${1:data}, ${2:method})$0"
    },
    "openssl_encrypt": {
        "prefix": "openssl_encrypt",
        "body": "openssl_encrypt(${1:data}, ${2:method}, ${3:password})$0"
    },
    "openssl_error_string": {
        "prefix": "openssl_error_string",
        "body": "openssl_error_string()$0"
    },
    "openssl_free_key": {
        "prefix": "openssl_free_key",
        "body": "openssl_free_key(${1:key_identifier})$0"
    },
    "openssl_get_cipher_methods": {
        "prefix": "openssl_get_cipher_methods",
        "body": "openssl_get_cipher_methods()$0"
    },
    "openssl_get_md_methods": {
        "prefix": "openssl_get_md_methods",
        "body": "openssl_get_md_methods()$0"
    },
    "openssl_get_privatekey": {
        "prefix": "openssl_get_privatekey",
        "body": "openssl_get_privatekey()$0"
    },
    "openssl_get_publickey": {
        "prefix": "openssl_get_publickey",
        "body": "openssl_get_publickey()$0"
    },
    "openssl_open": {
        "prefix": "openssl_open",
        "body": "openssl_open(${1:sealed_data}, ${2:open_data}, ${3:env_key}, ${4:priv_key_id})$0"
    },
    "openssl_pkcs12_export": {
        "prefix": "openssl_pkcs12_export",
        "body": "openssl_pkcs12_export(${1:x509}, ${2:out}, ${3:priv_key}, ${4:pass})$0"
    },
    "openssl_pkcs12_export_to_file": {
        "prefix": "openssl_pkcs12_export_to_file",
        "body": "openssl_pkcs12_export_to_file(${1:x509}, ${2:filename}, ${3:priv_key}, ${4:pass})$0"
    },
    "openssl_pkcs12_read": {
        "prefix": "openssl_pkcs12_read",
        "body": "openssl_pkcs12_read(${1:pkcs12}, ${2:certs}, ${3:pass})$0"
    },
    "openssl_pkcs7_decrypt": {
        "prefix": "openssl_pkcs7_decrypt",
        "body": "openssl_pkcs7_decrypt(${1:infilename}, ${2:outfilename}, ${3:recipcert})$0"
    },
    "openssl_pkcs7_encrypt": {
        "prefix": "openssl_pkcs7_encrypt",
        "body": "openssl_pkcs7_encrypt(${1:infile}, ${2:outfile}, ${3:recipcerts}, ${4:headers})$0"
    },
    "openssl_pkcs7_sign": {
        "prefix": "openssl_pkcs7_sign",
        "body": "openssl_pkcs7_sign(${1:infilename}, ${2:outfilename}, ${3:signcert}, ${4:privkey}, ${5:headers})$0"
    },
    "openssl_pkcs7_verify": {
        "prefix": "openssl_pkcs7_verify",
        "body": "openssl_pkcs7_verify(${1:filename}, ${2:flags})$0"
    },
    "openssl_pkey_export": {
        "prefix": "openssl_pkey_export",
        "body": "openssl_pkey_export(${1:key}, ${2:out})$0"
    },
    "openssl_pkey_export_to_file": {
        "prefix": "openssl_pkey_export_to_file",
        "body": "openssl_pkey_export_to_file(${1:key}, ${2:outfilename})$0"
    },
    "openssl_pkey_free": {
        "prefix": "openssl_pkey_free",
        "body": "openssl_pkey_free(${1:key})$0"
    },
    "openssl_pkey_get_details": {
        "prefix": "openssl_pkey_get_details",
        "body": "openssl_pkey_get_details(${1:key})$0"
    },
    "openssl_pkey_get_private": {
        "prefix": "openssl_pkey_get_private",
        "body": "openssl_pkey_get_private(${1:key})$0"
    },
    "openssl_pkey_get_public": {
        "prefix": "openssl_pkey_get_public",
        "body": "openssl_pkey_get_public(${1:certificate})$0"
    },
    "openssl_pkey_new": {
        "prefix": "openssl_pkey_new",
        "body": "openssl_pkey_new()$0"
    },
    "openssl_private_decrypt": {
        "prefix": "openssl_private_decrypt",
        "body": "openssl_private_decrypt(${1:data}, ${2:decrypted}, ${3:key})$0"
    },
    "openssl_private_encrypt": {
        "prefix": "openssl_private_encrypt",
        "body": "openssl_private_encrypt(${1:data}, ${2:crypted}, ${3:key})$0"
    },
    "openssl_public_decrypt": {
        "prefix": "openssl_public_decrypt",
        "body": "openssl_public_decrypt(${1:data}, ${2:decrypted}, ${3:key})$0"
    },
    "openssl_public_encrypt": {
        "prefix": "openssl_public_encrypt",
        "body": "openssl_public_encrypt(${1:data}, ${2:crypted}, ${3:key})$0"
    },
    "openssl_random_pseudo_bytes": {
        "prefix": "openssl_random_pseudo_bytes",
        "body": "openssl_random_pseudo_bytes(${1:length})$0"
    },
    "openssl_seal": {
        "prefix": "openssl_seal",
        "body": "openssl_seal(${1:data}, ${2:sealed_data}, ${3:env_keys}, ${4:pub_key_ids})$0"
    },
    "openssl_sign": {
        "prefix": "openssl_sign",
        "body": "openssl_sign(${1:data}, ${2:signature}, ${3:priv_key_id})$0"
    },
    "openssl_verify": {
        "prefix": "openssl_verify",
        "body": "openssl_verify(${1:data}, ${2:signature}, ${3:pub_key_id})$0"
    },
    "openssl_x509_check_private_key": {
        "prefix": "openssl_x509_check_private_key",
        "body": "openssl_x509_check_private_key(${1:cert}, ${2:key})$0"
    },
    "openssl_x509_checkpurpose": {
        "prefix": "openssl_x509_checkpurpose",
        "body": "openssl_x509_checkpurpose(${1:x509cert}, ${2:purpose})$0"
    },
    "openssl_x509_export": {
        "prefix": "openssl_x509_export",
        "body": "openssl_x509_export(${1:x509}, ${2:output})$0"
    },
    "openssl_x509_export_to_file": {
        "prefix": "openssl_x509_export_to_file",
        "body": "openssl_x509_export_to_file(${1:x509}, ${2:outfilename})$0"
    },
    "openssl_x509_free": {
        "prefix": "openssl_x509_free",
        "body": "openssl_x509_free(${1:x509cert})$0"
    },
    "openssl_x509_parse": {
        "prefix": "openssl_x509_parse",
        "body": "openssl_x509_parse(${1:x509cert})$0"
    },
    "openssl_x509_read": {
        "prefix": "openssl_x509_read",
        "body": "openssl_x509_read(${1:x509certdata})$0"
    },
    "ord": {
        "prefix": "ord",
        "body": "ord(${1:string})$0"
    },
    "output_add_rewrite_var": {
        "prefix": "output_add_rewrite_var",
        "body": "output_add_rewrite_var(${1:name}, ${2:value})$0"
    },
    "output_reset_rewrite_vars": {
        "prefix": "output_reset_rewrite_vars",
        "body": "output_reset_rewrite_vars()$0"
    },
    "overload": {
        "prefix": "overload",
        "body": "overload(${1:class_name})$0"
    },
    "override_function": {
        "prefix": "override_function",
        "body": "override_function(${1:function_name}, ${2:function_args}, ${3:function_code})$0"
    },
    "ovrimos_close": {
        "prefix": "ovrimos_close",
        "body": "ovrimos_close(${1:connection})$0"
    },
    "ovrimos_commit": {
        "prefix": "ovrimos_commit",
        "body": "ovrimos_commit(${1:connection_id})$0"
    },
    "ovrimos_connect": {
        "prefix": "ovrimos_connect",
        "body": "ovrimos_connect(${1:host}, ${2:dborport}, ${3:user}, ${4:password})$0"
    },
    "ovrimos_cursor": {
        "prefix": "ovrimos_cursor",
        "body": "ovrimos_cursor(${1:result_id})$0"
    },
    "ovrimos_exec": {
        "prefix": "ovrimos_exec",
        "body": "ovrimos_exec(${1:connection_id}, ${2:query})$0"
    },
    "ovrimos_execute": {
        "prefix": "ovrimos_execute",
        "body": "ovrimos_execute(${1:result_id})$0"
    },
    "ovrimos_fetch_into": {
        "prefix": "ovrimos_fetch_into",
        "body": "ovrimos_fetch_into(${1:result_id}, ${2:result_array})$0"
    },
    "ovrimos_fetch_row": {
        "prefix": "ovrimos_fetch_row",
        "body": "ovrimos_fetch_row(${1:result_id})$0"
    },
    "ovrimos_field_len": {
        "prefix": "ovrimos_field_len",
        "body": "ovrimos_field_len(${1:result_id}, ${2:field_number})$0"
    },
    "ovrimos_field_name": {
        "prefix": "ovrimos_field_name",
        "body": "ovrimos_field_name(${1:result_id}, ${2:field_number})$0"
    },
    "ovrimos_field_num": {
        "prefix": "ovrimos_field_num",
        "body": "ovrimos_field_num(${1:result_id}, ${2:field_name})$0"
    },
    "ovrimos_field_type": {
        "prefix": "ovrimos_field_type",
        "body": "ovrimos_field_type(${1:result_id}, ${2:field_number})$0"
    },
    "ovrimos_free_result": {
        "prefix": "ovrimos_free_result",
        "body": "ovrimos_free_result(${1:result_id})$0"
    },
    "ovrimos_longreadlen": {
        "prefix": "ovrimos_longreadlen",
        "body": "ovrimos_longreadlen(${1:result_id}, ${2:length})$0"
    },
    "ovrimos_num_fields": {
        "prefix": "ovrimos_num_fields",
        "body": "ovrimos_num_fields(${1:result_id})$0"
    },
    "ovrimos_num_rows": {
        "prefix": "ovrimos_num_rows",
        "body": "ovrimos_num_rows(${1:result_id})$0"
    },
    "ovrimos_prepare": {
        "prefix": "ovrimos_prepare",
        "body": "ovrimos_prepare(${1:connection_id}, ${2:query})$0"
    },
    "ovrimos_result": {
        "prefix": "ovrimos_result",
        "body": "ovrimos_result(${1:result_id}, ${2:field})$0"
    },
    "ovrimos_result_all": {
        "prefix": "ovrimos_result_all",
        "body": "ovrimos_result_all(${1:result_id})$0"
    },
    "ovrimos_rollback": {
        "prefix": "ovrimos_rollback",
        "body": "ovrimos_rollback(${1:connection_id})$0"
    },
    "pack": {
        "prefix": "pack",
        "body": "pack(${1:format})$0"
    },
    "parse_ini_file": {
        "prefix": "parse_ini_file",
        "body": "parse_ini_file(${1:filename})$0"
    },
    "parse_ini_string": {
        "prefix": "parse_ini_string",
        "body": "parse_ini_string(${1:ini})$0"
    },
    "parse_str": {
        "prefix": "parse_str",
        "body": "parse_str(${1:str})$0"
    },
    "parse_url": {
        "prefix": "parse_url",
        "body": "parse_url(${1:url})$0"
    },
    "parsekit_compile_file": {
        "prefix": "parsekit_compile_file",
        "body": "parsekit_compile_file(${1:filename})$0"
    },
    "parsekit_compile_string": {
        "prefix": "parsekit_compile_string",
        "body": "parsekit_compile_string(${1:phpcode})$0"
    },
    "parsekit_func_arginfo": {
        "prefix": "parsekit_func_arginfo",
        "body": "parsekit_func_arginfo(${1:function})$0"
    },
    "passthru": {
        "prefix": "passthru",
        "body": "passthru(${1:command})$0"
    },
    "pathinfo": {
        "prefix": "pathinfo",
        "body": "pathinfo(${1:path})$0"
    },
    "pclose": {
        "prefix": "pclose",
        "body": "pclose(${1:handle})$0"
    },
    "pcntl_alarm": {
        "prefix": "pcntl_alarm",
        "body": "pcntl_alarm(${1:seconds})$0"
    },
    "pcntl_exec": {
        "prefix": "pcntl_exec",
        "body": "pcntl_exec(${1:path})$0"
    },
    "pcntl_fork": {
        "prefix": "pcntl_fork",
        "body": "pcntl_fork()$0"
    },
    "pcntl_getpriority": {
        "prefix": "pcntl_getpriority",
        "body": "pcntl_getpriority()$0"
    },
    "pcntl_setpriority": {
        "prefix": "pcntl_setpriority",
        "body": "pcntl_setpriority(${1:priority})$0"
    },
    "pcntl_signal": {
        "prefix": "pcntl_signal",
        "body": "pcntl_signal(${1:signo}, ${2:handler})$0"
    },
    "pcntl_signal_dispatch": {
        "prefix": "pcntl_signal_dispatch",
        "body": "pcntl_signal_dispatch()$0"
    },
    "pcntl_sigprocmask": {
        "prefix": "pcntl_sigprocmask",
        "body": "pcntl_sigprocmask(${1:how}, ${2:set})$0"
    },
    "pcntl_sigtimedwait": {
        "prefix": "pcntl_sigtimedwait",
        "body": "pcntl_sigtimedwait(${1:set})$0"
    },
    "pcntl_sigwaitinfo": {
        "prefix": "pcntl_sigwaitinfo",
        "body": "pcntl_sigwaitinfo(${1:set})$0"
    },
    "pcntl_wait": {
        "prefix": "pcntl_wait",
        "body": "pcntl_wait(${1:status})$0"
    },
    "pcntl_waitpid": {
        "prefix": "pcntl_waitpid",
        "body": "pcntl_waitpid(${1:pid}, ${2:status})$0"
    },
    "pcntl_wexitstatus": {
        "prefix": "pcntl_wexitstatus",
        "body": "pcntl_wexitstatus(${1:status})$0"
    },
    "pcntl_wifexited": {
        "prefix": "pcntl_wifexited",
        "body": "pcntl_wifexited(${1:status})$0"
    },
    "pcntl_wifsignaled": {
        "prefix": "pcntl_wifsignaled",
        "body": "pcntl_wifsignaled(${1:status})$0"
    },
    "pcntl_wifstopped": {
        "prefix": "pcntl_wifstopped",
        "body": "pcntl_wifstopped(${1:status})$0"
    },
    "pcntl_wstopsig": {
        "prefix": "pcntl_wstopsig",
        "body": "pcntl_wstopsig(${1:status})$0"
    },
    "pcntl_wtermsig": {
        "prefix": "pcntl_wtermsig",
        "body": "pcntl_wtermsig(${1:status})$0"
    },
    "PDF_activate_item": {
        "prefix": "PDF_activate_item",
        "body": "PDF_activate_item(${1:pdfdoc}, ${2:id})$0"
    },
    "PDF_add_annotation": {
        "prefix": "PDF_add_annotation",
        "body": "PDF_add_annotation()$0"
    },
    "PDF_add_bookmark": {
        "prefix": "PDF_add_bookmark",
        "body": "PDF_add_bookmark()$0"
    },
    "PDF_add_launchlink": {
        "prefix": "PDF_add_launchlink",
        "body": "PDF_add_launchlink(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:filename})$0"
    },
    "PDF_add_locallink": {
        "prefix": "PDF_add_locallink",
        "body": "PDF_add_locallink(${1:pdfdoc}, ${2:lowerleftx}, ${3:lowerlefty}, ${4:upperrightx}, ${5:upperrighty}, ${6:page}, ${7:dest})$0"
    },
    "PDF_add_nameddest": {
        "prefix": "PDF_add_nameddest",
        "body": "PDF_add_nameddest(${1:pdfdoc}, ${2:name}, ${3:optlist})$0"
    },
    "PDF_add_note": {
        "prefix": "PDF_add_note",
        "body": "PDF_add_note(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:contents}, ${7:title}, ${8:icon}, ${9:open})$0"
    },
    "PDF_add_outline": {
        "prefix": "PDF_add_outline",
        "body": "PDF_add_outline()$0"
    },
    "PDF_add_pdflink": {
        "prefix": "PDF_add_pdflink",
        "body": "PDF_add_pdflink(${1:pdfdoc}, ${2:bottom_left_x}, ${3:bottom_left_y}, ${4:up_right_x}, ${5:up_right_y}, ${6:filename}, ${7:page}, ${8:dest})$0"
    },
    "PDF_add_table_cell": {
        "prefix": "PDF_add_table_cell",
        "body": "PDF_add_table_cell(${1:pdfdoc}, ${2:table}, ${3:column}, ${4:row}, ${5:text}, ${6:optlist})$0"
    },
    "PDF_add_textflow": {
        "prefix": "PDF_add_textflow",
        "body": "PDF_add_textflow(${1:pdfdoc}, ${2:textflow}, ${3:text}, ${4:optlist})$0"
    },
    "PDF_add_thumbnail": {
        "prefix": "PDF_add_thumbnail",
        "body": "PDF_add_thumbnail(${1:pdfdoc}, ${2:image})$0"
    },
    "PDF_add_weblink": {
        "prefix": "PDF_add_weblink",
        "body": "PDF_add_weblink(${1:pdfdoc}, ${2:lowerleftx}, ${3:lowerlefty}, ${4:upperrightx}, ${5:upperrighty}, ${6:url})$0"
    },
    "PDF_arc": {
        "prefix": "PDF_arc",
        "body": "PDF_arc(${1:p}, ${2:x}, ${3:y}, ${4:r}, ${5:alpha}, ${6:beta})$0"
    },
    "PDF_arcn": {
        "prefix": "PDF_arcn",
        "body": "PDF_arcn(${1:p}, ${2:x}, ${3:y}, ${4:r}, ${5:alpha}, ${6:beta})$0"
    },
    "PDF_attach_file": {
        "prefix": "PDF_attach_file",
        "body": "PDF_attach_file(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:filename}, ${7:description}, ${8:author}, ${9:mimetype}, ${10:icon})$0"
    },
    "PDF_begin_document": {
        "prefix": "PDF_begin_document",
        "body": "PDF_begin_document(${1:pdfdoc}, ${2:filename}, ${3:optlist})$0"
    },
    "PDF_begin_font": {
        "prefix": "PDF_begin_font",
        "body": "PDF_begin_font(${1:pdfdoc}, ${2:filename}, ${3:a}, ${4:b}, ${5:c}, ${6:d}, ${7:e}, ${8:f}, ${9:optlist})$0"
    },
    "PDF_begin_glyph": {
        "prefix": "PDF_begin_glyph",
        "body": "PDF_begin_glyph(${1:pdfdoc}, ${2:glyphname}, ${3:wx}, ${4:llx}, ${5:lly}, ${6:urx}, ${7:ury})$0"
    },
    "PDF_begin_item": {
        "prefix": "PDF_begin_item",
        "body": "PDF_begin_item(${1:pdfdoc}, ${2:tag}, ${3:optlist})$0"
    },
    "PDF_begin_layer": {
        "prefix": "PDF_begin_layer",
        "body": "PDF_begin_layer(${1:pdfdoc}, ${2:layer})$0"
    },
    "PDF_begin_page": {
        "prefix": "PDF_begin_page",
        "body": "PDF_begin_page(${1:pdfdoc}, ${2:width}, ${3:height})$0"
    },
    "PDF_begin_page_ext": {
        "prefix": "PDF_begin_page_ext",
        "body": "PDF_begin_page_ext(${1:pdfdoc}, ${2:width}, ${3:height}, ${4:optlist})$0"
    },
    "PDF_begin_pattern": {
        "prefix": "PDF_begin_pattern",
        "body": "PDF_begin_pattern(${1:pdfdoc}, ${2:width}, ${3:height}, ${4:xstep}, ${5:ystep}, ${6:painttype})$0"
    },
    "PDF_begin_template": {
        "prefix": "PDF_begin_template",
        "body": "PDF_begin_template(${1:pdfdoc}, ${2:width}, ${3:height})$0"
    },
    "PDF_begin_template_ext": {
        "prefix": "PDF_begin_template_ext",
        "body": "PDF_begin_template_ext(${1:pdfdoc}, ${2:width}, ${3:height}, ${4:optlist})$0"
    },
    "PDF_circle": {
        "prefix": "PDF_circle",
        "body": "PDF_circle(${1:pdfdoc}, ${2:x}, ${3:y}, ${4:r})$0"
    },
    "PDF_clip": {
        "prefix": "PDF_clip",
        "body": "PDF_clip(${1:p})$0"
    },
    "PDF_close": {
        "prefix": "PDF_close",
        "body": "PDF_close(${1:p})$0"
    },
    "PDF_close_image": {
        "prefix": "PDF_close_image",
        "body": "PDF_close_image(${1:p}, ${2:image})$0"
    },
    "PDF_close_pdi": {
        "prefix": "PDF_close_pdi",
        "body": "PDF_close_pdi(${1:p}, ${2:doc})$0"
    },
    "PDF_close_pdi_page": {
        "prefix": "PDF_close_pdi_page",
        "body": "PDF_close_pdi_page(${1:p}, ${2:page})$0"
    },
    "PDF_closepath": {
        "prefix": "PDF_closepath",
        "body": "PDF_closepath(${1:p})$0"
    },
    "PDF_closepath_fill_stroke": {
        "prefix": "PDF_closepath_fill_stroke",
        "body": "PDF_closepath_fill_stroke(${1:p})$0"
    },
    "PDF_closepath_stroke": {
        "prefix": "PDF_closepath_stroke",
        "body": "PDF_closepath_stroke(${1:p})$0"
    },
    "PDF_concat": {
        "prefix": "PDF_concat",
        "body": "PDF_concat(${1:p}, ${2:a}, ${3:b}, ${4:c}, ${5:d}, ${6:e}, ${7:f})$0"
    },
    "PDF_continue_text": {
        "prefix": "PDF_continue_text",
        "body": "PDF_continue_text(${1:p}, ${2:text})$0"
    },
    "PDF_create_3dview": {
        "prefix": "PDF_create_3dview",
        "body": "PDF_create_3dview(${1:pdfdoc}, ${2:username}, ${3:optlist})$0"
    },
    "PDF_create_action": {
        "prefix": "PDF_create_action",
        "body": "PDF_create_action(${1:pdfdoc}, ${2:type}, ${3:optlist})$0"
    },
    "PDF_create_annotation": {
        "prefix": "PDF_create_annotation",
        "body": "PDF_create_annotation(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:type}, ${7:optlist})$0"
    },
    "PDF_create_bookmark": {
        "prefix": "PDF_create_bookmark",
        "body": "PDF_create_bookmark(${1:pdfdoc}, ${2:text}, ${3:optlist})$0"
    },
    "PDF_create_field": {
        "prefix": "PDF_create_field",
        "body": "PDF_create_field(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:name}, ${7:type}, ${8:optlist})$0"
    },
    "PDF_create_fieldgroup": {
        "prefix": "PDF_create_fieldgroup",
        "body": "PDF_create_fieldgroup(${1:pdfdoc}, ${2:name}, ${3:optlist})$0"
    },
    "PDF_create_gstate": {
        "prefix": "PDF_create_gstate",
        "body": "PDF_create_gstate(${1:pdfdoc}, ${2:optlist})$0"
    },
    "PDF_create_pvf": {
        "prefix": "PDF_create_pvf",
        "body": "PDF_create_pvf(${1:pdfdoc}, ${2:filename}, ${3:data}, ${4:optlist})$0"
    },
    "PDF_create_textflow": {
        "prefix": "PDF_create_textflow",
        "body": "PDF_create_textflow(${1:pdfdoc}, ${2:text}, ${3:optlist})$0"
    },
    "PDF_curveto": {
        "prefix": "PDF_curveto",
        "body": "PDF_curveto(${1:p}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:x3}, ${7:y3})$0"
    },
    "PDF_define_layer": {
        "prefix": "PDF_define_layer",
        "body": "PDF_define_layer(${1:pdfdoc}, ${2:name}, ${3:optlist})$0"
    },
    "PDF_delete": {
        "prefix": "PDF_delete",
        "body": "PDF_delete(${1:pdfdoc})$0"
    },
    "PDF_delete_pvf": {
        "prefix": "PDF_delete_pvf",
        "body": "PDF_delete_pvf(${1:pdfdoc}, ${2:filename})$0"
    },
    "PDF_delete_table": {
        "prefix": "PDF_delete_table",
        "body": "PDF_delete_table(${1:pdfdoc}, ${2:table}, ${3:optlist})$0"
    },
    "PDF_delete_textflow": {
        "prefix": "PDF_delete_textflow",
        "body": "PDF_delete_textflow(${1:pdfdoc}, ${2:textflow})$0"
    },
    "PDF_encoding_set_char": {
        "prefix": "PDF_encoding_set_char",
        "body": "PDF_encoding_set_char(${1:pdfdoc}, ${2:encoding}, ${3:slot}, ${4:glyphname}, ${5:uv})$0"
    },
    "PDF_end_document": {
        "prefix": "PDF_end_document",
        "body": "PDF_end_document(${1:pdfdoc}, ${2:optlist})$0"
    },
    "PDF_end_font": {
        "prefix": "PDF_end_font",
        "body": "PDF_end_font(${1:pdfdoc})$0"
    },
    "PDF_end_glyph": {
        "prefix": "PDF_end_glyph",
        "body": "PDF_end_glyph(${1:pdfdoc})$0"
    },
    "PDF_end_item": {
        "prefix": "PDF_end_item",
        "body": "PDF_end_item(${1:pdfdoc}, ${2:id})$0"
    },
    "PDF_end_layer": {
        "prefix": "PDF_end_layer",
        "body": "PDF_end_layer(${1:pdfdoc})$0"
    },
    "PDF_end_page": {
        "prefix": "PDF_end_page",
        "body": "PDF_end_page(${1:p})$0"
    },
    "PDF_end_page_ext": {
        "prefix": "PDF_end_page_ext",
        "body": "PDF_end_page_ext(${1:pdfdoc}, ${2:optlist})$0"
    },
    "PDF_end_pattern": {
        "prefix": "PDF_end_pattern",
        "body": "PDF_end_pattern(${1:p})$0"
    },
    "PDF_end_template": {
        "prefix": "PDF_end_template",
        "body": "PDF_end_template(${1:p})$0"
    },
    "PDF_endpath": {
        "prefix": "PDF_endpath",
        "body": "PDF_endpath(${1:p})$0"
    },
    "PDF_fill": {
        "prefix": "PDF_fill",
        "body": "PDF_fill(${1:p})$0"
    },
    "PDF_fill_imageblock": {
        "prefix": "PDF_fill_imageblock",
        "body": "PDF_fill_imageblock(${1:pdfdoc}, ${2:page}, ${3:blockname}, ${4:image}, ${5:optlist})$0"
    },
    "PDF_fill_pdfblock": {
        "prefix": "PDF_fill_pdfblock",
        "body": "PDF_fill_pdfblock(${1:pdfdoc}, ${2:page}, ${3:blockname}, ${4:contents}, ${5:optlist})$0"
    },
    "PDF_fill_stroke": {
        "prefix": "PDF_fill_stroke",
        "body": "PDF_fill_stroke(${1:p})$0"
    },
    "PDF_fill_textblock": {
        "prefix": "PDF_fill_textblock",
        "body": "PDF_fill_textblock(${1:pdfdoc}, ${2:page}, ${3:blockname}, ${4:text}, ${5:optlist})$0"
    },
    "PDF_findfont": {
        "prefix": "PDF_findfont",
        "body": "PDF_findfont(${1:p}, ${2:fontname}, ${3:encoding}, ${4:embed})$0"
    },
    "PDF_fit_image": {
        "prefix": "PDF_fit_image",
        "body": "PDF_fit_image(${1:pdfdoc}, ${2:image}, ${3:x}, ${4:y}, ${5:optlist})$0"
    },
    "PDF_fit_pdi_page": {
        "prefix": "PDF_fit_pdi_page",
        "body": "PDF_fit_pdi_page(${1:pdfdoc}, ${2:page}, ${3:x}, ${4:y}, ${5:optlist})$0"
    },
    "PDF_fit_table": {
        "prefix": "PDF_fit_table",
        "body": "PDF_fit_table(${1:pdfdoc}, ${2:table}, ${3:llx}, ${4:lly}, ${5:urx}, ${6:ury}, ${7:optlist})$0"
    },
    "PDF_fit_textflow": {
        "prefix": "PDF_fit_textflow",
        "body": "PDF_fit_textflow(${1:pdfdoc}, ${2:textflow}, ${3:llx}, ${4:lly}, ${5:urx}, ${6:ury}, ${7:optlist})$0"
    },
    "PDF_fit_textline": {
        "prefix": "PDF_fit_textline",
        "body": "PDF_fit_textline(${1:pdfdoc}, ${2:text}, ${3:x}, ${4:y}, ${5:optlist})$0"
    },
    "PDF_get_apiname": {
        "prefix": "PDF_get_apiname",
        "body": "PDF_get_apiname(${1:pdfdoc})$0"
    },
    "PDF_get_buffer": {
        "prefix": "PDF_get_buffer",
        "body": "PDF_get_buffer(${1:p})$0"
    },
    "PDF_get_errmsg": {
        "prefix": "PDF_get_errmsg",
        "body": "PDF_get_errmsg(${1:pdfdoc})$0"
    },
    "PDF_get_errnum": {
        "prefix": "PDF_get_errnum",
        "body": "PDF_get_errnum(${1:pdfdoc})$0"
    },
    "PDF_get_font": {
        "prefix": "PDF_get_font",
        "body": "PDF_get_font()$0"
    },
    "PDF_get_fontname": {
        "prefix": "PDF_get_fontname",
        "body": "PDF_get_fontname()$0"
    },
    "PDF_get_fontsize": {
        "prefix": "PDF_get_fontsize",
        "body": "PDF_get_fontsize()$0"
    },
    "PDF_get_image_height": {
        "prefix": "PDF_get_image_height",
        "body": "PDF_get_image_height()$0"
    },
    "PDF_get_image_width": {
        "prefix": "PDF_get_image_width",
        "body": "PDF_get_image_width()$0"
    },
    "PDF_get_majorversion": {
        "prefix": "PDF_get_majorversion",
        "body": "PDF_get_majorversion()$0"
    },
    "PDF_get_minorversion": {
        "prefix": "PDF_get_minorversion",
        "body": "PDF_get_minorversion()$0"
    },
    "PDF_get_parameter": {
        "prefix": "PDF_get_parameter",
        "body": "PDF_get_parameter(${1:p}, ${2:key}, ${3:modifier})$0"
    },
    "PDF_get_pdi_parameter": {
        "prefix": "PDF_get_pdi_parameter",
        "body": "PDF_get_pdi_parameter(${1:p}, ${2:key}, ${3:doc}, ${4:page}, ${5:reserved})$0"
    },
    "PDF_get_pdi_value": {
        "prefix": "PDF_get_pdi_value",
        "body": "PDF_get_pdi_value(${1:p}, ${2:key}, ${3:doc}, ${4:page}, ${5:reserved})$0"
    },
    "PDF_get_value": {
        "prefix": "PDF_get_value",
        "body": "PDF_get_value(${1:p}, ${2:key}, ${3:modifier})$0"
    },
    "PDF_info_font": {
        "prefix": "PDF_info_font",
        "body": "PDF_info_font(${1:pdfdoc}, ${2:font}, ${3:keyword}, ${4:optlist})$0"
    },
    "PDF_info_matchbox": {
        "prefix": "PDF_info_matchbox",
        "body": "PDF_info_matchbox(${1:pdfdoc}, ${2:boxname}, ${3:num}, ${4:keyword})$0"
    },
    "PDF_info_table": {
        "prefix": "PDF_info_table",
        "body": "PDF_info_table(${1:pdfdoc}, ${2:table}, ${3:keyword})$0"
    },
    "PDF_info_textflow": {
        "prefix": "PDF_info_textflow",
        "body": "PDF_info_textflow(${1:pdfdoc}, ${2:textflow}, ${3:keyword})$0"
    },
    "PDF_info_textline": {
        "prefix": "PDF_info_textline",
        "body": "PDF_info_textline(${1:pdfdoc}, ${2:text}, ${3:keyword}, ${4:optlist})$0"
    },
    "PDF_initgraphics": {
        "prefix": "PDF_initgraphics",
        "body": "PDF_initgraphics(${1:p})$0"
    },
    "PDF_lineto": {
        "prefix": "PDF_lineto",
        "body": "PDF_lineto(${1:p}, ${2:x}, ${3:y})$0"
    },
    "PDF_load_3ddata": {
        "prefix": "PDF_load_3ddata",
        "body": "PDF_load_3ddata(${1:pdfdoc}, ${2:filename}, ${3:optlist})$0"
    },
    "PDF_load_font": {
        "prefix": "PDF_load_font",
        "body": "PDF_load_font(${1:pdfdoc}, ${2:fontname}, ${3:encoding}, ${4:optlist})$0"
    },
    "PDF_load_iccprofile": {
        "prefix": "PDF_load_iccprofile",
        "body": "PDF_load_iccprofile(${1:pdfdoc}, ${2:profilename}, ${3:optlist})$0"
    },
    "PDF_load_image": {
        "prefix": "PDF_load_image",
        "body": "PDF_load_image(${1:pdfdoc}, ${2:imagetype}, ${3:filename}, ${4:optlist})$0"
    },
    "PDF_makespotcolor": {
        "prefix": "PDF_makespotcolor",
        "body": "PDF_makespotcolor(${1:p}, ${2:spotname})$0"
    },
    "PDF_moveto": {
        "prefix": "PDF_moveto",
        "body": "PDF_moveto(${1:p}, ${2:x}, ${3:y})$0"
    },
    "PDF_new": {
        "prefix": "PDF_new",
        "body": "PDF_new()$0"
    },
    "PDF_open_ccitt": {
        "prefix": "PDF_open_ccitt",
        "body": "PDF_open_ccitt(${1:pdfdoc}, ${2:filename}, ${3:width}, ${4:height}, ${5:BitReverse}, ${6:k}, ${7:Blackls1})$0"
    },
    "PDF_open_file": {
        "prefix": "PDF_open_file",
        "body": "PDF_open_file(${1:p}, ${2:filename})$0"
    },
    "PDF_open_gif": {
        "prefix": "PDF_open_gif",
        "body": "PDF_open_gif()$0"
    },
    "PDF_open_image": {
        "prefix": "PDF_open_image",
        "body": "PDF_open_image(${1:p}, ${2:imagetype}, ${3:source}, ${4:data}, ${5:length}, ${6:width}, ${7:height}, ${8:components}, ${9:bpc}, ${10:params})$0"
    },
    "PDF_open_image_file": {
        "prefix": "PDF_open_image_file",
        "body": "PDF_open_image_file(${1:p}, ${2:imagetype}, ${3:filename}, ${4:stringparam}, ${5:intparam})$0"
    },
    "PDF_open_jpeg": {
        "prefix": "PDF_open_jpeg",
        "body": "PDF_open_jpeg()$0"
    },
    "PDF_open_memory_image": {
        "prefix": "PDF_open_memory_image",
        "body": "PDF_open_memory_image(${1:p}, ${2:image})$0"
    },
    "PDF_open_pdi": {
        "prefix": "PDF_open_pdi",
        "body": "PDF_open_pdi(${1:pdfdoc}, ${2:filename}, ${3:optlist}, ${4:len})$0"
    },
    "PDF_open_pdi_document": {
        "prefix": "PDF_open_pdi_document",
        "body": "PDF_open_pdi_document(${1:p}, ${2:filename}, ${3:optlist})$0"
    },
    "PDF_open_pdi_page": {
        "prefix": "PDF_open_pdi_page",
        "body": "PDF_open_pdi_page(${1:p}, ${2:doc}, ${3:pagenumber}, ${4:optlist})$0"
    },
    "PDF_open_tiff": {
        "prefix": "PDF_open_tiff",
        "body": "PDF_open_tiff()$0"
    },
    "PDF_pcos_get_number": {
        "prefix": "PDF_pcos_get_number",
        "body": "PDF_pcos_get_number(${1:p}, ${2:doc}, ${3:path})$0"
    },
    "PDF_pcos_get_stream": {
        "prefix": "PDF_pcos_get_stream",
        "body": "PDF_pcos_get_stream(${1:p}, ${2:doc}, ${3:optlist}, ${4:path})$0"
    },
    "PDF_pcos_get_string": {
        "prefix": "PDF_pcos_get_string",
        "body": "PDF_pcos_get_string(${1:p}, ${2:doc}, ${3:path})$0"
    },
    "PDF_place_image": {
        "prefix": "PDF_place_image",
        "body": "PDF_place_image(${1:pdfdoc}, ${2:image}, ${3:x}, ${4:y}, ${5:scale})$0"
    },
    "PDF_place_pdi_page": {
        "prefix": "PDF_place_pdi_page",
        "body": "PDF_place_pdi_page(${1:pdfdoc}, ${2:page}, ${3:x}, ${4:y}, ${5:sx}, ${6:sy})$0"
    },
    "PDF_process_pdi": {
        "prefix": "PDF_process_pdi",
        "body": "PDF_process_pdi(${1:pdfdoc}, ${2:doc}, ${3:page}, ${4:optlist})$0"
    },
    "PDF_rect": {
        "prefix": "PDF_rect",
        "body": "PDF_rect(${1:p}, ${2:x}, ${3:y}, ${4:width}, ${5:height})$0"
    },
    "PDF_restore": {
        "prefix": "PDF_restore",
        "body": "PDF_restore(${1:p})$0"
    },
    "PDF_resume_page": {
        "prefix": "PDF_resume_page",
        "body": "PDF_resume_page(${1:pdfdoc}, ${2:optlist})$0"
    },
    "PDF_rotate": {
        "prefix": "PDF_rotate",
        "body": "PDF_rotate(${1:p}, ${2:phi})$0"
    },
    "PDF_save": {
        "prefix": "PDF_save",
        "body": "PDF_save(${1:p})$0"
    },
    "PDF_scale": {
        "prefix": "PDF_scale",
        "body": "PDF_scale(${1:p}, ${2:sx}, ${3:sy})$0"
    },
    "PDF_set_border_color": {
        "prefix": "PDF_set_border_color",
        "body": "PDF_set_border_color(${1:p}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "PDF_set_border_dash": {
        "prefix": "PDF_set_border_dash",
        "body": "PDF_set_border_dash(${1:pdfdoc}, ${2:black}, ${3:white})$0"
    },
    "PDF_set_border_style": {
        "prefix": "PDF_set_border_style",
        "body": "PDF_set_border_style(${1:pdfdoc}, ${2:style}, ${3:width})$0"
    },
    "PDF_set_char_spacing": {
        "prefix": "PDF_set_char_spacing",
        "body": "PDF_set_char_spacing()$0"
    },
    "PDF_set_duration": {
        "prefix": "PDF_set_duration",
        "body": "PDF_set_duration()$0"
    },
    "PDF_set_gstate": {
        "prefix": "PDF_set_gstate",
        "body": "PDF_set_gstate(${1:pdfdoc}, ${2:gstate})$0"
    },
    "PDF_set_horiz_scaling": {
        "prefix": "PDF_set_horiz_scaling",
        "body": "PDF_set_horiz_scaling()$0"
    },
    "PDF_set_info": {
        "prefix": "PDF_set_info",
        "body": "PDF_set_info(${1:p}, ${2:key}, ${3:value})$0"
    },
    "PDF_set_info_author": {
        "prefix": "PDF_set_info_author",
        "body": "PDF_set_info_author()$0"
    },
    "PDF_set_info_creator": {
        "prefix": "PDF_set_info_creator",
        "body": "PDF_set_info_creator()$0"
    },
    "PDF_set_info_keywords": {
        "prefix": "PDF_set_info_keywords",
        "body": "PDF_set_info_keywords()$0"
    },
    "PDF_set_info_subject": {
        "prefix": "PDF_set_info_subject",
        "body": "PDF_set_info_subject()$0"
    },
    "PDF_set_info_title": {
        "prefix": "PDF_set_info_title",
        "body": "PDF_set_info_title()$0"
    },
    "PDF_set_layer_dependency": {
        "prefix": "PDF_set_layer_dependency",
        "body": "PDF_set_layer_dependency(${1:pdfdoc}, ${2:type}, ${3:optlist})$0"
    },
    "PDF_set_leading": {
        "prefix": "PDF_set_leading",
        "body": "PDF_set_leading()$0"
    },
    "PDF_set_parameter": {
        "prefix": "PDF_set_parameter",
        "body": "PDF_set_parameter(${1:p}, ${2:key}, ${3:value})$0"
    },
    "PDF_set_text_matrix": {
        "prefix": "PDF_set_text_matrix",
        "body": "PDF_set_text_matrix()$0"
    },
    "PDF_set_text_pos": {
        "prefix": "PDF_set_text_pos",
        "body": "PDF_set_text_pos(${1:p}, ${2:x}, ${3:y})$0"
    },
    "PDF_set_text_rendering": {
        "prefix": "PDF_set_text_rendering",
        "body": "PDF_set_text_rendering()$0"
    },
    "PDF_set_text_rise": {
        "prefix": "PDF_set_text_rise",
        "body": "PDF_set_text_rise()$0"
    },
    "PDF_set_value": {
        "prefix": "PDF_set_value",
        "body": "PDF_set_value(${1:p}, ${2:key}, ${3:value})$0"
    },
    "PDF_set_word_spacing": {
        "prefix": "PDF_set_word_spacing",
        "body": "PDF_set_word_spacing()$0"
    },
    "PDF_setcolor": {
        "prefix": "PDF_setcolor",
        "body": "PDF_setcolor(${1:p}, ${2:fstype}, ${3:colorspace}, ${4:c1}, ${5:c2}, ${6:c3}, ${7:c4})$0"
    },
    "PDF_setdash": {
        "prefix": "PDF_setdash",
        "body": "PDF_setdash(${1:pdfdoc}, ${2:b}, ${3:w})$0"
    },
    "PDF_setdashpattern": {
        "prefix": "PDF_setdashpattern",
        "body": "PDF_setdashpattern(${1:pdfdoc}, ${2:optlist})$0"
    },
    "PDF_setflat": {
        "prefix": "PDF_setflat",
        "body": "PDF_setflat(${1:pdfdoc}, ${2:flatness})$0"
    },
    "PDF_setfont": {
        "prefix": "PDF_setfont",
        "body": "PDF_setfont(${1:pdfdoc}, ${2:font}, ${3:fontsize})$0"
    },
    "PDF_setgray": {
        "prefix": "PDF_setgray",
        "body": "PDF_setgray(${1:p}, ${2:g})$0"
    },
    "PDF_setgray_fill": {
        "prefix": "PDF_setgray_fill",
        "body": "PDF_setgray_fill(${1:p}, ${2:g})$0"
    },
    "PDF_setgray_stroke": {
        "prefix": "PDF_setgray_stroke",
        "body": "PDF_setgray_stroke(${1:p}, ${2:g})$0"
    },
    "PDF_setlinecap": {
        "prefix": "PDF_setlinecap",
        "body": "PDF_setlinecap(${1:p}, ${2:linecap})$0"
    },
    "PDF_setlinejoin": {
        "prefix": "PDF_setlinejoin",
        "body": "PDF_setlinejoin(${1:p}, ${2:value})$0"
    },
    "PDF_setlinewidth": {
        "prefix": "PDF_setlinewidth",
        "body": "PDF_setlinewidth(${1:p}, ${2:width})$0"
    },
    "PDF_setmatrix": {
        "prefix": "PDF_setmatrix",
        "body": "PDF_setmatrix(${1:p}, ${2:a}, ${3:b}, ${4:c}, ${5:d}, ${6:e}, ${7:f})$0"
    },
    "PDF_setmiterlimit": {
        "prefix": "PDF_setmiterlimit",
        "body": "PDF_setmiterlimit(${1:pdfdoc}, ${2:miter})$0"
    },
    "PDF_setpolydash": {
        "prefix": "PDF_setpolydash",
        "body": "PDF_setpolydash()$0"
    },
    "PDF_setrgbcolor": {
        "prefix": "PDF_setrgbcolor",
        "body": "PDF_setrgbcolor(${1:p}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "PDF_setrgbcolor_fill": {
        "prefix": "PDF_setrgbcolor_fill",
        "body": "PDF_setrgbcolor_fill(${1:p}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "PDF_setrgbcolor_stroke": {
        "prefix": "PDF_setrgbcolor_stroke",
        "body": "PDF_setrgbcolor_stroke(${1:p}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "PDF_shading": {
        "prefix": "PDF_shading",
        "body": "PDF_shading(${1:pdfdoc}, ${2:shtype}, ${3:x0}, ${4:y0}, ${5:x1}, ${6:y1}, ${7:c1}, ${8:c2}, ${9:c3}, ${10:c4}, ${11:optlist})$0"
    },
    "PDF_shading_pattern": {
        "prefix": "PDF_shading_pattern",
        "body": "PDF_shading_pattern(${1:pdfdoc}, ${2:shading}, ${3:optlist})$0"
    },
    "PDF_shfill": {
        "prefix": "PDF_shfill",
        "body": "PDF_shfill(${1:pdfdoc}, ${2:shading})$0"
    },
    "PDF_show": {
        "prefix": "PDF_show",
        "body": "PDF_show(${1:pdfdoc}, ${2:text})$0"
    },
    "PDF_show_boxed": {
        "prefix": "PDF_show_boxed",
        "body": "PDF_show_boxed(${1:p}, ${2:text}, ${3:left}, ${4:top}, ${5:width}, ${6:height}, ${7:mode}, ${8:feature})$0"
    },
    "PDF_show_xy": {
        "prefix": "PDF_show_xy",
        "body": "PDF_show_xy(${1:p}, ${2:text}, ${3:x}, ${4:y})$0"
    },
    "PDF_skew": {
        "prefix": "PDF_skew",
        "body": "PDF_skew(${1:p}, ${2:alpha}, ${3:beta})$0"
    },
    "PDF_stringwidth": {
        "prefix": "PDF_stringwidth",
        "body": "PDF_stringwidth(${1:p}, ${2:text}, ${3:font}, ${4:fontsize})$0"
    },
    "PDF_stroke": {
        "prefix": "PDF_stroke",
        "body": "PDF_stroke(${1:p})$0"
    },
    "PDF_suspend_page": {
        "prefix": "PDF_suspend_page",
        "body": "PDF_suspend_page(${1:pdfdoc}, ${2:optlist})$0"
    },
    "PDF_translate": {
        "prefix": "PDF_translate",
        "body": "PDF_translate(${1:p}, ${2:tx}, ${3:ty})$0"
    },
    "PDF_utf16_to_utf8": {
        "prefix": "PDF_utf16_to_utf8",
        "body": "PDF_utf16_to_utf8(${1:pdfdoc}, ${2:utf16string})$0"
    },
    "PDF_utf32_to_utf16": {
        "prefix": "PDF_utf32_to_utf16",
        "body": "PDF_utf32_to_utf16(${1:pdfdoc}, ${2:utf32string}, ${3:ordering})$0"
    },
    "PDF_utf8_to_utf16": {
        "prefix": "PDF_utf8_to_utf16",
        "body": "PDF_utf8_to_utf16(${1:pdfdoc}, ${2:utf8string}, ${3:ordering})$0"
    },
    "pfsockopen": {
        "prefix": "pfsockopen",
        "body": "pfsockopen(${1:hostname})$0"
    },
    "pg_affected_rows": {
        "prefix": "pg_affected_rows",
        "body": "pg_affected_rows(${1:result})$0"
    },
    "pg_cancel_query": {
        "prefix": "pg_cancel_query",
        "body": "pg_cancel_query(${1:connection})$0"
    },
    "pg_client_encoding": {
        "prefix": "pg_client_encoding",
        "body": "pg_client_encoding()$0"
    },
    "pg_close": {
        "prefix": "pg_close",
        "body": "pg_close()$0"
    },
    "pg_connect": {
        "prefix": "pg_connect",
        "body": "pg_connect(${1:connection_string})$0"
    },
    "pg_connection_busy": {
        "prefix": "pg_connection_busy",
        "body": "pg_connection_busy(${1:connection})$0"
    },
    "pg_connection_reset": {
        "prefix": "pg_connection_reset",
        "body": "pg_connection_reset(${1:connection})$0"
    },
    "pg_connection_status": {
        "prefix": "pg_connection_status",
        "body": "pg_connection_status(${1:connection})$0"
    },
    "pg_convert": {
        "prefix": "pg_convert",
        "body": "pg_convert(${1:connection}, ${2:table_name}, ${3:assoc_array})$0"
    },
    "pg_copy_from": {
        "prefix": "pg_copy_from",
        "body": "pg_copy_from(${1:connection}, ${2:table_name}, ${3:rows})$0"
    },
    "pg_copy_to": {
        "prefix": "pg_copy_to",
        "body": "pg_copy_to(${1:connection}, ${2:table_name})$0"
    },
    "pg_dbname": {
        "prefix": "pg_dbname",
        "body": "pg_dbname()$0"
    },
    "pg_delete": {
        "prefix": "pg_delete",
        "body": "pg_delete(${1:connection}, ${2:table_name}, ${3:assoc_array})$0"
    },
    "pg_end_copy": {
        "prefix": "pg_end_copy",
        "body": "pg_end_copy()$0"
    },
    "pg_escape_bytea": {
        "prefix": "pg_escape_bytea",
        "body": "pg_escape_bytea()$0"
    },
    "pg_escape_string": {
        "prefix": "pg_escape_string",
        "body": "pg_escape_string()$0"
    },
    "pg_execute": {
        "prefix": "pg_execute",
        "body": "pg_execute()$0"
    },
    "pg_fetch_all": {
        "prefix": "pg_fetch_all",
        "body": "pg_fetch_all(${1:result})$0"
    },
    "pg_fetch_all_columns": {
        "prefix": "pg_fetch_all_columns",
        "body": "pg_fetch_all_columns(${1:result})$0"
    },
    "pg_fetch_array": {
        "prefix": "pg_fetch_array",
        "body": "pg_fetch_array(${1:result})$0"
    },
    "pg_fetch_assoc": {
        "prefix": "pg_fetch_assoc",
        "body": "pg_fetch_assoc(${1:result})$0"
    },
    "pg_fetch_object": {
        "prefix": "pg_fetch_object",
        "body": "pg_fetch_object(${1:result})$0"
    },
    "pg_fetch_result": {
        "prefix": "pg_fetch_result",
        "body": "pg_fetch_result(${1:result}, ${2:row}, ${3:field})$0"
    },
    "pg_fetch_row": {
        "prefix": "pg_fetch_row",
        "body": "pg_fetch_row(${1:result})$0"
    },
    "pg_field_is_null": {
        "prefix": "pg_field_is_null",
        "body": "pg_field_is_null(${1:result}, ${2:row}, ${3:field})$0"
    },
    "pg_field_name": {
        "prefix": "pg_field_name",
        "body": "pg_field_name(${1:result}, ${2:field_number})$0"
    },
    "pg_field_num": {
        "prefix": "pg_field_num",
        "body": "pg_field_num(${1:result}, ${2:field_name})$0"
    },
    "pg_field_prtlen": {
        "prefix": "pg_field_prtlen",
        "body": "pg_field_prtlen(${1:result}, ${2:row_number}, ${3:field_name_or_number})$0"
    },
    "pg_field_size": {
        "prefix": "pg_field_size",
        "body": "pg_field_size(${1:result}, ${2:field_number})$0"
    },
    "pg_field_table": {
        "prefix": "pg_field_table",
        "body": "pg_field_table(${1:result}, ${2:field_number})$0"
    },
    "pg_field_type": {
        "prefix": "pg_field_type",
        "body": "pg_field_type(${1:result}, ${2:field_number})$0"
    },
    "pg_field_type_oid": {
        "prefix": "pg_field_type_oid",
        "body": "pg_field_type_oid(${1:result}, ${2:field_number})$0"
    },
    "pg_free_result": {
        "prefix": "pg_free_result",
        "body": "pg_free_result(${1:result})$0"
    },
    "pg_get_notify": {
        "prefix": "pg_get_notify",
        "body": "pg_get_notify(${1:connection})$0"
    },
    "pg_get_pid": {
        "prefix": "pg_get_pid",
        "body": "pg_get_pid(${1:connection})$0"
    },
    "pg_get_result": {
        "prefix": "pg_get_result",
        "body": "pg_get_result()$0"
    },
    "pg_host": {
        "prefix": "pg_host",
        "body": "pg_host()$0"
    },
    "pg_insert": {
        "prefix": "pg_insert",
        "body": "pg_insert(${1:connection}, ${2:table_name}, ${3:assoc_array})$0"
    },
    "pg_last_error": {
        "prefix": "pg_last_error",
        "body": "pg_last_error()$0"
    },
    "pg_last_notice": {
        "prefix": "pg_last_notice",
        "body": "pg_last_notice(${1:connection})$0"
    },
    "pg_last_oid": {
        "prefix": "pg_last_oid",
        "body": "pg_last_oid(${1:result})$0"
    },
    "pg_lo_close": {
        "prefix": "pg_lo_close",
        "body": "pg_lo_close(${1:large_object})$0"
    },
    "pg_lo_create": {
        "prefix": "pg_lo_create",
        "body": "pg_lo_create()$0"
    },
    "pg_lo_export": {
        "prefix": "pg_lo_export",
        "body": "pg_lo_export()$0"
    },
    "pg_lo_import": {
        "prefix": "pg_lo_import",
        "body": "pg_lo_import()$0"
    },
    "pg_lo_open": {
        "prefix": "pg_lo_open",
        "body": "pg_lo_open(${1:connection}, ${2:oid}, ${3:mode})$0"
    },
    "pg_lo_read": {
        "prefix": "pg_lo_read",
        "body": "pg_lo_read(${1:large_object})$0"
    },
    "pg_lo_read_all": {
        "prefix": "pg_lo_read_all",
        "body": "pg_lo_read_all(${1:large_object})$0"
    },
    "pg_lo_seek": {
        "prefix": "pg_lo_seek",
        "body": "pg_lo_seek(${1:large_object}, ${2:offset})$0"
    },
    "pg_lo_tell": {
        "prefix": "pg_lo_tell",
        "body": "pg_lo_tell(${1:large_object})$0"
    },
    "pg_lo_unlink": {
        "prefix": "pg_lo_unlink",
        "body": "pg_lo_unlink(${1:connection}, ${2:oid})$0"
    },
    "pg_lo_write": {
        "prefix": "pg_lo_write",
        "body": "pg_lo_write(${1:large_object}, ${2:data})$0"
    },
    "pg_meta_data": {
        "prefix": "pg_meta_data",
        "body": "pg_meta_data(${1:connection}, ${2:table_name})$0"
    },
    "pg_num_fields": {
        "prefix": "pg_num_fields",
        "body": "pg_num_fields(${1:result})$0"
    },
    "pg_num_rows": {
        "prefix": "pg_num_rows",
        "body": "pg_num_rows(${1:result})$0"
    },
    "pg_options": {
        "prefix": "pg_options",
        "body": "pg_options()$0"
    },
    "pg_parameter_status": {
        "prefix": "pg_parameter_status",
        "body": "pg_parameter_status()$0"
    },
    "pg_pconnect": {
        "prefix": "pg_pconnect",
        "body": "pg_pconnect(${1:connection_string})$0"
    },
    "pg_ping": {
        "prefix": "pg_ping",
        "body": "pg_ping()$0"
    },
    "pg_port": {
        "prefix": "pg_port",
        "body": "pg_port()$0"
    },
    "pg_prepare": {
        "prefix": "pg_prepare",
        "body": "pg_prepare()$0"
    },
    "pg_put_line": {
        "prefix": "pg_put_line",
        "body": "pg_put_line()$0"
    },
    "pg_query": {
        "prefix": "pg_query",
        "body": "pg_query()$0"
    },
    "pg_query_params": {
        "prefix": "pg_query_params",
        "body": "pg_query_params()$0"
    },
    "pg_result_error": {
        "prefix": "pg_result_error",
        "body": "pg_result_error(${1:result})$0"
    },
    "pg_result_error_field": {
        "prefix": "pg_result_error_field",
        "body": "pg_result_error_field(${1:result}, ${2:fieldcode})$0"
    },
    "pg_result_seek": {
        "prefix": "pg_result_seek",
        "body": "pg_result_seek(${1:result}, ${2:offset})$0"
    },
    "pg_result_status": {
        "prefix": "pg_result_status",
        "body": "pg_result_status(${1:result})$0"
    },
    "pg_select": {
        "prefix": "pg_select",
        "body": "pg_select(${1:connection}, ${2:table_name}, ${3:assoc_array})$0"
    },
    "pg_send_execute": {
        "prefix": "pg_send_execute",
        "body": "pg_send_execute(${1:connection}, ${2:stmtname}, ${3:params})$0"
    },
    "pg_send_prepare": {
        "prefix": "pg_send_prepare",
        "body": "pg_send_prepare(${1:connection}, ${2:stmtname}, ${3:query})$0"
    },
    "pg_send_query": {
        "prefix": "pg_send_query",
        "body": "pg_send_query(${1:connection}, ${2:query})$0"
    },
    "pg_send_query_params": {
        "prefix": "pg_send_query_params",
        "body": "pg_send_query_params(${1:connection}, ${2:query}, ${3:params})$0"
    },
    "pg_set_client_encoding": {
        "prefix": "pg_set_client_encoding",
        "body": "pg_set_client_encoding()$0"
    },
    "pg_set_error_verbosity": {
        "prefix": "pg_set_error_verbosity",
        "body": "pg_set_error_verbosity()$0"
    },
    "pg_trace": {
        "prefix": "pg_trace",
        "body": "pg_trace(${1:pathname})$0"
    },
    "pg_transaction_status": {
        "prefix": "pg_transaction_status",
        "body": "pg_transaction_status(${1:connection})$0"
    },
    "pg_tty": {
        "prefix": "pg_tty",
        "body": "pg_tty()$0"
    },
    "pg_unescape_bytea": {
        "prefix": "pg_unescape_bytea",
        "body": "pg_unescape_bytea(${1:data})$0"
    },
    "pg_untrace": {
        "prefix": "pg_untrace",
        "body": "pg_untrace()$0"
    },
    "pg_update": {
        "prefix": "pg_update",
        "body": "pg_update(${1:connection}, ${2:table_name}, ${3:data}, ${4:condition})$0"
    },
    "pg_version": {
        "prefix": "pg_version",
        "body": "pg_version()$0"
    },
    "php_check_syntax": {
        "prefix": "php_check_syntax",
        "body": "php_check_syntax(${1:filename})$0"
    },
    "php_ini_loaded_file": {
        "prefix": "php_ini_loaded_file",
        "body": "php_ini_loaded_file()$0"
    },
    "php_ini_scanned_files": {
        "prefix": "php_ini_scanned_files",
        "body": "php_ini_scanned_files()$0"
    },
    "php_logo_guid": {
        "prefix": "php_logo_guid",
        "body": "php_logo_guid()$0"
    },
    "php_sapi_name": {
        "prefix": "php_sapi_name",
        "body": "php_sapi_name()$0"
    },
    "php_strip_whitespace": {
        "prefix": "php_strip_whitespace",
        "body": "php_strip_whitespace(${1:filename})$0"
    },
    "php_uname": {
        "prefix": "php_uname",
        "body": "php_uname()$0"
    },
    "phpcredits": {
        "prefix": "phpcredits",
        "body": "phpcredits()$0"
    },
    "phpinfo": {
        "prefix": "phpinfo",
        "body": "phpinfo()$0"
    },
    "phpversion": {
        "prefix": "phpversion",
        "body": "phpversion()$0"
    },
    "pi": {
        "prefix": "pi",
        "body": "pi()$0"
    },
    "png2wbmp": {
        "prefix": "png2wbmp",
        "body": "png2wbmp(${1:pngname}, ${2:wbmpname}, ${3:dest_height}, ${4:dest_width}, ${5:threshold})$0"
    },
    "popen": {
        "prefix": "popen",
        "body": "popen(${1:command}, ${2:mode})$0"
    },
    "pos": {
        "prefix": "pos",
        "body": "pos()$0"
    },
    "posix_access": {
        "prefix": "posix_access",
        "body": "posix_access(${1:file})$0"
    },
    "posix_ctermid": {
        "prefix": "posix_ctermid",
        "body": "posix_ctermid()$0"
    },
    "posix_errno": {
        "prefix": "posix_errno",
        "body": "posix_errno()$0"
    },
    "posix_get_last_error": {
        "prefix": "posix_get_last_error",
        "body": "posix_get_last_error()$0"
    },
    "posix_getcwd": {
        "prefix": "posix_getcwd",
        "body": "posix_getcwd()$0"
    },
    "posix_getegid": {
        "prefix": "posix_getegid",
        "body": "posix_getegid()$0"
    },
    "posix_geteuid": {
        "prefix": "posix_geteuid",
        "body": "posix_geteuid()$0"
    },
    "posix_getgid": {
        "prefix": "posix_getgid",
        "body": "posix_getgid()$0"
    },
    "posix_getgrgid": {
        "prefix": "posix_getgrgid",
        "body": "posix_getgrgid(${1:gid})$0"
    },
    "posix_getgrnam": {
        "prefix": "posix_getgrnam",
        "body": "posix_getgrnam(${1:name})$0"
    },
    "posix_getgroups": {
        "prefix": "posix_getgroups",
        "body": "posix_getgroups()$0"
    },
    "posix_getlogin": {
        "prefix": "posix_getlogin",
        "body": "posix_getlogin()$0"
    },
    "posix_getpgid": {
        "prefix": "posix_getpgid",
        "body": "posix_getpgid(${1:pid})$0"
    },
    "posix_getpgrp": {
        "prefix": "posix_getpgrp",
        "body": "posix_getpgrp()$0"
    },
    "posix_getpid": {
        "prefix": "posix_getpid",
        "body": "posix_getpid()$0"
    },
    "posix_getppid": {
        "prefix": "posix_getppid",
        "body": "posix_getppid()$0"
    },
    "posix_getpwnam": {
        "prefix": "posix_getpwnam",
        "body": "posix_getpwnam(${1:username})$0"
    },
    "posix_getpwuid": {
        "prefix": "posix_getpwuid",
        "body": "posix_getpwuid(${1:uid})$0"
    },
    "posix_getrlimit": {
        "prefix": "posix_getrlimit",
        "body": "posix_getrlimit()$0"
    },
    "posix_getsid": {
        "prefix": "posix_getsid",
        "body": "posix_getsid(${1:pid})$0"
    },
    "posix_getuid": {
        "prefix": "posix_getuid",
        "body": "posix_getuid()$0"
    },
    "posix_initgroups": {
        "prefix": "posix_initgroups",
        "body": "posix_initgroups(${1:name}, ${2:base_group_id})$0"
    },
    "posix_isatty": {
        "prefix": "posix_isatty",
        "body": "posix_isatty(${1:fd})$0"
    },
    "posix_kill": {
        "prefix": "posix_kill",
        "body": "posix_kill(${1:pid}, ${2:sig})$0"
    },
    "posix_mkfifo": {
        "prefix": "posix_mkfifo",
        "body": "posix_mkfifo(${1:pathname}, ${2:mode})$0"
    },
    "posix_mknod": {
        "prefix": "posix_mknod",
        "body": "posix_mknod(${1:pathname}, ${2:mode})$0"
    },
    "posix_setegid": {
        "prefix": "posix_setegid",
        "body": "posix_setegid(${1:gid})$0"
    },
    "posix_seteuid": {
        "prefix": "posix_seteuid",
        "body": "posix_seteuid(${1:uid})$0"
    },
    "posix_setgid": {
        "prefix": "posix_setgid",
        "body": "posix_setgid(${1:gid})$0"
    },
    "posix_setpgid": {
        "prefix": "posix_setpgid",
        "body": "posix_setpgid(${1:pid}, ${2:pgid})$0"
    },
    "posix_setsid": {
        "prefix": "posix_setsid",
        "body": "posix_setsid()$0"
    },
    "posix_setuid": {
        "prefix": "posix_setuid",
        "body": "posix_setuid(${1:uid})$0"
    },
    "posix_strerror": {
        "prefix": "posix_strerror",
        "body": "posix_strerror(${1:errno})$0"
    },
    "posix_times": {
        "prefix": "posix_times",
        "body": "posix_times()$0"
    },
    "posix_ttyname": {
        "prefix": "posix_ttyname",
        "body": "posix_ttyname(${1:fd})$0"
    },
    "posix_uname": {
        "prefix": "posix_uname",
        "body": "posix_uname()$0"
    },
    "pow": {
        "prefix": "pow",
        "body": "pow(${1:base}, ${2:exp})$0"
    },
    "preg_filter": {
        "prefix": "preg_filter",
        "body": "preg_filter(${1:pattern}, ${2:replacement}, ${3:subject})$0"
    },
    "preg_grep": {
        "prefix": "preg_grep",
        "body": "preg_grep(${1:pattern}, ${2:input})$0"
    },
    "preg_last_error": {
        "prefix": "preg_last_error",
        "body": "preg_last_error()$0"
    },
    "preg_match": {
        "prefix": "preg_match",
        "body": "preg_match(${1:pattern}, ${2:subject})$0"
    },
    "preg_match_all": {
        "prefix": "preg_match_all",
        "body": "preg_match_all(${1:pattern}, ${2:subject}, ${3:matches})$0"
    },
    "preg_quote": {
        "prefix": "preg_quote",
        "body": "preg_quote(${1:str})$0"
    },
    "preg_replace": {
        "prefix": "preg_replace",
        "body": "preg_replace(${1:pattern}, ${2:replacement}, ${3:subject})$0"
    },
    "preg_replace_callback": {
        "prefix": "preg_replace_callback",
        "body": "preg_replace_callback(${1:pattern}, ${2:callback}, ${3:subject})$0"
    },
    "preg_replace_callback_array": {
        "prefix": "preg_replace_callback_array",
        "body": "preg_replace_callback_array(${1:patterns_and_callbacks}, ${2:subject})$0"
    },
    "preg_split": {
        "prefix": "preg_split",
        "body": "preg_split(${1:pattern}, ${2:subject})$0"
    },
    "prev": {
        "prefix": "prev",
        "body": "prev(${1:array})$0"
    },
    "print": {
        "prefix": "print",
        "body": "cetak(${1:arg})$0"
    },
    "print_r": {
        "prefix": "print_r",
        "body": "cetak_rekursif(${1:expression})$0"
    },
    "cetak_rekursif": {
        "prefix": "cetak_rekursif",
        "body": "cetak_rekursif(${1:expression})$0"
    },
    "printer_abort": {
        "prefix": "printer_abort",
        "body": "printer_abort(${1:printer_handle})$0"
    },
    "printer_close": {
        "prefix": "printer_close",
        "body": "printer_close(${1:printer_handle})$0"
    },
    "printer_create_brush": {
        "prefix": "printer_create_brush",
        "body": "printer_create_brush(${1:style}, ${2:color})$0"
    },
    "printer_create_dc": {
        "prefix": "printer_create_dc",
        "body": "printer_create_dc(${1:printer_handle})$0"
    },
    "printer_create_font": {
        "prefix": "printer_create_font",
        "body": "printer_create_font(${1:face}, ${2:height}, ${3:width}, ${4:font_weight}, ${5:italic}, ${6:underline}, ${7:strikeout}, ${8:orientation})$0"
    },
    "printer_create_pen": {
        "prefix": "printer_create_pen",
        "body": "printer_create_pen(${1:style}, ${2:width}, ${3:color})$0"
    },
    "printer_delete_brush": {
        "prefix": "printer_delete_brush",
        "body": "printer_delete_brush(${1:brush_handle})$0"
    },
    "printer_delete_dc": {
        "prefix": "printer_delete_dc",
        "body": "printer_delete_dc(${1:printer_handle})$0"
    },
    "printer_delete_font": {
        "prefix": "printer_delete_font",
        "body": "printer_delete_font(${1:font_handle})$0"
    },
    "printer_delete_pen": {
        "prefix": "printer_delete_pen",
        "body": "printer_delete_pen(${1:pen_handle})$0"
    },
    "printer_draw_bmp": {
        "prefix": "printer_draw_bmp",
        "body": "printer_draw_bmp(${1:printer_handle}, ${2:filename}, ${3:x}, ${4:y})$0"
    },
    "printer_draw_chord": {
        "prefix": "printer_draw_chord",
        "body": "printer_draw_chord(${1:printer_handle}, ${2:rec_x}, ${3:rec_y}, ${4:rec_x1}, ${5:rec_y1}, ${6:rad_x}, ${7:rad_y}, ${8:rad_x1}, ${9:rad_y1})$0"
    },
    "printer_draw_elipse": {
        "prefix": "printer_draw_elipse",
        "body": "printer_draw_elipse(${1:printer_handle}, ${2:ul_x}, ${3:ul_y}, ${4:lr_x}, ${5:lr_y})$0"
    },
    "printer_draw_line": {
        "prefix": "printer_draw_line",
        "body": "printer_draw_line(${1:printer_handle}, ${2:from_x}, ${3:from_y}, ${4:to_x}, ${5:to_y})$0"
    },
    "printer_draw_pie": {
        "prefix": "printer_draw_pie",
        "body": "printer_draw_pie(${1:printer_handle}, ${2:rec_x}, ${3:rec_y}, ${4:rec_x1}, ${5:rec_y1}, ${6:rad1_x}, ${7:rad1_y}, ${8:rad2_x}, ${9:rad2_y})$0"
    },
    "printer_draw_rectangle": {
        "prefix": "printer_draw_rectangle",
        "body": "printer_draw_rectangle(${1:printer_handle}, ${2:ul_x}, ${3:ul_y}, ${4:lr_x}, ${5:lr_y})$0"
    },
    "printer_draw_roundrect": {
        "prefix": "printer_draw_roundrect",
        "body": "printer_draw_roundrect(${1:printer_handle}, ${2:ul_x}, ${3:ul_y}, ${4:lr_x}, ${5:lr_y}, ${6:width}, ${7:height})$0"
    },
    "printer_draw_text": {
        "prefix": "printer_draw_text",
        "body": "printer_draw_text(${1:printer_handle}, ${2:text}, ${3:x}, ${4:y})$0"
    },
    "printer_end_doc": {
        "prefix": "printer_end_doc",
        "body": "printer_end_doc(${1:printer_handle})$0"
    },
    "printer_end_page": {
        "prefix": "printer_end_page",
        "body": "printer_end_page(${1:printer_handle})$0"
    },
    "printer_get_option": {
        "prefix": "printer_get_option",
        "body": "printer_get_option(${1:printer_handle}, ${2:option})$0"
    },
    "printer_list": {
        "prefix": "printer_list",
        "body": "printer_list(${1:enumtype})$0"
    },
    "printer_logical_fontheight": {
        "prefix": "printer_logical_fontheight",
        "body": "printer_logical_fontheight(${1:printer_handle}, ${2:height})$0"
    },
    "printer_open": {
        "prefix": "printer_open",
        "body": "printer_open()$0"
    },
    "printer_select_brush": {
        "prefix": "printer_select_brush",
        "body": "printer_select_brush(${1:printer_handle}, ${2:brush_handle})$0"
    },
    "printer_select_font": {
        "prefix": "printer_select_font",
        "body": "printer_select_font(${1:printer_handle}, ${2:font_handle})$0"
    },
    "printer_select_pen": {
        "prefix": "printer_select_pen",
        "body": "printer_select_pen(${1:printer_handle}, ${2:pen_handle})$0"
    },
    "printer_set_option": {
        "prefix": "printer_set_option",
        "body": "printer_set_option(${1:printer_handle}, ${2:option}, ${3:value})$0"
    },
    "printer_start_doc": {
        "prefix": "printer_start_doc",
        "body": "printer_start_doc(${1:printer_handle})$0"
    },
    "printer_start_page": {
        "prefix": "printer_start_page",
        "body": "printer_start_page(${1:printer_handle})$0"
    },
    "printer_write": {
        "prefix": "printer_write",
        "body": "printer_write(${1:printer_handle}, ${2:content})$0"
    },
    "printf": {
        "prefix": "printf",
        "body": "printf(${1:format})$0"
    },
    "proc_close": {
        "prefix": "proc_close",
        "body": "proc_close(${1:process})$0"
    },
    "proc_get_status": {
        "prefix": "proc_get_status",
        "body": "proc_get_status(${1:process})$0"
    },
    "proc_nice": {
        "prefix": "proc_nice",
        "body": "proc_nice(${1:increment})$0"
    },
    "proc_open": {
        "prefix": "proc_open",
        "body": "proc_open(${1:cmd}, ${2:descriptorspec}, ${3:pipes})$0"
    },
    "proc_terminate": {
        "prefix": "proc_terminate",
        "body": "proc_terminate(${1:process})$0"
    },
    "property_exists": {
        "prefix": "property_exists",
        "body": "property_exists(${1:class}, ${2:property})$0"
    },
    "ps_add_bookmark": {
        "prefix": "ps_add_bookmark",
        "body": "ps_add_bookmark(${1:psdoc}, ${2:text})$0"
    },
    "ps_add_launchlink": {
        "prefix": "ps_add_launchlink",
        "body": "ps_add_launchlink(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:filename})$0"
    },
    "ps_add_locallink": {
        "prefix": "ps_add_locallink",
        "body": "ps_add_locallink(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:page}, ${7:dest})$0"
    },
    "ps_add_note": {
        "prefix": "ps_add_note",
        "body": "ps_add_note(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:contents}, ${7:title}, ${8:icon}, ${9:open})$0"
    },
    "ps_add_pdflink": {
        "prefix": "ps_add_pdflink",
        "body": "ps_add_pdflink(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:filename}, ${7:page}, ${8:dest})$0"
    },
    "ps_add_weblink": {
        "prefix": "ps_add_weblink",
        "body": "ps_add_weblink(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:url})$0"
    },
    "ps_arc": {
        "prefix": "ps_arc",
        "body": "ps_arc(${1:psdoc}, ${2:x}, ${3:y}, ${4:radius}, ${5:alpha}, ${6:beta})$0"
    },
    "ps_arcn": {
        "prefix": "ps_arcn",
        "body": "ps_arcn(${1:psdoc}, ${2:x}, ${3:y}, ${4:radius}, ${5:alpha}, ${6:beta})$0"
    },
    "ps_begin_page": {
        "prefix": "ps_begin_page",
        "body": "ps_begin_page(${1:psdoc}, ${2:width}, ${3:height})$0"
    },
    "ps_begin_pattern": {
        "prefix": "ps_begin_pattern",
        "body": "ps_begin_pattern(${1:psdoc}, ${2:width}, ${3:height}, ${4:xstep}, ${5:ystep}, ${6:painttype})$0"
    },
    "ps_begin_template": {
        "prefix": "ps_begin_template",
        "body": "ps_begin_template(${1:psdoc}, ${2:width}, ${3:height})$0"
    },
    "ps_circle": {
        "prefix": "ps_circle",
        "body": "ps_circle(${1:psdoc}, ${2:x}, ${3:y}, ${4:radius})$0"
    },
    "ps_clip": {
        "prefix": "ps_clip",
        "body": "ps_clip(${1:psdoc})$0"
    },
    "ps_close": {
        "prefix": "ps_close",
        "body": "ps_close(${1:psdoc})$0"
    },
    "ps_close_image": {
        "prefix": "ps_close_image",
        "body": "ps_close_image(${1:psdoc}, ${2:imageid})$0"
    },
    "ps_closepath": {
        "prefix": "ps_closepath",
        "body": "ps_closepath(${1:psdoc})$0"
    },
    "ps_closepath_stroke": {
        "prefix": "ps_closepath_stroke",
        "body": "ps_closepath_stroke(${1:psdoc})$0"
    },
    "ps_continue_text": {
        "prefix": "ps_continue_text",
        "body": "ps_continue_text(${1:psdoc}, ${2:text})$0"
    },
    "ps_curveto": {
        "prefix": "ps_curveto",
        "body": "ps_curveto(${1:psdoc}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:x3}, ${7:y3})$0"
    },
    "ps_delete": {
        "prefix": "ps_delete",
        "body": "ps_delete(${1:psdoc})$0"
    },
    "ps_end_page": {
        "prefix": "ps_end_page",
        "body": "ps_end_page(${1:psdoc})$0"
    },
    "ps_end_pattern": {
        "prefix": "ps_end_pattern",
        "body": "ps_end_pattern(${1:psdoc})$0"
    },
    "ps_end_template": {
        "prefix": "ps_end_template",
        "body": "ps_end_template(${1:psdoc})$0"
    },
    "ps_fill": {
        "prefix": "ps_fill",
        "body": "ps_fill(${1:psdoc})$0"
    },
    "ps_fill_stroke": {
        "prefix": "ps_fill_stroke",
        "body": "ps_fill_stroke(${1:psdoc})$0"
    },
    "ps_findfont": {
        "prefix": "ps_findfont",
        "body": "ps_findfont(${1:psdoc}, ${2:fontname}, ${3:encoding})$0"
    },
    "ps_get_buffer": {
        "prefix": "ps_get_buffer",
        "body": "ps_get_buffer(${1:psdoc})$0"
    },
    "ps_get_parameter": {
        "prefix": "ps_get_parameter",
        "body": "ps_get_parameter(${1:psdoc}, ${2:name})$0"
    },
    "ps_get_value": {
        "prefix": "ps_get_value",
        "body": "ps_get_value(${1:psdoc}, ${2:name})$0"
    },
    "ps_hyphenate": {
        "prefix": "ps_hyphenate",
        "body": "ps_hyphenate(${1:psdoc}, ${2:text})$0"
    },
    "ps_include_file": {
        "prefix": "ps_include_file",
        "body": "ps_include_file(${1:psdoc}, ${2:file})$0"
    },
    "ps_lineto": {
        "prefix": "ps_lineto",
        "body": "ps_lineto(${1:psdoc}, ${2:x}, ${3:y})$0"
    },
    "ps_makespotcolor": {
        "prefix": "ps_makespotcolor",
        "body": "ps_makespotcolor(${1:psdoc}, ${2:name})$0"
    },
    "ps_moveto": {
        "prefix": "ps_moveto",
        "body": "ps_moveto(${1:psdoc}, ${2:x}, ${3:y})$0"
    },
    "ps_new": {
        "prefix": "ps_new",
        "body": "ps_new()$0"
    },
    "ps_open_file": {
        "prefix": "ps_open_file",
        "body": "ps_open_file(${1:psdoc})$0"
    },
    "ps_open_image": {
        "prefix": "ps_open_image",
        "body": "ps_open_image(${1:psdoc}, ${2:type}, ${3:source}, ${4:data}, ${5:lenght}, ${6:width}, ${7:height}, ${8:components}, ${9:bpc}, ${10:params})$0"
    },
    "ps_open_image_file": {
        "prefix": "ps_open_image_file",
        "body": "ps_open_image_file(${1:psdoc}, ${2:type}, ${3:filename})$0"
    },
    "ps_open_memory_image": {
        "prefix": "ps_open_memory_image",
        "body": "ps_open_memory_image(${1:psdoc}, ${2:gd})$0"
    },
    "ps_place_image": {
        "prefix": "ps_place_image",
        "body": "ps_place_image(${1:psdoc}, ${2:imageid}, ${3:x}, ${4:y}, ${5:scale})$0"
    },
    "ps_rect": {
        "prefix": "ps_rect",
        "body": "ps_rect(${1:psdoc}, ${2:x}, ${3:y}, ${4:width}, ${5:height})$0"
    },
    "ps_restore": {
        "prefix": "ps_restore",
        "body": "ps_restore(${1:psdoc})$0"
    },
    "ps_rotate": {
        "prefix": "ps_rotate",
        "body": "ps_rotate(${1:psdoc}, ${2:rot})$0"
    },
    "ps_save": {
        "prefix": "ps_save",
        "body": "ps_save(${1:psdoc})$0"
    },
    "ps_scale": {
        "prefix": "ps_scale",
        "body": "ps_scale(${1:psdoc}, ${2:x}, ${3:y})$0"
    },
    "ps_set_border_color": {
        "prefix": "ps_set_border_color",
        "body": "ps_set_border_color(${1:psdoc}, ${2:red}, ${3:green}, ${4:blue})$0"
    },
    "ps_set_border_dash": {
        "prefix": "ps_set_border_dash",
        "body": "ps_set_border_dash(${1:psdoc}, ${2:black}, ${3:white})$0"
    },
    "ps_set_border_style": {
        "prefix": "ps_set_border_style",
        "body": "ps_set_border_style(${1:psdoc}, ${2:style}, ${3:width})$0"
    },
    "ps_set_info": {
        "prefix": "ps_set_info",
        "body": "ps_set_info(${1:p}, ${2:key}, ${3:val})$0"
    },
    "ps_set_parameter": {
        "prefix": "ps_set_parameter",
        "body": "ps_set_parameter(${1:psdoc}, ${2:name}, ${3:value})$0"
    },
    "ps_set_text_pos": {
        "prefix": "ps_set_text_pos",
        "body": "ps_set_text_pos(${1:psdoc}, ${2:x}, ${3:y})$0"
    },
    "ps_set_value": {
        "prefix": "ps_set_value",
        "body": "ps_set_value(${1:psdoc}, ${2:name}, ${3:value})$0"
    },
    "ps_setcolor": {
        "prefix": "ps_setcolor",
        "body": "ps_setcolor(${1:psdoc}, ${2:type}, ${3:colorspace}, ${4:c1}, ${5:c2}, ${6:c3}, ${7:c4})$0"
    },
    "ps_setdash": {
        "prefix": "ps_setdash",
        "body": "ps_setdash(${1:psdoc}, ${2:on}, ${3:off})$0"
    },
    "ps_setflat": {
        "prefix": "ps_setflat",
        "body": "ps_setflat(${1:psdoc}, ${2:value})$0"
    },
    "ps_setfont": {
        "prefix": "ps_setfont",
        "body": "ps_setfont(${1:psdoc}, ${2:fontid}, ${3:size})$0"
    },
    "ps_setgray": {
        "prefix": "ps_setgray",
        "body": "ps_setgray(${1:psdoc}, ${2:gray})$0"
    },
    "ps_setlinecap": {
        "prefix": "ps_setlinecap",
        "body": "ps_setlinecap(${1:psdoc}, ${2:type})$0"
    },
    "ps_setlinejoin": {
        "prefix": "ps_setlinejoin",
        "body": "ps_setlinejoin(${1:psdoc}, ${2:type})$0"
    },
    "ps_setlinewidth": {
        "prefix": "ps_setlinewidth",
        "body": "ps_setlinewidth(${1:psdoc}, ${2:width})$0"
    },
    "ps_setmiterlimit": {
        "prefix": "ps_setmiterlimit",
        "body": "ps_setmiterlimit(${1:psdoc}, ${2:value})$0"
    },
    "ps_setoverprintmode": {
        "prefix": "ps_setoverprintmode",
        "body": "ps_setoverprintmode(${1:psdoc}, ${2:mode})$0"
    },
    "ps_setpolydash": {
        "prefix": "ps_setpolydash",
        "body": "ps_setpolydash(${1:psdoc}, ${2:arr})$0"
    },
    "ps_shading": {
        "prefix": "ps_shading",
        "body": "ps_shading(${1:psdoc}, ${2:type}, ${3:x0}, ${4:y0}, ${5:x1}, ${6:y1}, ${7:c1}, ${8:c2}, ${9:c3}, ${10:c4}, ${11:optlist})$0"
    },
    "ps_shading_pattern": {
        "prefix": "ps_shading_pattern",
        "body": "ps_shading_pattern(${1:psdoc}, ${2:shadingid}, ${3:optlist})$0"
    },
    "ps_shfill": {
        "prefix": "ps_shfill",
        "body": "ps_shfill(${1:psdoc}, ${2:shadingid})$0"
    },
    "ps_show": {
        "prefix": "ps_show",
        "body": "ps_show(${1:psdoc}, ${2:text})$0"
    },
    "ps_show2": {
        "prefix": "ps_show2",
        "body": "ps_show2(${1:psdoc}, ${2:text}, ${3:len})$0"
    },
    "ps_show_boxed": {
        "prefix": "ps_show_boxed",
        "body": "ps_show_boxed(${1:psdoc}, ${2:text}, ${3:left}, ${4:bottom}, ${5:width}, ${6:height}, ${7:hmode})$0"
    },
    "ps_show_xy": {
        "prefix": "ps_show_xy",
        "body": "ps_show_xy(${1:psdoc}, ${2:text}, ${3:x}, ${4:y})$0"
    },
    "ps_show_xy2": {
        "prefix": "ps_show_xy2",
        "body": "ps_show_xy2(${1:psdoc}, ${2:text}, ${3:len}, ${4:xcoor}, ${5:ycoor})$0"
    },
    "ps_string_geometry": {
        "prefix": "ps_string_geometry",
        "body": "ps_string_geometry(${1:psdoc}, ${2:text})$0"
    },
    "ps_stringwidth": {
        "prefix": "ps_stringwidth",
        "body": "ps_stringwidth(${1:psdoc}, ${2:text})$0"
    },
    "ps_stroke": {
        "prefix": "ps_stroke",
        "body": "ps_stroke(${1:psdoc})$0"
    },
    "ps_symbol": {
        "prefix": "ps_symbol",
        "body": "ps_symbol(${1:psdoc}, ${2:ord})$0"
    },
    "ps_symbol_name": {
        "prefix": "ps_symbol_name",
        "body": "ps_symbol_name(${1:psdoc}, ${2:ord})$0"
    },
    "ps_symbol_width": {
        "prefix": "ps_symbol_width",
        "body": "ps_symbol_width(${1:psdoc}, ${2:ord})$0"
    },
    "ps_translate": {
        "prefix": "ps_translate",
        "body": "ps_translate(${1:psdoc}, ${2:x}, ${3:y})$0"
    },
    "pspell_add_to_personal": {
        "prefix": "pspell_add_to_personal",
        "body": "pspell_add_to_personal(${1:dictionary_link}, ${2:word})$0"
    },
    "pspell_add_to_session": {
        "prefix": "pspell_add_to_session",
        "body": "pspell_add_to_session(${1:dictionary_link}, ${2:word})$0"
    },
    "pspell_check": {
        "prefix": "pspell_check",
        "body": "pspell_check(${1:dictionary_link}, ${2:word})$0"
    },
    "pspell_clear_session": {
        "prefix": "pspell_clear_session",
        "body": "pspell_clear_session(${1:dictionary_link})$0"
    },
    "pspell_config_create": {
        "prefix": "pspell_config_create",
        "body": "pspell_config_create(${1:language})$0"
    },
    "pspell_config_data_dir": {
        "prefix": "pspell_config_data_dir",
        "body": "pspell_config_data_dir(${1:conf}, ${2:directory})$0"
    },
    "pspell_config_dict_dir": {
        "prefix": "pspell_config_dict_dir",
        "body": "pspell_config_dict_dir(${1:conf}, ${2:directory})$0"
    },
    "pspell_config_ignore": {
        "prefix": "pspell_config_ignore",
        "body": "pspell_config_ignore(${1:dictionary_link}, ${2:n})$0"
    },
    "pspell_config_mode": {
        "prefix": "pspell_config_mode",
        "body": "pspell_config_mode(${1:dictionary_link}, ${2:mode})$0"
    },
    "pspell_config_personal": {
        "prefix": "pspell_config_personal",
        "body": "pspell_config_personal(${1:dictionary_link}, ${2:file})$0"
    },
    "pspell_config_repl": {
        "prefix": "pspell_config_repl",
        "body": "pspell_config_repl(${1:dictionary_link}, ${2:file})$0"
    },
    "pspell_config_runtogether": {
        "prefix": "pspell_config_runtogether",
        "body": "pspell_config_runtogether(${1:dictionary_link}, ${2:flag})$0"
    },
    "pspell_config_save_repl": {
        "prefix": "pspell_config_save_repl",
        "body": "pspell_config_save_repl(${1:dictionary_link}, ${2:flag})$0"
    },
    "pspell_new": {
        "prefix": "pspell_new",
        "body": "pspell_new(${1:language})$0"
    },
    "pspell_new_config": {
        "prefix": "pspell_new_config",
        "body": "pspell_new_config(${1:config})$0"
    },
    "pspell_new_personal": {
        "prefix": "pspell_new_personal",
        "body": "pspell_new_personal(${1:personal}, ${2:language})$0"
    },
    "pspell_save_wordlist": {
        "prefix": "pspell_save_wordlist",
        "body": "pspell_save_wordlist(${1:dictionary_link})$0"
    },
    "pspell_store_replacement": {
        "prefix": "pspell_store_replacement",
        "body": "pspell_store_replacement(${1:dictionary_link}, ${2:misspelled}, ${3:correct})$0"
    },
    "pspell_suggest": {
        "prefix": "pspell_suggest",
        "body": "pspell_suggest(${1:dictionary_link}, ${2:word})$0"
    },
    "putenv": {
        "prefix": "putenv",
        "body": "putenv(${1:setting})$0"
    },
    "px_close": {
        "prefix": "px_close",
        "body": "px_close(${1:pxdoc})$0"
    },
    "px_create_fp": {
        "prefix": "px_create_fp",
        "body": "px_create_fp(${1:pxdoc}, ${2:file}, ${3:fielddesc})$0"
    },
    "px_date2string": {
        "prefix": "px_date2string",
        "body": "px_date2string(${1:pxdoc}, ${2:value}, ${3:format})$0"
    },
    "px_delete": {
        "prefix": "px_delete",
        "body": "px_delete(${1:pxdoc})$0"
    },
    "px_delete_record": {
        "prefix": "px_delete_record",
        "body": "px_delete_record(${1:pxdoc}, ${2:num})$0"
    },
    "px_get_field": {
        "prefix": "px_get_field",
        "body": "px_get_field(${1:pxdoc}, ${2:fieldno})$0"
    },
    "px_get_info": {
        "prefix": "px_get_info",
        "body": "px_get_info(${1:pxdoc})$0"
    },
    "px_get_parameter": {
        "prefix": "px_get_parameter",
        "body": "px_get_parameter(${1:pxdoc}, ${2:name})$0"
    },
    "px_get_record": {
        "prefix": "px_get_record",
        "body": "px_get_record(${1:pxdoc}, ${2:num})$0"
    },
    "px_get_schema": {
        "prefix": "px_get_schema",
        "body": "px_get_schema(${1:pxdoc})$0"
    },
    "px_get_value": {
        "prefix": "px_get_value",
        "body": "px_get_value(${1:pxdoc}, ${2:name})$0"
    },
    "px_insert_record": {
        "prefix": "px_insert_record",
        "body": "px_insert_record(${1:pxdoc}, ${2:data})$0"
    },
    "px_new": {
        "prefix": "px_new",
        "body": "px_new()$0"
    },
    "px_numfields": {
        "prefix": "px_numfields",
        "body": "px_numfields(${1:pxdoc})$0"
    },
    "px_numrecords": {
        "prefix": "px_numrecords",
        "body": "px_numrecords(${1:pxdoc})$0"
    },
    "px_open_fp": {
        "prefix": "px_open_fp",
        "body": "px_open_fp(${1:pxdoc}, ${2:file})$0"
    },
    "px_put_record": {
        "prefix": "px_put_record",
        "body": "px_put_record(${1:pxdoc}, ${2:record})$0"
    },
    "px_retrieve_record": {
        "prefix": "px_retrieve_record",
        "body": "px_retrieve_record(${1:pxdoc}, ${2:num})$0"
    },
    "px_set_blob_file": {
        "prefix": "px_set_blob_file",
        "body": "px_set_blob_file(${1:pxdoc}, ${2:filename})$0"
    },
    "px_set_parameter": {
        "prefix": "px_set_parameter",
        "body": "px_set_parameter(${1:pxdoc}, ${2:name}, ${3:value})$0"
    },
    "px_set_tablename": {
        "prefix": "px_set_tablename",
        "body": "px_set_tablename(${1:pxdoc}, ${2:name})$0"
    },
    "px_set_targetencoding": {
        "prefix": "px_set_targetencoding",
        "body": "px_set_targetencoding(${1:pxdoc}, ${2:encoding})$0"
    },
    "px_set_value": {
        "prefix": "px_set_value",
        "body": "px_set_value(${1:pxdoc}, ${2:name}, ${3:value})$0"
    },
    "px_timestamp2string": {
        "prefix": "px_timestamp2string",
        "body": "px_timestamp2string(${1:pxdoc}, ${2:value}, ${3:format})$0"
    },
    "px_update_record": {
        "prefix": "px_update_record",
        "body": "px_update_record(${1:pxdoc}, ${2:data}, ${3:num})$0"
    },
    "qdom_error": {
        "prefix": "qdom_error",
        "body": "qdom_error()$0"
    },
    "qdom_tree": {
        "prefix": "qdom_tree",
        "body": "qdom_tree(${1:doc})$0"
    },
    "quoted_printable_decode": {
        "prefix": "quoted_printable_decode",
        "body": "quoted_printable_decode(${1:str})$0"
    },
    "quoted_printable_encode": {
        "prefix": "quoted_printable_encode",
        "body": "quoted_printable_encode(${1:str})$0"
    },
    "quotemeta": {
        "prefix": "quotemeta",
        "body": "quotemeta(${1:str})$0"
    },
    "rad2deg": {
        "prefix": "rad2deg",
        "body": "rad2deg(${1:number})$0"
    },
    "radius_acct_open": {
        "prefix": "radius_acct_open",
        "body": "radius_acct_open()$0"
    },
    "radius_add_server": {
        "prefix": "radius_add_server",
        "body": "radius_add_server(${1:radius_handle}, ${2:hostname}, ${3:port}, ${4:secret}, ${5:timeout}, ${6:max_tries})$0"
    },
    "radius_auth_open": {
        "prefix": "radius_auth_open",
        "body": "radius_auth_open()$0"
    },
    "radius_close": {
        "prefix": "radius_close",
        "body": "radius_close(${1:radius_handle})$0"
    },
    "radius_config": {
        "prefix": "radius_config",
        "body": "radius_config(${1:radius_handle}, ${2:file})$0"
    },
    "radius_create_request": {
        "prefix": "radius_create_request",
        "body": "radius_create_request(${1:radius_handle}, ${2:type})$0"
    },
    "radius_cvt_addr": {
        "prefix": "radius_cvt_addr",
        "body": "radius_cvt_addr(${1:data})$0"
    },
    "radius_cvt_int": {
        "prefix": "radius_cvt_int",
        "body": "radius_cvt_int(${1:data})$0"
    },
    "radius_cvt_string": {
        "prefix": "radius_cvt_string",
        "body": "radius_cvt_string(${1:data})$0"
    },
    "radius_demangle": {
        "prefix": "radius_demangle",
        "body": "radius_demangle(${1:radius_handle}, ${2:mangled})$0"
    },
    "radius_demangle_mppe_key": {
        "prefix": "radius_demangle_mppe_key",
        "body": "radius_demangle_mppe_key(${1:radius_handle}, ${2:mangled})$0"
    },
    "radius_get_attr": {
        "prefix": "radius_get_attr",
        "body": "radius_get_attr(${1:radius_handle})$0"
    },
    "radius_get_vendor_attr": {
        "prefix": "radius_get_vendor_attr",
        "body": "radius_get_vendor_attr(${1:data})$0"
    },
    "radius_put_addr": {
        "prefix": "radius_put_addr",
        "body": "radius_put_addr(${1:radius_handle}, ${2:type}, ${3:addr})$0"
    },
    "radius_put_attr": {
        "prefix": "radius_put_attr",
        "body": "radius_put_attr(${1:radius_handle}, ${2:type}, ${3:value})$0"
    },
    "radius_put_int": {
        "prefix": "radius_put_int",
        "body": "radius_put_int(${1:radius_handle}, ${2:type}, ${3:value})$0"
    },
    "radius_put_string": {
        "prefix": "radius_put_string",
        "body": "radius_put_string(${1:radius_handle}, ${2:type}, ${3:value})$0"
    },
    "radius_put_vendor_addr": {
        "prefix": "radius_put_vendor_addr",
        "body": "radius_put_vendor_addr(${1:radius_handle}, ${2:vendor}, ${3:type}, ${4:addr})$0"
    },
    "radius_put_vendor_attr": {
        "prefix": "radius_put_vendor_attr",
        "body": "radius_put_vendor_attr(${1:radius_handle}, ${2:vendor}, ${3:type}, ${4:value})$0"
    },
    "radius_put_vendor_int": {
        "prefix": "radius_put_vendor_int",
        "body": "radius_put_vendor_int(${1:radius_handle}, ${2:vendor}, ${3:type}, ${4:value})$0"
    },
    "radius_put_vendor_string": {
        "prefix": "radius_put_vendor_string",
        "body": "radius_put_vendor_string(${1:radius_handle}, ${2:vendor}, ${3:type}, ${4:value})$0"
    },
    "radius_request_authenticator": {
        "prefix": "radius_request_authenticator",
        "body": "radius_request_authenticator(${1:radius_handle})$0"
    },
    "radius_send_request": {
        "prefix": "radius_send_request",
        "body": "radius_send_request(${1:radius_handle})$0"
    },
    "radius_server_secret": {
        "prefix": "radius_server_secret",
        "body": "radius_server_secret(${1:radius_handle})$0"
    },
    "radius_strerror": {
        "prefix": "radius_strerror",
        "body": "radius_strerror(${1:radius_handle})$0"
    },
    "rand": {
        "prefix": "rand",
        "body": "rand()$0"
    },
    "random_bytes": {
        "prefix": "random_bytes",
        "body": "random_bytes(${1:length})$0"
    },
    "random_int": {
        "prefix": "random_int",
        "body": "random_int(${1:min}, ${2:max})$0"
    },
    "range": {
        "prefix": "range",
        "body": "range(${1:low}, ${2:high})$0"
    },
    "rentang": {
        "prefix": "rentang",
        "body": "rentang(${1:low}, ${2:high})$0"
    },
    "rar_wrapper_cache_stats": {
        "prefix": "rar_wrapper_cache_stats",
        "body": "rar_wrapper_cache_stats()$0"
    },
    "rawurldecode": {
        "prefix": "rawurldecode",
        "body": "rawurldecode(${1:str})$0"
    },
    "rawurlencode": {
        "prefix": "rawurlencode",
        "body": "rawurlencode(${1:str})$0"
    },
    "read_exif_data": {
        "prefix": "read_exif_data",
        "body": "read_exif_data()$0"
    },
    "readdir": {
        "prefix": "readdir",
        "body": "readdir()$0"
    },
    "readfile": {
        "prefix": "readfile",
        "body": "readfile(${1:filename})$0"
    },
    "readgzfile": {
        "prefix": "readgzfile",
        "body": "readgzfile(${1:filename})$0"
    },
    "readline": {
        "prefix": "readline",
        "body": "readline()$0"
    },
    "readline_add_history": {
        "prefix": "readline_add_history",
        "body": "readline_add_history(${1:line})$0"
    },
    "readline_callback_handler_install": {
        "prefix": "readline_callback_handler_install",
        "body": "readline_callback_handler_install(${1:prompt}, ${2:callback})$0"
    },
    "readline_callback_handler_remove": {
        "prefix": "readline_callback_handler_remove",
        "body": "readline_callback_handler_remove()$0"
    },
    "readline_callback_read_char": {
        "prefix": "readline_callback_read_char",
        "body": "readline_callback_read_char()$0"
    },
    "readline_clear_history": {
        "prefix": "readline_clear_history",
        "body": "readline_clear_history()$0"
    },
    "readline_completion_function": {
        "prefix": "readline_completion_function",
        "body": "readline_completion_function(${1:function})$0"
    },
    "readline_info": {
        "prefix": "readline_info",
        "body": "readline_info()$0"
    },
    "readline_list_history": {
        "prefix": "readline_list_history",
        "body": "readline_list_history()$0"
    },
    "readline_on_new_line": {
        "prefix": "readline_on_new_line",
        "body": "readline_on_new_line()$0"
    },
    "readline_read_history": {
        "prefix": "readline_read_history",
        "body": "readline_read_history()$0"
    },
    "readline_redisplay": {
        "prefix": "readline_redisplay",
        "body": "readline_redisplay()$0"
    },
    "readline_write_history": {
        "prefix": "readline_write_history",
        "body": "readline_write_history()$0"
    },
    "readlink": {
        "prefix": "readlink",
        "body": "readlink(${1:path})$0"
    },
    "realpath": {
        "prefix": "realpath",
        "body": "realpath(${1:path})$0"
    },
    "realpath_cache_get": {
        "prefix": "realpath_cache_get",
        "body": "realpath_cache_get()$0"
    },
    "realpath_cache_size": {
        "prefix": "realpath_cache_size",
        "body": "realpath_cache_size()$0"
    },
    "recode": {
        "prefix": "recode",
        "body": "recode()$0"
    },
    "recode_file": {
        "prefix": "recode_file",
        "body": "recode_file(${1:request}, ${2:input}, ${3:output})$0"
    },
    "recode_string": {
        "prefix": "recode_string",
        "body": "recode_string(${1:request}, ${2:string})$0"
    },
    "register_shutdown_function": {
        "prefix": "register_shutdown_function",
        "body": "register_shutdown_function(${1:function})$0"
    },
    "register_tick_function": {
        "prefix": "register_tick_function",
        "body": "register_tick_function(${1:function})$0"
    },
    "rename": {
        "prefix": "rename",
        "body": "rename(${1:oldname}, ${2:newname})$0"
    },
    "rename_function": {
        "prefix": "rename_function",
        "body": "rename_function(${1:original_name}, ${2:new_name})$0"
    },
    "reset": {
        "prefix": "reset",
        "body": "reset(${1:array})$0"
    },
    "restore_error_handler": {
        "prefix": "restore_error_handler",
        "body": "restore_error_handler()$0"
    },
    "restore_exception_handler": {
        "prefix": "restore_exception_handler",
        "body": "restore_exception_handler()$0"
    },
    "restore_include_path": {
        "prefix": "restore_include_path",
        "body": "restore_include_path()$0"
    },
    "rewind": {
        "prefix": "rewind",
        "body": "rewind(${1:handle})$0"
    },
    "rewinddir": {
        "prefix": "rewinddir",
        "body": "rewinddir()$0"
    },
    "rmdir": {
        "prefix": "rmdir",
        "body": "rmdir(${1:dirname})$0"
    },
    "round": {
        "prefix": "round",
        "body": "round(${1:val})$0"
    },
    "rpm_close": {
        "prefix": "rpm_close",
        "body": "rpm_close(${1:rpmr})$0"
    },
    "rpm_get_tag": {
        "prefix": "rpm_get_tag",
        "body": "rpm_get_tag(${1:rpmr}, ${2:tagnum})$0"
    },
    "rpm_is_valid": {
        "prefix": "rpm_is_valid",
        "body": "rpm_is_valid(${1:filename})$0"
    },
    "rpm_open": {
        "prefix": "rpm_open",
        "body": "rpm_open(${1:filename})$0"
    },
    "rpm_version": {
        "prefix": "rpm_version",
        "body": "rpm_version()$0"
    },
    "rsort": {
        "prefix": "rsort",
        "body": "rsort(${1:array})$0"
    },
    "rtrim": {
        "prefix": "rtrim",
        "body": "rtrim(${1:str})$0"
    },
    "runkit_class_adopt": {
        "prefix": "runkit_class_adopt",
        "body": "runkit_class_adopt(${1:classname}, ${2:parentname})$0"
    },
    "runkit_class_emancipate": {
        "prefix": "runkit_class_emancipate",
        "body": "runkit_class_emancipate(${1:classname})$0"
    },
    "runkit_constant_add": {
        "prefix": "runkit_constant_add",
        "body": "runkit_constant_add(${1:constname}, ${2:value})$0"
    },
    "runkit_constant_redefine": {
        "prefix": "runkit_constant_redefine",
        "body": "runkit_constant_redefine(${1:constname}, ${2:newvalue})$0"
    },
    "runkit_constant_remove": {
        "prefix": "runkit_constant_remove",
        "body": "runkit_constant_remove(${1:constname})$0"
    },
    "runkit_function_add": {
        "prefix": "runkit_function_add",
        "body": "runkit_function_add(${1:funcname}, ${2:arglist}, ${3:code})$0"
    },
    "runkit_function_copy": {
        "prefix": "runkit_function_copy",
        "body": "runkit_function_copy(${1:funcname}, ${2:targetname})$0"
    },
    "runkit_function_redefine": {
        "prefix": "runkit_function_redefine",
        "body": "runkit_function_redefine(${1:funcname}, ${2:arglist}, ${3:code})$0"
    },
    "runkit_function_remove": {
        "prefix": "runkit_function_remove",
        "body": "runkit_function_remove(${1:funcname})$0"
    },
    "runkit_function_rename": {
        "prefix": "runkit_function_rename",
        "body": "runkit_function_rename(${1:funcname}, ${2:newname})$0"
    },
    "runkit_import": {
        "prefix": "runkit_import",
        "body": "runkit_import(${1:filename})$0"
    },
    "runkit_lint": {
        "prefix": "runkit_lint",
        "body": "runkit_lint(${1:code})$0"
    },
    "runkit_lint_file": {
        "prefix": "runkit_lint_file",
        "body": "runkit_lint_file(${1:filename})$0"
    },
    "runkit_method_add": {
        "prefix": "runkit_method_add",
        "body": "runkit_method_add(${1:classname}, ${2:methodname}, ${3:args}, ${4:code})$0"
    },
    "runkit_method_copy": {
        "prefix": "runkit_method_copy",
        "body": "runkit_method_copy(${1:dClass}, ${2:dMethod}, ${3:sClass})$0"
    },
    "runkit_method_redefine": {
        "prefix": "runkit_method_redefine",
        "body": "runkit_method_redefine(${1:classname}, ${2:methodname}, ${3:args}, ${4:code})$0"
    },
    "runkit_method_remove": {
        "prefix": "runkit_method_remove",
        "body": "runkit_method_remove(${1:classname}, ${2:methodname})$0"
    },
    "runkit_method_rename": {
        "prefix": "runkit_method_rename",
        "body": "runkit_method_rename(${1:classname}, ${2:methodname}, ${3:newname})$0"
    },
    "runkit_return_value_used": {
        "prefix": "runkit_return_value_used",
        "body": "runkit_return_value_used()$0"
    },
    "runkit_sandbox_output_handler": {
        "prefix": "runkit_sandbox_output_handler",
        "body": "runkit_sandbox_output_handler(${1:sandbox})$0"
    },
    "runkit_superglobals": {
        "prefix": "runkit_superglobals",
        "body": "runkit_superglobals()$0"
    },
    "scandir": {
        "prefix": "scandir",
        "body": "scandir(${1:directory})$0"
    },
    "sem_acquire": {
        "prefix": "sem_acquire",
        "body": "sem_acquire(${1:sem_identifier})$0"
    },
    "sem_get": {
        "prefix": "sem_get",
        "body": "sem_get(${1:key})$0"
    },
    "sem_release": {
        "prefix": "sem_release",
        "body": "sem_release(${1:sem_identifier})$0"
    },
    "sem_remove": {
        "prefix": "sem_remove",
        "body": "sem_remove(${1:sem_identifier})$0"
    },
    "serialize": {
        "prefix": "serialize",
        "body": "serialize(${1:value})$0"
    },
    "session_cache_expire": {
        "prefix": "session_cache_expire",
        "body": "session_cache_expire()$0"
    },
    "session_cache_limiter": {
        "prefix": "session_cache_limiter",
        "body": "session_cache_limiter()$0"
    },
    "session_commit": {
        "prefix": "session_commit",
        "body": "session_commit()$0"
    },
    "session_decode": {
        "prefix": "session_decode",
        "body": "session_decode(${1:data})$0"
    },
    "session_destroy": {
        "prefix": "session_destroy",
        "body": "session_destroy()$0"
    },
    "session_encode": {
        "prefix": "session_encode",
        "body": "session_encode()$0"
    },
    "session_get_cookie_params": {
        "prefix": "session_get_cookie_params",
        "body": "session_get_cookie_params()$0"
    },
    "session_id": {
        "prefix": "session_id",
        "body": "session_id()$0"
    },
    "session_is_registered": {
        "prefix": "session_is_registered",
        "body": "session_is_registered(${1:name})$0"
    },
    "session_module_name": {
        "prefix": "session_module_name",
        "body": "session_module_name()$0"
    },
    "session_name": {
        "prefix": "session_name",
        "body": "session_name()$0"
    },
    "session_pgsql_add_error": {
        "prefix": "session_pgsql_add_error",
        "body": "session_pgsql_add_error(${1:error_level})$0"
    },
    "session_pgsql_get_error": {
        "prefix": "session_pgsql_get_error",
        "body": "session_pgsql_get_error()$0"
    },
    "session_pgsql_get_field": {
        "prefix": "session_pgsql_get_field",
        "body": "session_pgsql_get_field()$0"
    },
    "session_pgsql_reset": {
        "prefix": "session_pgsql_reset",
        "body": "session_pgsql_reset()$0"
    },
    "session_pgsql_set_field": {
        "prefix": "session_pgsql_set_field",
        "body": "session_pgsql_set_field(${1:value})$0"
    },
    "session_pgsql_status": {
        "prefix": "session_pgsql_status",
        "body": "session_pgsql_status()$0"
    },
    "session_regenerate_id": {
        "prefix": "session_regenerate_id",
        "body": "session_regenerate_id()$0"
    },
    "session_register": {
        "prefix": "session_register",
        "body": "session_register(${1:name})$0"
    },
    "session_save_path": {
        "prefix": "session_save_path",
        "body": "session_save_path()$0"
    },
    "session_set_cookie_params": {
        "prefix": "session_set_cookie_params",
        "body": "session_set_cookie_params(${1:lifetime})$0"
    },
    "session_set_save_handler": {
        "prefix": "session_set_save_handler",
        "body": "session_set_save_handler(${1:open}, ${2:close}, ${3:read}, ${4:write}, ${5:destroy}, ${6:gc})$0"
    },
    "session_start": {
        "prefix": "session_start",
        "body": "session_start()$0"
    },
    "session_unregister": {
        "prefix": "session_unregister",
        "body": "session_unregister(${1:name})$0"
    },
    "session_unset": {
        "prefix": "session_unset",
        "body": "session_unset()$0"
    },
    "session_write_close": {
        "prefix": "session_write_close",
        "body": "session_write_close()$0"
    },
    "set_error_handler": {
        "prefix": "set_error_handler",
        "body": "set_error_handler(${1:error_handler})$0"
    },
    "set_exception_handler": {
        "prefix": "set_exception_handler",
        "body": "set_exception_handler(${1:exception_handler})$0"
    },
    "set_file_buffer": {
        "prefix": "set_file_buffer",
        "body": "set_file_buffer()$0"
    },
    "set_include_path": {
        "prefix": "set_include_path",
        "body": "set_include_path(${1:new_include_path})$0"
    },
    "set_magic_quotes_runtime": {
        "prefix": "set_magic_quotes_runtime",
        "body": "set_magic_quotes_runtime(${1:new_setting})$0"
    },
    "set_socket_blocking": {
        "prefix": "set_socket_blocking",
        "body": "set_socket_blocking()$0"
    },
    "set_time_limit": {
        "prefix": "set_time_limit",
        "body": "set_time_limit(${1:seconds})$0"
    },
    "setcookie": {
        "prefix": "setcookie",
        "body": "setcookie(${1:name})$0"
    },
    "setlocale": {
        "prefix": "setlocale",
        "body": "setlocale(${1:category}, ${2:locale})$0"
    },
    "setrawcookie": {
        "prefix": "setrawcookie",
        "body": "setrawcookie(${1:name})$0"
    },
    "settype": {
        "prefix": "settype",
        "body": "settype(${1:var}, ${2:type})$0"
    },
    "sha1": {
        "prefix": "sha1",
        "body": "sha1(${1:str})$0"
    },
    "sha1_file": {
        "prefix": "sha1_file",
        "body": "sha1_file(${1:filename})$0"
    },
    "shell_exec": {
        "prefix": "shell_exec",
        "body": "shell_exec(${1:cmd})$0"
    },
    "shm_attach": {
        "prefix": "shm_attach",
        "body": "shm_attach(${1:key})$0"
    },
    "shm_detach": {
        "prefix": "shm_detach",
        "body": "shm_detach(${1:shm_identifier})$0"
    },
    "shm_get_var": {
        "prefix": "shm_get_var",
        "body": "shm_get_var(${1:shm_identifier}, ${2:variable_key})$0"
    },
    "shm_has_var": {
        "prefix": "shm_has_var",
        "body": "shm_has_var(${1:shm_identifier}, ${2:variable_key})$0"
    },
    "shm_put_var": {
        "prefix": "shm_put_var",
        "body": "shm_put_var(${1:shm_identifier}, ${2:variable_key}, ${3:variable})$0"
    },
    "shm_remove": {
        "prefix": "shm_remove",
        "body": "shm_remove(${1:shm_identifier})$0"
    },
    "shm_remove_var": {
        "prefix": "shm_remove_var",
        "body": "shm_remove_var(${1:shm_identifier}, ${2:variable_key})$0"
    },
    "shmop_close": {
        "prefix": "shmop_close",
        "body": "shmop_close(${1:shmid})$0"
    },
    "shmop_delete": {
        "prefix": "shmop_delete",
        "body": "shmop_delete(${1:shmid})$0"
    },
    "shmop_open": {
        "prefix": "shmop_open",
        "body": "shmop_open(${1:key}, ${2:flags}, ${3:mode}, ${4:size})$0"
    },
    "shmop_read": {
        "prefix": "shmop_read",
        "body": "shmop_read(${1:shmid}, ${2:start}, ${3:count})$0"
    },
    "shmop_size": {
        "prefix": "shmop_size",
        "body": "shmop_size(${1:shmid})$0"
    },
    "shmop_write": {
        "prefix": "shmop_write",
        "body": "shmop_write(${1:shmid}, ${2:data}, ${3:offset})$0"
    },
    "show_source": {
        "prefix": "show_source",
        "body": "show_source()$0"
    },
    "shuffle": {
        "prefix": "shuffle",
        "body": "shuffle(${1:array})$0"
    },
    "signeurlpaiement": {
        "prefix": "signeurlpaiement",
        "body": "signeurlpaiement(${1:clent}, ${2:data})$0"
    },
    "similar_text": {
        "prefix": "similar_text",
        "body": "similar_text(${1:first}, ${2:second})$0"
    },
    "simplexml_import_dom": {
        "prefix": "simplexml_import_dom",
        "body": "simplexml_import_dom(${1:node})$0"
    },
    "simplexml_load_file": {
        "prefix": "simplexml_load_file",
        "body": "simplexml_load_file(${1:filename})$0"
    },
    "simplexml_load_string": {
        "prefix": "simplexml_load_string",
        "body": "simplexml_load_string(${1:data})$0"
    },
    "sin": {
        "prefix": "sin",
        "body": "sin(${1:arg})$0"
    },
    "sinh": {
        "prefix": "sinh",
        "body": "sinh(${1:arg})$0"
    },
    "sizeof": {
        "prefix": "sizeof",
        "body": "sizeof()$0"
    },
    "sleep": {
        "prefix": "sleep",
        "body": "sleep(${1:seconds})$0"
    },
    "snmp2_get": {
        "prefix": "snmp2_get",
        "body": "snmp2_get(${1:host}, ${2:community}, ${3:object_id})$0"
    },
    "snmp2_getnext": {
        "prefix": "snmp2_getnext",
        "body": "snmp2_getnext(${1:host}, ${2:community}, ${3:object_id})$0"
    },
    "snmp2_real_walk": {
        "prefix": "snmp2_real_walk",
        "body": "snmp2_real_walk(${1:host}, ${2:community}, ${3:object_id})$0"
    },
    "snmp2_set": {
        "prefix": "snmp2_set",
        "body": "snmp2_set(${1:host}, ${2:community}, ${3:object_id}, ${4:type}, ${5:value})$0"
    },
    "snmp2_walk": {
        "prefix": "snmp2_walk",
        "body": "snmp2_walk(${1:host}, ${2:community}, ${3:object_id})$0"
    },
    "snmp3_get": {
        "prefix": "snmp3_get",
        "body": "snmp3_get(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id})$0"
    },
    "snmp3_getnext": {
        "prefix": "snmp3_getnext",
        "body": "snmp3_getnext(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id})$0"
    },
    "snmp3_real_walk": {
        "prefix": "snmp3_real_walk",
        "body": "snmp3_real_walk(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id})$0"
    },
    "snmp3_set": {
        "prefix": "snmp3_set",
        "body": "snmp3_set(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id}, ${9:type}, ${10:value})$0"
    },
    "snmp3_walk": {
        "prefix": "snmp3_walk",
        "body": "snmp3_walk(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id})$0"
    },
    "snmp_get_quick_print": {
        "prefix": "snmp_get_quick_print",
        "body": "snmp_get_quick_print()$0"
    },
    "snmp_get_valueretrieval": {
        "prefix": "snmp_get_valueretrieval",
        "body": "snmp_get_valueretrieval()$0"
    },
    "snmp_read_mib": {
        "prefix": "snmp_read_mib",
        "body": "snmp_read_mib(${1:filename})$0"
    },
    "snmp_set_enum_print": {
        "prefix": "snmp_set_enum_print",
        "body": "snmp_set_enum_print(${1:enum_print})$0"
    },
    "snmp_set_oid_numeric_print": {
        "prefix": "snmp_set_oid_numeric_print",
        "body": "snmp_set_oid_numeric_print(${1:oid_numeric_print})$0"
    },
    "snmp_set_oid_output_format": {
        "prefix": "snmp_set_oid_output_format",
        "body": "snmp_set_oid_output_format(${1:oid_format = SNMP_OID_OUTPUT_MODULE})$0"
    },
    "snmp_set_quick_print": {
        "prefix": "snmp_set_quick_print",
        "body": "snmp_set_quick_print(${1:quick_print})$0"
    },
    "snmp_set_valueretrieval": {
        "prefix": "snmp_set_valueretrieval",
        "body": "snmp_set_valueretrieval(${1:method})$0"
    },
    "snmpget": {
        "prefix": "snmpget",
        "body": "snmpget(${1:hostname}, ${2:community}, ${3:object_id})$0"
    },
    "snmpgetnext": {
        "prefix": "snmpgetnext",
        "body": "snmpgetnext(${1:host}, ${2:community}, ${3:object_id})$0"
    },
    "snmprealwalk": {
        "prefix": "snmprealwalk",
        "body": "snmprealwalk(${1:host}, ${2:community}, ${3:object_id})$0"
    },
    "snmpset": {
        "prefix": "snmpset",
        "body": "snmpset(${1:host}, ${2:community}, ${3:object_id}, ${4:type}, ${5:value})$0"
    },
    "snmpwalk": {
        "prefix": "snmpwalk",
        "body": "snmpwalk(${1:hostname}, ${2:community}, ${3:object_id})$0"
    },
    "snmpwalkoid": {
        "prefix": "snmpwalkoid",
        "body": "snmpwalkoid(${1:hostname}, ${2:community}, ${3:object_id})$0"
    },
    "socket_accept": {
        "prefix": "socket_accept",
        "body": "socket_accept(${1:socket})$0"
    },
    "socket_bind": {
        "prefix": "socket_bind",
        "body": "socket_bind(${1:socket}, ${2:address})$0"
    },
    "socket_clear_error": {
        "prefix": "socket_clear_error",
        "body": "socket_clear_error()$0"
    },
    "socket_close": {
        "prefix": "socket_close",
        "body": "socket_close(${1:socket})$0"
    },
    "socket_connect": {
        "prefix": "socket_connect",
        "body": "socket_connect(${1:socket}, ${2:address})$0"
    },
    "socket_create": {
        "prefix": "socket_create",
        "body": "socket_create(${1:domain}, ${2:type}, ${3:protocol})$0"
    },
    "socket_create_listen": {
        "prefix": "socket_create_listen",
        "body": "socket_create_listen(${1:port})$0"
    },
    "socket_create_pair": {
        "prefix": "socket_create_pair",
        "body": "socket_create_pair(${1:domain}, ${2:type}, ${3:protocol}, ${4:fd})$0"
    },
    "socket_get_option": {
        "prefix": "socket_get_option",
        "body": "socket_get_option(${1:socket}, ${2:level}, ${3:optname})$0"
    },
    "socket_get_status": {
        "prefix": "socket_get_status",
        "body": "socket_get_status()$0"
    },
    "socket_getpeername": {
        "prefix": "socket_getpeername",
        "body": "socket_getpeername(${1:socket}, ${2:address})$0"
    },
    "socket_getsockname": {
        "prefix": "socket_getsockname",
        "body": "socket_getsockname(${1:socket}, ${2:addr})$0"
    },
    "socket_last_error": {
        "prefix": "socket_last_error",
        "body": "socket_last_error()$0"
    },
    "socket_listen": {
        "prefix": "socket_listen",
        "body": "socket_listen(${1:socket})$0"
    },
    "socket_read": {
        "prefix": "socket_read",
        "body": "socket_read(${1:socket}, ${2:length})$0"
    },
    "socket_recv": {
        "prefix": "socket_recv",
        "body": "socket_recv(${1:socket}, ${2:buf}, ${3:len}, ${4:flags})$0"
    },
    "socket_recvfrom": {
        "prefix": "socket_recvfrom",
        "body": "socket_recvfrom(${1:socket}, ${2:buf}, ${3:len}, ${4:flags}, ${5:name})$0"
    },
    "socket_select": {
        "prefix": "socket_select",
        "body": "socket_select(${1:read}, ${2:write}, ${3:except}, ${4:tv_sec})$0"
    },
    "socket_send": {
        "prefix": "socket_send",
        "body": "socket_send(${1:socket}, ${2:buf}, ${3:len}, ${4:flags})$0"
    },
    "socket_sendto": {
        "prefix": "socket_sendto",
        "body": "socket_sendto(${1:socket}, ${2:buf}, ${3:len}, ${4:flags}, ${5:addr})$0"
    },
    "socket_set_block": {
        "prefix": "socket_set_block",
        "body": "socket_set_block(${1:socket})$0"
    },
    "socket_set_blocking": {
        "prefix": "socket_set_blocking",
        "body": "socket_set_blocking()$0"
    },
    "socket_set_nonblock": {
        "prefix": "socket_set_nonblock",
        "body": "socket_set_nonblock(${1:socket})$0"
    },
    "socket_set_option": {
        "prefix": "socket_set_option",
        "body": "socket_set_option(${1:socket}, ${2:level}, ${3:optname}, ${4:optval})$0"
    },
    "socket_set_timeout": {
        "prefix": "socket_set_timeout",
        "body": "socket_set_timeout()$0"
    },
    "socket_shutdown": {
        "prefix": "socket_shutdown",
        "body": "socket_shutdown(${1:socket})$0"
    },
    "socket_strerror": {
        "prefix": "socket_strerror",
        "body": "socket_strerror(${1:errno})$0"
    },
    "socket_write": {
        "prefix": "socket_write",
        "body": "socket_write(${1:socket}, ${2:buffer})$0"
    },
    "solr_get_version": {
        "prefix": "solr_get_version",
        "body": "solr_get_version()$0"
    },
    "sort": {
        "prefix": "sort",
        "body": "sort(${1:array})$0"
    },
    "soundex": {
        "prefix": "soundex",
        "body": "soundex(${1:str})$0"
    },
    "spl_autoload": {
        "prefix": "spl_autoload",
        "body": "spl_autoload(${1:class_name})$0"
    },
    "spl_autoload_call": {
        "prefix": "spl_autoload_call",
        "body": "spl_autoload_call(${1:class_name})$0"
    },
    "spl_autoload_extensions": {
        "prefix": "spl_autoload_extensions",
        "body": "spl_autoload_extensions()$0"
    },
    "spl_autoload_functions": {
        "prefix": "spl_autoload_functions",
        "body": "spl_autoload_functions()$0"
    },
    "spl_autoload_register": {
        "prefix": "spl_autoload_register",
        "body": "spl_autoload_register()$0"
    },
    "spl_autoload_unregister": {
        "prefix": "spl_autoload_unregister",
        "body": "spl_autoload_unregister(${1:autoload_function})$0"
    },
    "spl_classes": {
        "prefix": "spl_classes",
        "body": "spl_classes()$0"
    },
    "spl_object_hash": {
        "prefix": "spl_object_hash",
        "body": "spl_object_hash(${1:obj})$0"
    },
    "split": {
        "prefix": "split",
        "body": "split(${1:pattern}, ${2:string})$0"
    },
    "spliti": {
        "prefix": "spliti",
        "body": "spliti(${1:pattern}, ${2:string})$0"
    },
    "sprintf": {
        "prefix": "sprintf",
        "body": "sprintf(${1:format})$0"
    },
    "sql_regcase": {
        "prefix": "sql_regcase",
        "body": "sql_regcase(${1:string})$0"
    },
    "sqlite_close": {
        "prefix": "sqlite_close",
        "body": "sqlite_close(${1:dbhandle})$0"
    },
    "sqlite_error_string": {
        "prefix": "sqlite_error_string",
        "body": "sqlite_error_string(${1:error_code})$0"
    },
    "sqlite_escape_string": {
        "prefix": "sqlite_escape_string",
        "body": "sqlite_escape_string(${1:item})$0"
    },
    "sqlite_factory": {
        "prefix": "sqlite_factory",
        "body": "sqlite_factory(${1:filename})$0"
    },
    "sqlite_fetch_string": {
        "prefix": "sqlite_fetch_string",
        "body": "sqlite_fetch_string()$0"
    },
    "sqlite_has_more": {
        "prefix": "sqlite_has_more",
        "body": "sqlite_has_more(${1:result})$0"
    },
    "sqlite_libencoding": {
        "prefix": "sqlite_libencoding",
        "body": "sqlite_libencoding()$0"
    },
    "sqlite_libversion": {
        "prefix": "sqlite_libversion",
        "body": "sqlite_libversion()$0"
    },
    "sqlite_open": {
        "prefix": "sqlite_open",
        "body": "sqlite_open(${1:filename})$0"
    },
    "sqlite_popen": {
        "prefix": "sqlite_popen",
        "body": "sqlite_popen(${1:filename})$0"
    },
    "sqlite_udf_decode_binary": {
        "prefix": "sqlite_udf_decode_binary",
        "body": "sqlite_udf_decode_binary(${1:data})$0"
    },
    "sqlite_udf_encode_binary": {
        "prefix": "sqlite_udf_encode_binary",
        "body": "sqlite_udf_encode_binary(${1:data})$0"
    },
    "sqrt": {
        "prefix": "sqrt",
        "body": "sqrt(${1:arg})$0"
    },
    "srand": {
        "prefix": "srand",
        "body": "srand()$0"
    },
    "sscanf": {
        "prefix": "sscanf",
        "body": "sscanf(${1:str}, ${2:format})$0"
    },
    "ssdeep_fuzzy_compare": {
        "prefix": "ssdeep_fuzzy_compare",
        "body": "ssdeep_fuzzy_compare(${1:signature1}, ${2:signature2})$0"
    },
    "ssdeep_fuzzy_hash": {
        "prefix": "ssdeep_fuzzy_hash",
        "body": "ssdeep_fuzzy_hash(${1:to_hash})$0"
    },
    "ssdeep_fuzzy_hash_filename": {
        "prefix": "ssdeep_fuzzy_hash_filename",
        "body": "ssdeep_fuzzy_hash_filename(${1:file_name})$0"
    },
    "ssh2_auth_hostbased_file": {
        "prefix": "ssh2_auth_hostbased_file",
        "body": "ssh2_auth_hostbased_file(${1:session}, ${2:username}, ${3:hostname}, ${4:pubkeyfile}, ${5:privkeyfile})$0"
    },
    "ssh2_auth_none": {
        "prefix": "ssh2_auth_none",
        "body": "ssh2_auth_none(${1:session}, ${2:username})$0"
    },
    "ssh2_auth_password": {
        "prefix": "ssh2_auth_password",
        "body": "ssh2_auth_password(${1:session}, ${2:username}, ${3:password})$0"
    },
    "ssh2_auth_pubkey_file": {
        "prefix": "ssh2_auth_pubkey_file",
        "body": "ssh2_auth_pubkey_file(${1:session}, ${2:username}, ${3:pubkeyfile}, ${4:privkeyfile})$0"
    },
    "ssh2_connect": {
        "prefix": "ssh2_connect",
        "body": "ssh2_connect(${1:host})$0"
    },
    "ssh2_exec": {
        "prefix": "ssh2_exec",
        "body": "ssh2_exec(${1:session}, ${2:command})$0"
    },
    "ssh2_fetch_stream": {
        "prefix": "ssh2_fetch_stream",
        "body": "ssh2_fetch_stream(${1:channel}, ${2:streamid})$0"
    },
    "ssh2_fingerprint": {
        "prefix": "ssh2_fingerprint",
        "body": "ssh2_fingerprint(${1:session})$0"
    },
    "ssh2_methods_negotiated": {
        "prefix": "ssh2_methods_negotiated",
        "body": "ssh2_methods_negotiated(${1:session})$0"
    },
    "ssh2_publickey_add": {
        "prefix": "ssh2_publickey_add",
        "body": "ssh2_publickey_add(${1:pkey}, ${2:algoname}, ${3:blob})$0"
    },
    "ssh2_publickey_init": {
        "prefix": "ssh2_publickey_init",
        "body": "ssh2_publickey_init(${1:session})$0"
    },
    "ssh2_publickey_list": {
        "prefix": "ssh2_publickey_list",
        "body": "ssh2_publickey_list(${1:pkey})$0"
    },
    "ssh2_publickey_remove": {
        "prefix": "ssh2_publickey_remove",
        "body": "ssh2_publickey_remove(${1:pkey}, ${2:algoname}, ${3:blob})$0"
    },
    "ssh2_scp_recv": {
        "prefix": "ssh2_scp_recv",
        "body": "ssh2_scp_recv(${1:session}, ${2:remote_file}, ${3:local_file})$0"
    },
    "ssh2_scp_send": {
        "prefix": "ssh2_scp_send",
        "body": "ssh2_scp_send(${1:session}, ${2:local_file}, ${3:remote_file})$0"
    },
    "ssh2_sftp": {
        "prefix": "ssh2_sftp",
        "body": "ssh2_sftp(${1:session})$0"
    },
    "ssh2_sftp_lstat": {
        "prefix": "ssh2_sftp_lstat",
        "body": "ssh2_sftp_lstat(${1:sftp}, ${2:path})$0"
    },
    "ssh2_sftp_mkdir": {
        "prefix": "ssh2_sftp_mkdir",
        "body": "ssh2_sftp_mkdir(${1:sftp}, ${2:dirname})$0"
    },
    "ssh2_sftp_readlink": {
        "prefix": "ssh2_sftp_readlink",
        "body": "ssh2_sftp_readlink(${1:sftp}, ${2:link})$0"
    },
    "ssh2_sftp_realpath": {
        "prefix": "ssh2_sftp_realpath",
        "body": "ssh2_sftp_realpath(${1:sftp}, ${2:filename})$0"
    },
    "ssh2_sftp_rename": {
        "prefix": "ssh2_sftp_rename",
        "body": "ssh2_sftp_rename(${1:sftp}, ${2:from}, ${3:to})$0"
    },
    "ssh2_sftp_rmdir": {
        "prefix": "ssh2_sftp_rmdir",
        "body": "ssh2_sftp_rmdir(${1:sftp}, ${2:dirname})$0"
    },
    "ssh2_sftp_stat": {
        "prefix": "ssh2_sftp_stat",
        "body": "ssh2_sftp_stat(${1:sftp}, ${2:path})$0"
    },
    "ssh2_sftp_symlink": {
        "prefix": "ssh2_sftp_symlink",
        "body": "ssh2_sftp_symlink(${1:sftp}, ${2:target}, ${3:link})$0"
    },
    "ssh2_sftp_unlink": {
        "prefix": "ssh2_sftp_unlink",
        "body": "ssh2_sftp_unlink(${1:sftp}, ${2:filename})$0"
    },
    "ssh2_shell": {
        "prefix": "ssh2_shell",
        "body": "ssh2_shell(${1:session})$0"
    },
    "ssh2_tunnel": {
        "prefix": "ssh2_tunnel",
        "body": "ssh2_tunnel(${1:session}, ${2:host}, ${3:port})$0"
    },
    "stat": {
        "prefix": "stat",
        "body": "stat(${1:filename})$0"
    },
    "stats_absolute_deviation": {
        "prefix": "stats_absolute_deviation",
        "body": "stats_absolute_deviation(${1:a})$0"
    },
    "stats_cdf_beta": {
        "prefix": "stats_cdf_beta",
        "body": "stats_cdf_beta(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_binomial": {
        "prefix": "stats_cdf_binomial",
        "body": "stats_cdf_binomial(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_cauchy": {
        "prefix": "stats_cdf_cauchy",
        "body": "stats_cdf_cauchy(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_chisquare": {
        "prefix": "stats_cdf_chisquare",
        "body": "stats_cdf_chisquare(${1:par1}, ${2:par2}, ${3:which})$0"
    },
    "stats_cdf_exponential": {
        "prefix": "stats_cdf_exponential",
        "body": "stats_cdf_exponential(${1:par1}, ${2:par2}, ${3:which})$0"
    },
    "stats_cdf_f": {
        "prefix": "stats_cdf_f",
        "body": "stats_cdf_f(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_gamma": {
        "prefix": "stats_cdf_gamma",
        "body": "stats_cdf_gamma(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_laplace": {
        "prefix": "stats_cdf_laplace",
        "body": "stats_cdf_laplace(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_logistic": {
        "prefix": "stats_cdf_logistic",
        "body": "stats_cdf_logistic(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_negative_binomial": {
        "prefix": "stats_cdf_negative_binomial",
        "body": "stats_cdf_negative_binomial(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_noncentral_chisquare": {
        "prefix": "stats_cdf_noncentral_chisquare",
        "body": "stats_cdf_noncentral_chisquare(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_noncentral_f": {
        "prefix": "stats_cdf_noncentral_f",
        "body": "stats_cdf_noncentral_f(${1:par1}, ${2:par2}, ${3:par3}, ${4:par4}, ${5:which})$0"
    },
    "stats_cdf_poisson": {
        "prefix": "stats_cdf_poisson",
        "body": "stats_cdf_poisson(${1:par1}, ${2:par2}, ${3:which})$0"
    },
    "stats_cdf_t": {
        "prefix": "stats_cdf_t",
        "body": "stats_cdf_t(${1:par1}, ${2:par2}, ${3:which})$0"
    },
    "stats_cdf_uniform": {
        "prefix": "stats_cdf_uniform",
        "body": "stats_cdf_uniform(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_cdf_weibull": {
        "prefix": "stats_cdf_weibull",
        "body": "stats_cdf_weibull(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_covariance": {
        "prefix": "stats_covariance",
        "body": "stats_covariance(${1:a}, ${2:b})$0"
    },
    "stats_den_uniform": {
        "prefix": "stats_den_uniform",
        "body": "stats_den_uniform(${1:x}, ${2:a}, ${3:b})$0"
    },
    "stats_dens_beta": {
        "prefix": "stats_dens_beta",
        "body": "stats_dens_beta(${1:x}, ${2:a}, ${3:b})$0"
    },
    "stats_dens_cauchy": {
        "prefix": "stats_dens_cauchy",
        "body": "stats_dens_cauchy(${1:x}, ${2:ave}, ${3:stdev})$0"
    },
    "stats_dens_chisquare": {
        "prefix": "stats_dens_chisquare",
        "body": "stats_dens_chisquare(${1:x}, ${2:dfr})$0"
    },
    "stats_dens_exponential": {
        "prefix": "stats_dens_exponential",
        "body": "stats_dens_exponential(${1:x}, ${2:scale})$0"
    },
    "stats_dens_f": {
        "prefix": "stats_dens_f",
        "body": "stats_dens_f(${1:x}, ${2:dfr1}, ${3:dfr2})$0"
    },
    "stats_dens_gamma": {
        "prefix": "stats_dens_gamma",
        "body": "stats_dens_gamma(${1:x}, ${2:shape}, ${3:scale})$0"
    },
    "stats_dens_laplace": {
        "prefix": "stats_dens_laplace",
        "body": "stats_dens_laplace(${1:x}, ${2:ave}, ${3:stdev})$0"
    },
    "stats_dens_logistic": {
        "prefix": "stats_dens_logistic",
        "body": "stats_dens_logistic(${1:x}, ${2:ave}, ${3:stdev})$0"
    },
    "stats_dens_negative_binomial": {
        "prefix": "stats_dens_negative_binomial",
        "body": "stats_dens_negative_binomial(${1:x}, ${2:n}, ${3:pi})$0"
    },
    "stats_dens_normal": {
        "prefix": "stats_dens_normal",
        "body": "stats_dens_normal(${1:x}, ${2:ave}, ${3:stdev})$0"
    },
    "stats_dens_pmf_binomial": {
        "prefix": "stats_dens_pmf_binomial",
        "body": "stats_dens_pmf_binomial(${1:x}, ${2:n}, ${3:pi})$0"
    },
    "stats_dens_pmf_hypergeometric": {
        "prefix": "stats_dens_pmf_hypergeometric",
        "body": "stats_dens_pmf_hypergeometric(${1:n1}, ${2:n2}, ${3:N1}, ${4:N2})$0"
    },
    "stats_dens_pmf_poisson": {
        "prefix": "stats_dens_pmf_poisson",
        "body": "stats_dens_pmf_poisson(${1:x}, ${2:lb})$0"
    },
    "stats_dens_t": {
        "prefix": "stats_dens_t",
        "body": "stats_dens_t(${1:x}, ${2:dfr})$0"
    },
    "stats_dens_weibull": {
        "prefix": "stats_dens_weibull",
        "body": "stats_dens_weibull(${1:x}, ${2:a}, ${3:b})$0"
    },
    "stats_harmonic_mean": {
        "prefix": "stats_harmonic_mean",
        "body": "stats_harmonic_mean(${1:a})$0"
    },
    "stats_kurtosis": {
        "prefix": "stats_kurtosis",
        "body": "stats_kurtosis(${1:a})$0"
    },
    "stats_rand_gen_beta": {
        "prefix": "stats_rand_gen_beta",
        "body": "stats_rand_gen_beta(${1:a}, ${2:b})$0"
    },
    "stats_rand_gen_chisquare": {
        "prefix": "stats_rand_gen_chisquare",
        "body": "stats_rand_gen_chisquare(${1:df})$0"
    },
    "stats_rand_gen_exponential": {
        "prefix": "stats_rand_gen_exponential",
        "body": "stats_rand_gen_exponential(${1:av})$0"
    },
    "stats_rand_gen_f": {
        "prefix": "stats_rand_gen_f",
        "body": "stats_rand_gen_f(${1:dfn}, ${2:dfd})$0"
    },
    "stats_rand_gen_funiform": {
        "prefix": "stats_rand_gen_funiform",
        "body": "stats_rand_gen_funiform(${1:low}, ${2:high})$0"
    },
    "stats_rand_gen_gamma": {
        "prefix": "stats_rand_gen_gamma",
        "body": "stats_rand_gen_gamma(${1:a}, ${2:r})$0"
    },
    "stats_rand_gen_ibinomial": {
        "prefix": "stats_rand_gen_ibinomial",
        "body": "stats_rand_gen_ibinomial(${1:n}, ${2:pp})$0"
    },
    "stats_rand_gen_ibinomial_negative": {
        "prefix": "stats_rand_gen_ibinomial_negative",
        "body": "stats_rand_gen_ibinomial_negative(${1:n}, ${2:p})$0"
    },
    "stats_rand_gen_int": {
        "prefix": "stats_rand_gen_int",
        "body": "stats_rand_gen_int()$0"
    },
    "stats_rand_gen_ipoisson": {
        "prefix": "stats_rand_gen_ipoisson",
        "body": "stats_rand_gen_ipoisson(${1:mu})$0"
    },
    "stats_rand_gen_iuniform": {
        "prefix": "stats_rand_gen_iuniform",
        "body": "stats_rand_gen_iuniform(${1:low}, ${2:high})$0"
    },
    "stats_rand_gen_noncenral_chisquare": {
        "prefix": "stats_rand_gen_noncenral_chisquare",
        "body": "stats_rand_gen_noncenral_chisquare(${1:df}, ${2:xnonc})$0"
    },
    "stats_rand_gen_noncentral_f": {
        "prefix": "stats_rand_gen_noncentral_f",
        "body": "stats_rand_gen_noncentral_f(${1:dfn}, ${2:dfd}, ${3:xnonc})$0"
    },
    "stats_rand_gen_noncentral_t": {
        "prefix": "stats_rand_gen_noncentral_t",
        "body": "stats_rand_gen_noncentral_t(${1:df}, ${2:xnonc})$0"
    },
    "stats_rand_gen_normal": {
        "prefix": "stats_rand_gen_normal",
        "body": "stats_rand_gen_normal(${1:av}, ${2:sd})$0"
    },
    "stats_rand_gen_t": {
        "prefix": "stats_rand_gen_t",
        "body": "stats_rand_gen_t(${1:df})$0"
    },
    "stats_rand_get_seeds": {
        "prefix": "stats_rand_get_seeds",
        "body": "stats_rand_get_seeds()$0"
    },
    "stats_rand_phrase_to_seeds": {
        "prefix": "stats_rand_phrase_to_seeds",
        "body": "stats_rand_phrase_to_seeds(${1:phrase})$0"
    },
    "stats_rand_ranf": {
        "prefix": "stats_rand_ranf",
        "body": "stats_rand_ranf()$0"
    },
    "stats_rand_setall": {
        "prefix": "stats_rand_setall",
        "body": "stats_rand_setall(${1:iseed1}, ${2:iseed2})$0"
    },
    "stats_skew": {
        "prefix": "stats_skew",
        "body": "stats_skew(${1:a})$0"
    },
    "stats_standard_deviation": {
        "prefix": "stats_standard_deviation",
        "body": "stats_standard_deviation(${1:a})$0"
    },
    "stats_stat_binomial_coef": {
        "prefix": "stats_stat_binomial_coef",
        "body": "stats_stat_binomial_coef(${1:x}, ${2:n})$0"
    },
    "stats_stat_correlation": {
        "prefix": "stats_stat_correlation",
        "body": "stats_stat_correlation(${1:arr1}, ${2:arr2})$0"
    },
    "stats_stat_gennch": {
        "prefix": "stats_stat_gennch",
        "body": "stats_stat_gennch(${1:n})$0"
    },
    "stats_stat_independent_t": {
        "prefix": "stats_stat_independent_t",
        "body": "stats_stat_independent_t(${1:arr1}, ${2:arr2})$0"
    },
    "stats_stat_innerproduct": {
        "prefix": "stats_stat_innerproduct",
        "body": "stats_stat_innerproduct(${1:arr1}, ${2:arr2})$0"
    },
    "stats_stat_noncentral_t": {
        "prefix": "stats_stat_noncentral_t",
        "body": "stats_stat_noncentral_t(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})$0"
    },
    "stats_stat_paired_t": {
        "prefix": "stats_stat_paired_t",
        "body": "stats_stat_paired_t(${1:arr1}, ${2:arr2})$0"
    },
    "stats_stat_percentile": {
        "prefix": "stats_stat_percentile",
        "body": "stats_stat_percentile(${1:df}, ${2:xnonc})$0"
    },
    "stats_stat_powersum": {
        "prefix": "stats_stat_powersum",
        "body": "stats_stat_powersum(${1:arr}, ${2:power})$0"
    },
    "stats_variance": {
        "prefix": "stats_variance",
        "body": "stats_variance(${1:a})$0"
    },
    "stomp_connect_error": {
        "prefix": "stomp_connect_error",
        "body": "stomp_connect_error()$0"
    },
    "stomp_version": {
        "prefix": "stomp_version",
        "body": "stomp_version()$0"
    },
    "str_getcsv": {
        "prefix": "str_getcsv",
        "body": "str_getcsv(${1:input})$0"
    },
    "str_ireplace": {
        "prefix": "str_ireplace",
        "body": "str_ireplace(${1:search}, ${2:replace}, ${3:subject})$0"
    },
    "str_pad": {
        "prefix": "str_pad",
        "body": "str_pad(${1:input}, ${2:pad_length})$0"
    },
    "str_repeat": {
        "prefix": "str_repeat",
        "body": "str_repeat(${1:input}, ${2:multiplier})$0"
    },
    "str_replace": {
        "prefix": "str_replace",
        "body": "str_replace(${1:search}, ${2:replace}, ${3:subject})$0"
    },
    "str_rot13": {
        "prefix": "str_rot13",
        "body": "str_rot13(${1:str})$0"
    },
    "str_shuffle": {
        "prefix": "str_shuffle",
        "body": "str_shuffle(${1:str})$0"
    },
    "str_split": {
        "prefix": "str_split",
        "body": "str_split(${1:string})$0"
    },
    "str_word_count": {
        "prefix": "str_word_count",
        "body": "str_word_count(${1:string})$0"
    },
    "strcasecmp": {
        "prefix": "strcasecmp",
        "body": "strcasecmp(${1:str1}, ${2:str2})$0"
    },
    "strchr": {
        "prefix": "strchr",
        "body": "strchr()$0"
    },
    "strcmp": {
        "prefix": "strcmp",
        "body": "strcmp(${1:str1}, ${2:str2})$0"
    },
    "strcoll": {
        "prefix": "strcoll",
        "body": "strcoll(${1:str1}, ${2:str2})$0"
    },
    "strcspn": {
        "prefix": "strcspn",
        "body": "strcspn(${1:str1}, ${2:str2})$0"
    },
    "stream_bucket_append": {
        "prefix": "stream_bucket_append",
        "body": "stream_bucket_append(${1:brigade}, ${2:bucket})$0"
    },
    "stream_bucket_make_writeable": {
        "prefix": "stream_bucket_make_writeable",
        "body": "stream_bucket_make_writeable(${1:brigade})$0"
    },
    "stream_bucket_new": {
        "prefix": "stream_bucket_new",
        "body": "stream_bucket_new(${1:stream}, ${2:buffer})$0"
    },
    "stream_bucket_prepend": {
        "prefix": "stream_bucket_prepend",
        "body": "stream_bucket_prepend(${1:brigade}, ${2:bucket})$0"
    },
    "stream_context_create": {
        "prefix": "stream_context_create",
        "body": "stream_context_create()$0"
    },
    "stream_context_get_default": {
        "prefix": "stream_context_get_default",
        "body": "stream_context_get_default()$0"
    },
    "stream_context_get_options": {
        "prefix": "stream_context_get_options",
        "body": "stream_context_get_options(${1:stream_or_context})$0"
    },
    "stream_context_get_params": {
        "prefix": "stream_context_get_params",
        "body": "stream_context_get_params(${1:stream_or_context})$0"
    },
    "stream_context_set_default": {
        "prefix": "stream_context_set_default",
        "body": "stream_context_set_default(${1:options})$0"
    },
    "stream_context_set_option": {
        "prefix": "stream_context_set_option",
        "body": "stream_context_set_option(${1:stream_or_context}, ${2:wrapper}, ${3:option}, ${4:value})$0"
    },
    "stream_context_set_params": {
        "prefix": "stream_context_set_params",
        "body": "stream_context_set_params(${1:stream_or_context}, ${2:params})$0"
    },
    "stream_copy_to_stream": {
        "prefix": "stream_copy_to_stream",
        "body": "stream_copy_to_stream(${1:source}, ${2:dest})$0"
    },
    "stream_encoding": {
        "prefix": "stream_encoding",
        "body": "stream_encoding(${1:stream})$0"
    },
    "stream_filter_append": {
        "prefix": "stream_filter_append",
        "body": "stream_filter_append(${1:stream}, ${2:filtername})$0"
    },
    "stream_filter_prepend": {
        "prefix": "stream_filter_prepend",
        "body": "stream_filter_prepend(${1:stream}, ${2:filtername})$0"
    },
    "stream_filter_register": {
        "prefix": "stream_filter_register",
        "body": "stream_filter_register(${1:filtername}, ${2:classname})$0"
    },
    "stream_filter_remove": {
        "prefix": "stream_filter_remove",
        "body": "stream_filter_remove(${1:stream_filter})$0"
    },
    "stream_get_contents": {
        "prefix": "stream_get_contents",
        "body": "stream_get_contents(${1:handle})$0"
    },
    "stream_get_filters": {
        "prefix": "stream_get_filters",
        "body": "stream_get_filters()$0"
    },
    "stream_get_line": {
        "prefix": "stream_get_line",
        "body": "stream_get_line(${1:handle}, ${2:length})$0"
    },
    "stream_get_meta_data": {
        "prefix": "stream_get_meta_data",
        "body": "stream_get_meta_data(${1:stream})$0"
    },
    "stream_get_transports": {
        "prefix": "stream_get_transports",
        "body": "stream_get_transports()$0"
    },
    "stream_get_wrappers": {
        "prefix": "stream_get_wrappers",
        "body": "stream_get_wrappers()$0"
    },
    "stream_is_local": {
        "prefix": "stream_is_local",
        "body": "stream_is_local(${1:stream_or_url})$0"
    },
    "stream_notification_callback": {
        "prefix": "stream_notification_callback",
        "body": "stream_notification_callback(${1:notification_code}, ${2:severity}, ${3:message}, ${4:message_code}, ${5:bytes_transferred}, ${6:bytes_max})$0"
    },
    "stream_register_wrapper": {
        "prefix": "stream_register_wrapper",
        "body": "stream_register_wrapper()$0"
    },
    "stream_resolve_include_path": {
        "prefix": "stream_resolve_include_path",
        "body": "stream_resolve_include_path(${1:filename})$0"
    },
    "stream_select": {
        "prefix": "stream_select",
        "body": "stream_select(${1:read}, ${2:write}, ${3:except}, ${4:tv_sec})$0"
    },
    "stream_set_blocking": {
        "prefix": "stream_set_blocking",
        "body": "stream_set_blocking(${1:stream}, ${2:mode})$0"
    },
    "stream_set_read_buffer": {
        "prefix": "stream_set_read_buffer",
        "body": "stream_set_read_buffer(${1:stream}, ${2:buffer})$0"
    },
    "stream_set_timeout": {
        "prefix": "stream_set_timeout",
        "body": "stream_set_timeout(${1:stream}, ${2:seconds})$0"
    },
    "stream_set_write_buffer": {
        "prefix": "stream_set_write_buffer",
        "body": "stream_set_write_buffer(${1:stream}, ${2:buffer})$0"
    },
    "stream_socket_accept": {
        "prefix": "stream_socket_accept",
        "body": "stream_socket_accept(${1:server_socket})$0"
    },
    "stream_socket_client": {
        "prefix": "stream_socket_client",
        "body": "stream_socket_client(${1:remote_socket})$0"
    },
    "stream_socket_enable_crypto": {
        "prefix": "stream_socket_enable_crypto",
        "body": "stream_socket_enable_crypto(${1:stream}, ${2:enable})$0"
    },
    "stream_socket_get_name": {
        "prefix": "stream_socket_get_name",
        "body": "stream_socket_get_name(${1:handle}, ${2:want_peer})$0"
    },
    "stream_socket_pair": {
        "prefix": "stream_socket_pair",
        "body": "stream_socket_pair(${1:domain}, ${2:type}, ${3:protocol})$0"
    },
    "stream_socket_recvfrom": {
        "prefix": "stream_socket_recvfrom",
        "body": "stream_socket_recvfrom(${1:socket}, ${2:length})$0"
    },
    "stream_socket_sendto": {
        "prefix": "stream_socket_sendto",
        "body": "stream_socket_sendto(${1:socket}, ${2:data})$0"
    },
    "stream_socket_server": {
        "prefix": "stream_socket_server",
        "body": "stream_socket_server(${1:local_socket})$0"
    },
    "stream_socket_shutdown": {
        "prefix": "stream_socket_shutdown",
        "body": "stream_socket_shutdown(${1:stream}, ${2:how})$0"
    },
    "stream_supports_lock": {
        "prefix": "stream_supports_lock",
        "body": "stream_supports_lock(${1:stream})$0"
    },
    "stream_wrapper_register": {
        "prefix": "stream_wrapper_register",
        "body": "stream_wrapper_register(${1:protocol}, ${2:classname})$0"
    },
    "stream_wrapper_restore": {
        "prefix": "stream_wrapper_restore",
        "body": "stream_wrapper_restore(${1:protocol})$0"
    },
    "stream_wrapper_unregister": {
        "prefix": "stream_wrapper_unregister",
        "body": "stream_wrapper_unregister(${1:protocol})$0"
    },
    "strftime": {
        "prefix": "strftime",
        "body": "strftime(${1:format})$0"
    },
    "strip_tags": {
        "prefix": "strip_tags",
        "body": "strip_tags(${1:str})$0"
    },
    "stripcslashes": {
        "prefix": "stripcslashes",
        "body": "stripcslashes(${1:str})$0"
    },
    "stripos": {
        "prefix": "stripos",
        "body": "stripos(${1:haystack}, ${2:needle})$0"
    },
    "stripslashes": {
        "prefix": "stripslashes",
        "body": "stripslashes(${1:str})$0"
    },
    "stristr": {
        "prefix": "stristr",
        "body": "stristr(${1:haystack}, ${2:needle})$0"
    },
    "strlen": {
        "prefix": "strlen",
        "body": "strlen(${1:string})$0"
    },
    "panjang": {
        "prefix": "panjang",
        "body": "panjang(${1:string})$0"
    },
    "strnatcasecmp": {
        "prefix": "strnatcasecmp",
        "body": "strnatcasecmp(${1:str1}, ${2:str2})$0"
    },
    "strnatcmp": {
        "prefix": "strnatcmp",
        "body": "strnatcmp(${1:str1}, ${2:str2})$0"
    },
    "strncasecmp": {
        "prefix": "strncasecmp",
        "body": "strncasecmp(${1:str1}, ${2:str2}, ${3:len})$0"
    },
    "strncmp": {
        "prefix": "strncmp",
        "body": "strncmp(${1:str1}, ${2:str2}, ${3:len})$0"
    },
    "strpbrk": {
        "prefix": "strpbrk",
        "body": "strpbrk(${1:haystack}, ${2:char_list})$0"
    },
    "strpos": {
        "prefix": "strpos",
        "body": "strpos(${1:haystack}, ${2:needle})$0"
    },
    "strptime": {
        "prefix": "strptime",
        "body": "strptime(${1:date}, ${2:format})$0"
    },
    "strrchr": {
        "prefix": "strrchr",
        "body": "strrchr(${1:haystack}, ${2:needle})$0"
    },
    "strrev": {
        "prefix": "strrev",
        "body": "strrev(${1:string})$0"
    },
    "strripos": {
        "prefix": "strripos",
        "body": "strripos(${1:haystack}, ${2:needle})$0"
    },
    "strrpos": {
        "prefix": "strrpos",
        "body": "strrpos(${1:haystack}, ${2:needle})$0"
    },
    "strspn": {
        "prefix": "strspn",
        "body": "strspn(${1:subject}, ${2:mask})$0"
    },
    "strstr": {
        "prefix": "strstr",
        "body": "strstr(${1:haystack}, ${2:needle})$0"
    },
    "strtok": {
        "prefix": "strtok",
        "body": "strtok(${1:str}, ${2:token})$0"
    },
    "strtolower": {
        "prefix": "strtolower",
        "body": "strtolower(${1:str})$0"
    },
    "strtotime": {
        "prefix": "strtotime",
        "body": "strtotime(${1:time})$0"
    },
    "strtoupper": {
        "prefix": "strtoupper",
        "body": "strtoupper(${1:string})$0"
    },
    "strtr": {
        "prefix": "strtr",
        "body": "strtr(${1:str}, ${2:from}, ${3:to})$0"
    },
    "strval": {
        "prefix": "strval",
        "body": "strval(${1:var})$0"
    },
    "substr": {
        "prefix": "substr",
        "body": "substr(${1:string}, ${2:start})$0"
    },
    "substr_compare": {
        "prefix": "substr_compare",
        "body": "substr_compare(${1:main_str}, ${2:str}, ${3:offset})$0"
    },
    "substr_count": {
        "prefix": "substr_count",
        "body": "substr_count(${1:haystack}, ${2:needle})$0"
    },
    "substr_replace": {
        "prefix": "substr_replace",
        "body": "substr_replace(${1:string}, ${2:replacement}, ${3:start})$0"
    },
    "svn_add": {
        "prefix": "svn_add",
        "body": "svn_add(${1:path})$0"
    },
    "svn_auth_get_parameter": {
        "prefix": "svn_auth_get_parameter",
        "body": "svn_auth_get_parameter(${1:key})$0"
    },
    "svn_auth_set_parameter": {
        "prefix": "svn_auth_set_parameter",
        "body": "svn_auth_set_parameter(${1:key}, ${2:value})$0"
    },
    "svn_blame": {
        "prefix": "svn_blame",
        "body": "svn_blame(${1:repository_url})$0"
    },
    "svn_cat": {
        "prefix": "svn_cat",
        "body": "svn_cat(${1:repos_url})$0"
    },
    "svn_checkout": {
        "prefix": "svn_checkout",
        "body": "svn_checkout(${1:repos}, ${2:targetpath})$0"
    },
    "svn_cleanup": {
        "prefix": "svn_cleanup",
        "body": "svn_cleanup(${1:workingdir})$0"
    },
    "svn_client_version": {
        "prefix": "svn_client_version",
        "body": "svn_client_version()$0"
    },
    "svn_commit": {
        "prefix": "svn_commit",
        "body": "svn_commit(${1:log}, ${2:targets})$0"
    },
    "svn_delete": {
        "prefix": "svn_delete",
        "body": "svn_delete(${1:path})$0"
    },
    "svn_diff": {
        "prefix": "svn_diff",
        "body": "svn_diff(${1:path1}, ${2:rev1}, ${3:path2}, ${4:rev2})$0"
    },
    "svn_export": {
        "prefix": "svn_export",
        "body": "svn_export(${1:frompath}, ${2:topath})$0"
    },
    "svn_fs_abort_txn": {
        "prefix": "svn_fs_abort_txn",
        "body": "svn_fs_abort_txn(${1:txn})$0"
    },
    "svn_fs_apply_text": {
        "prefix": "svn_fs_apply_text",
        "body": "svn_fs_apply_text(${1:root}, ${2:path})$0"
    },
    "svn_fs_begin_txn2": {
        "prefix": "svn_fs_begin_txn2",
        "body": "svn_fs_begin_txn2(${1:repos}, ${2:rev})$0"
    },
    "svn_fs_change_node_prop": {
        "prefix": "svn_fs_change_node_prop",
        "body": "svn_fs_change_node_prop(${1:root}, ${2:path}, ${3:name}, ${4:value})$0"
    },
    "svn_fs_check_path": {
        "prefix": "svn_fs_check_path",
        "body": "svn_fs_check_path(${1:fsroot}, ${2:path})$0"
    },
    "svn_fs_contents_changed": {
        "prefix": "svn_fs_contents_changed",
        "body": "svn_fs_contents_changed(${1:root1}, ${2:path1}, ${3:root2}, ${4:path2})$0"
    },
    "svn_fs_copy": {
        "prefix": "svn_fs_copy",
        "body": "svn_fs_copy(${1:from_root}, ${2:from_path}, ${3:to_root}, ${4:to_path})$0"
    },
    "svn_fs_delete": {
        "prefix": "svn_fs_delete",
        "body": "svn_fs_delete(${1:root}, ${2:path})$0"
    },
    "svn_fs_dir_entries": {
        "prefix": "svn_fs_dir_entries",
        "body": "svn_fs_dir_entries(${1:fsroot}, ${2:path})$0"
    },
    "svn_fs_file_contents": {
        "prefix": "svn_fs_file_contents",
        "body": "svn_fs_file_contents(${1:fsroot}, ${2:path})$0"
    },
    "svn_fs_file_length": {
        "prefix": "svn_fs_file_length",
        "body": "svn_fs_file_length(${1:fsroot}, ${2:path})$0"
    },
    "svn_fs_is_dir": {
        "prefix": "svn_fs_is_dir",
        "body": "svn_fs_is_dir(${1:root}, ${2:path})$0"
    },
    "svn_fs_is_file": {
        "prefix": "svn_fs_is_file",
        "body": "svn_fs_is_file(${1:root}, ${2:path})$0"
    },
    "svn_fs_make_dir": {
        "prefix": "svn_fs_make_dir",
        "body": "svn_fs_make_dir(${1:root}, ${2:path})$0"
    },
    "svn_fs_make_file": {
        "prefix": "svn_fs_make_file",
        "body": "svn_fs_make_file(${1:root}, ${2:path})$0"
    },
    "svn_fs_node_created_rev": {
        "prefix": "svn_fs_node_created_rev",
        "body": "svn_fs_node_created_rev(${1:fsroot}, ${2:path})$0"
    },
    "svn_fs_node_prop": {
        "prefix": "svn_fs_node_prop",
        "body": "svn_fs_node_prop(${1:fsroot}, ${2:path}, ${3:propname})$0"
    },
    "svn_fs_props_changed": {
        "prefix": "svn_fs_props_changed",
        "body": "svn_fs_props_changed(${1:root1}, ${2:path1}, ${3:root2}, ${4:path2})$0"
    },
    "svn_fs_revision_prop": {
        "prefix": "svn_fs_revision_prop",
        "body": "svn_fs_revision_prop(${1:fs}, ${2:revnum}, ${3:propname})$0"
    },
    "svn_fs_revision_root": {
        "prefix": "svn_fs_revision_root",
        "body": "svn_fs_revision_root(${1:fs}, ${2:revnum})$0"
    },
    "svn_fs_txn_root": {
        "prefix": "svn_fs_txn_root",
        "body": "svn_fs_txn_root(${1:txn})$0"
    },
    "svn_fs_youngest_rev": {
        "prefix": "svn_fs_youngest_rev",
        "body": "svn_fs_youngest_rev(${1:fs})$0"
    },
    "svn_import": {
        "prefix": "svn_import",
        "body": "svn_import(${1:path}, ${2:url}, ${3:nonrecursive})$0"
    },
    "svn_log": {
        "prefix": "svn_log",
        "body": "svn_log(${1:repos_url})$0"
    },
    "svn_ls": {
        "prefix": "svn_ls",
        "body": "svn_ls(${1:repos_url})$0"
    },
    "svn_mkdir": {
        "prefix": "svn_mkdir",
        "body": "svn_mkdir(${1:path})$0"
    },
    "svn_repos_create": {
        "prefix": "svn_repos_create",
        "body": "svn_repos_create(${1:path})$0"
    },
    "svn_repos_fs": {
        "prefix": "svn_repos_fs",
        "body": "svn_repos_fs(${1:repos})$0"
    },
    "svn_repos_fs_begin_txn_for_commit": {
        "prefix": "svn_repos_fs_begin_txn_for_commit",
        "body": "svn_repos_fs_begin_txn_for_commit(${1:repos}, ${2:rev}, ${3:author}, ${4:log_msg})$0"
    },
    "svn_repos_fs_commit_txn": {
        "prefix": "svn_repos_fs_commit_txn",
        "body": "svn_repos_fs_commit_txn(${1:txn})$0"
    },
    "svn_repos_hotcopy": {
        "prefix": "svn_repos_hotcopy",
        "body": "svn_repos_hotcopy(${1:repospath}, ${2:destpath}, ${3:cleanlogs})$0"
    },
    "svn_repos_open": {
        "prefix": "svn_repos_open",
        "body": "svn_repos_open(${1:path})$0"
    },
    "svn_repos_recover": {
        "prefix": "svn_repos_recover",
        "body": "svn_repos_recover(${1:path})$0"
    },
    "svn_revert": {
        "prefix": "svn_revert",
        "body": "svn_revert(${1:path})$0"
    },
    "svn_status": {
        "prefix": "svn_status",
        "body": "svn_status(${1:path})$0"
    },
    "svn_update": {
        "prefix": "svn_update",
        "body": "svn_update(${1:path})$0"
    },
    "swf_actiongeturl": {
        "prefix": "swf_actiongeturl",
        "body": "swf_actiongeturl(${1:url}, ${2:target})$0"
    },
    "swf_actiongotoframe": {
        "prefix": "swf_actiongotoframe",
        "body": "swf_actiongotoframe(${1:framenumber})$0"
    },
    "swf_actiongotolabel": {
        "prefix": "swf_actiongotolabel",
        "body": "swf_actiongotolabel(${1:label})$0"
    },
    "swf_actionnextframe": {
        "prefix": "swf_actionnextframe",
        "body": "swf_actionnextframe()$0"
    },
    "swf_actionplay": {
        "prefix": "swf_actionplay",
        "body": "swf_actionplay()$0"
    },
    "swf_actionprevframe": {
        "prefix": "swf_actionprevframe",
        "body": "swf_actionprevframe()$0"
    },
    "swf_actionsettarget": {
        "prefix": "swf_actionsettarget",
        "body": "swf_actionsettarget(${1:target})$0"
    },
    "swf_actionstop": {
        "prefix": "swf_actionstop",
        "body": "swf_actionstop()$0"
    },
    "swf_actiontogglequality": {
        "prefix": "swf_actiontogglequality",
        "body": "swf_actiontogglequality()$0"
    },
    "swf_actionwaitforframe": {
        "prefix": "swf_actionwaitforframe",
        "body": "swf_actionwaitforframe(${1:framenumber}, ${2:skipcount})$0"
    },
    "swf_addbuttonrecord": {
        "prefix": "swf_addbuttonrecord",
        "body": "swf_addbuttonrecord(${1:states}, ${2:shapeid}, ${3:depth})$0"
    },
    "swf_addcolor": {
        "prefix": "swf_addcolor",
        "body": "swf_addcolor(${1:r}, ${2:g}, ${3:b}, ${4:a})$0"
    },
    "swf_closefile": {
        "prefix": "swf_closefile",
        "body": "swf_closefile()$0"
    },
    "swf_definebitmap": {
        "prefix": "swf_definebitmap",
        "body": "swf_definebitmap(${1:objid}, ${2:image_name})$0"
    },
    "swf_definefont": {
        "prefix": "swf_definefont",
        "body": "swf_definefont(${1:fontid}, ${2:fontname})$0"
    },
    "swf_defineline": {
        "prefix": "swf_defineline",
        "body": "swf_defineline(${1:objid}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:width})$0"
    },
    "swf_definepoly": {
        "prefix": "swf_definepoly",
        "body": "swf_definepoly(${1:objid}, ${2:coords}, ${3:npoints}, ${4:width})$0"
    },
    "swf_definerect": {
        "prefix": "swf_definerect",
        "body": "swf_definerect(${1:objid}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:width})$0"
    },
    "swf_definetext": {
        "prefix": "swf_definetext",
        "body": "swf_definetext(${1:objid}, ${2:str}, ${3:docenter})$0"
    },
    "swf_endbutton": {
        "prefix": "swf_endbutton",
        "body": "swf_endbutton()$0"
    },
    "swf_enddoaction": {
        "prefix": "swf_enddoaction",
        "body": "swf_enddoaction()$0"
    },
    "swf_endshape": {
        "prefix": "swf_endshape",
        "body": "swf_endshape()$0"
    },
    "swf_endsymbol": {
        "prefix": "swf_endsymbol",
        "body": "swf_endsymbol()$0"
    },
    "swf_fontsize": {
        "prefix": "swf_fontsize",
        "body": "swf_fontsize(${1:size})$0"
    },
    "swf_fontslant": {
        "prefix": "swf_fontslant",
        "body": "swf_fontslant(${1:slant})$0"
    },
    "swf_fonttracking": {
        "prefix": "swf_fonttracking",
        "body": "swf_fonttracking(${1:tracking})$0"
    },
    "swf_getbitmapinfo": {
        "prefix": "swf_getbitmapinfo",
        "body": "swf_getbitmapinfo(${1:bitmapid})$0"
    },
    "swf_getfontinfo": {
        "prefix": "swf_getfontinfo",
        "body": "swf_getfontinfo()$0"
    },
    "swf_getframe": {
        "prefix": "swf_getframe",
        "body": "swf_getframe()$0"
    },
    "swf_labelframe": {
        "prefix": "swf_labelframe",
        "body": "swf_labelframe(${1:name})$0"
    },
    "swf_lookat": {
        "prefix": "swf_lookat",
        "body": "swf_lookat(${1:view_x}, ${2:view_y}, ${3:view_z}, ${4:reference_x}, ${5:reference_y}, ${6:reference_z}, ${7:twist})$0"
    },
    "swf_modifyobject": {
        "prefix": "swf_modifyobject",
        "body": "swf_modifyobject(${1:depth}, ${2:how})$0"
    },
    "swf_mulcolor": {
        "prefix": "swf_mulcolor",
        "body": "swf_mulcolor(${1:r}, ${2:g}, ${3:b}, ${4:a})$0"
    },
    "swf_nextid": {
        "prefix": "swf_nextid",
        "body": "swf_nextid()$0"
    },
    "swf_oncondition": {
        "prefix": "swf_oncondition",
        "body": "swf_oncondition(${1:transition})$0"
    },
    "swf_openfile": {
        "prefix": "swf_openfile",
        "body": "swf_openfile(${1:filename}, ${2:width}, ${3:height}, ${4:framerate}, ${5:r}, ${6:g}, ${7:b})$0"
    },
    "swf_ortho": {
        "prefix": "swf_ortho",
        "body": "swf_ortho(${1:xmin}, ${2:xmax}, ${3:ymin}, ${4:ymax}, ${5:zmin}, ${6:zmax})$0"
    },
    "swf_ortho2": {
        "prefix": "swf_ortho2",
        "body": "swf_ortho2(${1:xmin}, ${2:xmax}, ${3:ymin}, ${4:ymax})$0"
    },
    "swf_perspective": {
        "prefix": "swf_perspective",
        "body": "swf_perspective(${1:fovy}, ${2:aspect}, ${3:near}, ${4:far})$0"
    },
    "swf_placeobject": {
        "prefix": "swf_placeobject",
        "body": "swf_placeobject(${1:objid}, ${2:depth})$0"
    },
    "swf_polarview": {
        "prefix": "swf_polarview",
        "body": "swf_polarview(${1:dist}, ${2:azimuth}, ${3:incidence}, ${4:twist})$0"
    },
    "swf_popmatrix": {
        "prefix": "swf_popmatrix",
        "body": "swf_popmatrix()$0"
    },
    "swf_posround": {
        "prefix": "swf_posround",
        "body": "swf_posround(${1:round})$0"
    },
    "swf_pushmatrix": {
        "prefix": "swf_pushmatrix",
        "body": "swf_pushmatrix()$0"
    },
    "swf_removeobject": {
        "prefix": "swf_removeobject",
        "body": "swf_removeobject(${1:depth})$0"
    },
    "swf_rotate": {
        "prefix": "swf_rotate",
        "body": "swf_rotate(${1:angle}, ${2:axis})$0"
    },
    "swf_scale": {
        "prefix": "swf_scale",
        "body": "swf_scale(${1:x}, ${2:y}, ${3:z})$0"
    },
    "swf_setfont": {
        "prefix": "swf_setfont",
        "body": "swf_setfont(${1:fontid})$0"
    },
    "swf_setframe": {
        "prefix": "swf_setframe",
        "body": "swf_setframe(${1:framenumber})$0"
    },
    "swf_shapearc": {
        "prefix": "swf_shapearc",
        "body": "swf_shapearc(${1:x}, ${2:y}, ${3:r}, ${4:ang1}, ${5:ang2})$0"
    },
    "swf_shapecurveto": {
        "prefix": "swf_shapecurveto",
        "body": "swf_shapecurveto(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2})$0"
    },
    "swf_shapecurveto3": {
        "prefix": "swf_shapecurveto3",
        "body": "swf_shapecurveto3(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3})$0"
    },
    "swf_shapefillbitmapclip": {
        "prefix": "swf_shapefillbitmapclip",
        "body": "swf_shapefillbitmapclip(${1:bitmapid})$0"
    },
    "swf_shapefillbitmaptile": {
        "prefix": "swf_shapefillbitmaptile",
        "body": "swf_shapefillbitmaptile(${1:bitmapid})$0"
    },
    "swf_shapefilloff": {
        "prefix": "swf_shapefilloff",
        "body": "swf_shapefilloff()$0"
    },
    "swf_shapefillsolid": {
        "prefix": "swf_shapefillsolid",
        "body": "swf_shapefillsolid(${1:r}, ${2:g}, ${3:b}, ${4:a})$0"
    },
    "swf_shapelinesolid": {
        "prefix": "swf_shapelinesolid",
        "body": "swf_shapelinesolid(${1:r}, ${2:g}, ${3:b}, ${4:a}, ${5:width})$0"
    },
    "swf_shapelineto": {
        "prefix": "swf_shapelineto",
        "body": "swf_shapelineto(${1:x}, ${2:y})$0"
    },
    "swf_shapemoveto": {
        "prefix": "swf_shapemoveto",
        "body": "swf_shapemoveto(${1:x}, ${2:y})$0"
    },
    "swf_showframe": {
        "prefix": "swf_showframe",
        "body": "swf_showframe()$0"
    },
    "swf_startbutton": {
        "prefix": "swf_startbutton",
        "body": "swf_startbutton(${1:objid}, ${2:type})$0"
    },
    "swf_startdoaction": {
        "prefix": "swf_startdoaction",
        "body": "swf_startdoaction()$0"
    },
    "swf_startshape": {
        "prefix": "swf_startshape",
        "body": "swf_startshape(${1:objid})$0"
    },
    "swf_startsymbol": {
        "prefix": "swf_startsymbol",
        "body": "swf_startsymbol(${1:objid})$0"
    },
    "swf_textwidth": {
        "prefix": "swf_textwidth",
        "body": "swf_textwidth(${1:str})$0"
    },
    "swf_translate": {
        "prefix": "swf_translate",
        "body": "swf_translate(${1:x}, ${2:y}, ${3:z})$0"
    },
    "swf_viewport": {
        "prefix": "swf_viewport",
        "body": "swf_viewport(${1:xmin}, ${2:xmax}, ${3:ymin}, ${4:ymax})$0"
    },
    "SWFSound": {
        "prefix": "SWFSound",
        "body": "SWFSound(${1:filename})$0"
    },
    "sybase_affected_rows": {
        "prefix": "sybase_affected_rows",
        "body": "sybase_affected_rows()$0"
    },
    "sybase_close": {
        "prefix": "sybase_close",
        "body": "sybase_close()$0"
    },
    "sybase_connect": {
        "prefix": "sybase_connect",
        "body": "sybase_connect()$0"
    },
    "sybase_data_seek": {
        "prefix": "sybase_data_seek",
        "body": "sybase_data_seek(${1:result_identifier}, ${2:row_number})$0"
    },
    "sybase_deadlock_retry_count": {
        "prefix": "sybase_deadlock_retry_count",
        "body": "sybase_deadlock_retry_count(${1:retry_count})$0"
    },
    "sybase_fetch_array": {
        "prefix": "sybase_fetch_array",
        "body": "sybase_fetch_array(${1:result})$0"
    },
    "sybase_fetch_assoc": {
        "prefix": "sybase_fetch_assoc",
        "body": "sybase_fetch_assoc(${1:result})$0"
    },
    "sybase_fetch_field": {
        "prefix": "sybase_fetch_field",
        "body": "sybase_fetch_field(${1:result})$0"
    },
    "sybase_fetch_object": {
        "prefix": "sybase_fetch_object",
        "body": "sybase_fetch_object(${1:result})$0"
    },
    "sybase_fetch_row": {
        "prefix": "sybase_fetch_row",
        "body": "sybase_fetch_row(${1:result})$0"
    },
    "sybase_field_seek": {
        "prefix": "sybase_field_seek",
        "body": "sybase_field_seek(${1:result}, ${2:field_offset})$0"
    },
    "sybase_free_result": {
        "prefix": "sybase_free_result",
        "body": "sybase_free_result(${1:result})$0"
    },
    "sybase_get_last_message": {
        "prefix": "sybase_get_last_message",
        "body": "sybase_get_last_message()$0"
    },
    "sybase_min_client_severity": {
        "prefix": "sybase_min_client_severity",
        "body": "sybase_min_client_severity(${1:severity})$0"
    },
    "sybase_min_error_severity": {
        "prefix": "sybase_min_error_severity",
        "body": "sybase_min_error_severity(${1:severity})$0"
    },
    "sybase_min_message_severity": {
        "prefix": "sybase_min_message_severity",
        "body": "sybase_min_message_severity(${1:severity})$0"
    },
    "sybase_min_server_severity": {
        "prefix": "sybase_min_server_severity",
        "body": "sybase_min_server_severity(${1:severity})$0"
    },
    "sybase_num_fields": {
        "prefix": "sybase_num_fields",
        "body": "sybase_num_fields(${1:result})$0"
    },
    "sybase_num_rows": {
        "prefix": "sybase_num_rows",
        "body": "sybase_num_rows(${1:result})$0"
    },
    "sybase_pconnect": {
        "prefix": "sybase_pconnect",
        "body": "sybase_pconnect()$0"
    },
    "sybase_query": {
        "prefix": "sybase_query",
        "body": "sybase_query(${1:query})$0"
    },
    "sybase_result": {
        "prefix": "sybase_result",
        "body": "sybase_result(${1:result}, ${2:row}, ${3:field})$0"
    },
    "sybase_select_db": {
        "prefix": "sybase_select_db",
        "body": "sybase_select_db(${1:database_name})$0"
    },
    "sybase_set_message_handler": {
        "prefix": "sybase_set_message_handler",
        "body": "sybase_set_message_handler(${1:handler})$0"
    },
    "sybase_unbuffered_query": {
        "prefix": "sybase_unbuffered_query",
        "body": "sybase_unbuffered_query(${1:query}, ${2:link_identifier})$0"
    },
    "symlink": {
        "prefix": "symlink",
        "body": "symlink(${1:target}, ${2:link})$0"
    },
    "sys_get_temp_dir": {
        "prefix": "sys_get_temp_dir",
        "body": "sys_get_temp_dir()$0"
    },
    "sys_getloadavg": {
        "prefix": "sys_getloadavg",
        "body": "sys_getloadavg()$0"
    },
    "syslog": {
        "prefix": "syslog",
        "body": "syslog(${1:priority}, ${2:message})$0"
    },
    "system": {
        "prefix": "system",
        "body": "system(${1:command})$0"
    },
    "tan": {
        "prefix": "tan",
        "body": "tan(${1:arg})$0"
    },
    "tanh": {
        "prefix": "tanh",
        "body": "tanh(${1:arg})$0"
    },
    "tcpwrap_check": {
        "prefix": "tcpwrap_check",
        "body": "tcpwrap_check(${1:daemon}, ${2:address})$0"
    },
    "tempnam": {
        "prefix": "tempnam",
        "body": "tempnam(${1:dir}, ${2:prefix})$0"
    },
    "textdomain": {
        "prefix": "textdomain",
        "body": "textdomain(${1:text_domain})$0"
    },
    "tidy_access_count": {
        "prefix": "tidy_access_count",
        "body": "tidy_access_count(${1:object})$0"
    },
    "tidy_config_count": {
        "prefix": "tidy_config_count",
        "body": "tidy_config_count(${1:object})$0"
    },
    "tidy_error_count": {
        "prefix": "tidy_error_count",
        "body": "tidy_error_count(${1:object})$0"
    },
    "tidy_get_error_buffer": {
        "prefix": "tidy_get_error_buffer",
        "body": "tidy_get_error_buffer(${1:object})$0"
    },
    "tidy_get_output": {
        "prefix": "tidy_get_output",
        "body": "tidy_get_output(${1:object})$0"
    },
    "tidy_load_config": {
        "prefix": "tidy_load_config",
        "body": "tidy_load_config(${1:filename}, ${2:encoding})$0"
    },
    "tidy_reset_config": {
        "prefix": "tidy_reset_config",
        "body": "tidy_reset_config()$0"
    },
    "tidy_save_config": {
        "prefix": "tidy_save_config",
        "body": "tidy_save_config(${1:filename})$0"
    },
    "tidy_set_encoding": {
        "prefix": "tidy_set_encoding",
        "body": "tidy_set_encoding(${1:encoding})$0"
    },
    "tidy_setopt": {
        "prefix": "tidy_setopt",
        "body": "tidy_setopt(${1:option}, ${2:value})$0"
    },
    "tidy_warning_count": {
        "prefix": "tidy_warning_count",
        "body": "tidy_warning_count(${1:object})$0"
    },
    "time": {
        "prefix": "time",
        "body": "time()$0"
    },
    "time_nanosleep": {
        "prefix": "time_nanosleep",
        "body": "time_nanosleep(${1:seconds}, ${2:nanoseconds})$0"
    },
    "time_sleep_until": {
        "prefix": "time_sleep_until",
        "body": "time_sleep_until(${1:timestamp})$0"
    },
    "timezone_abbreviations_list": {
        "prefix": "timezone_abbreviations_list",
        "body": "timezone_abbreviations_list()$0"
    },
    "timezone_identifiers_list": {
        "prefix": "timezone_identifiers_list",
        "body": "timezone_identifiers_list()$0"
    },
    "timezone_location_get": {
        "prefix": "timezone_location_get",
        "body": "timezone_location_get()$0"
    },
    "timezone_name_from_abbr": {
        "prefix": "timezone_name_from_abbr",
        "body": "timezone_name_from_abbr(${1:abbr})$0"
    },
    "timezone_name_get": {
        "prefix": "timezone_name_get",
        "body": "timezone_name_get()$0"
    },
    "timezone_offset_get": {
        "prefix": "timezone_offset_get",
        "body": "timezone_offset_get()$0"
    },
    "timezone_open": {
        "prefix": "timezone_open",
        "body": "timezone_open()$0"
    },
    "timezone_transitions_get": {
        "prefix": "timezone_transitions_get",
        "body": "timezone_transitions_get()$0"
    },
    "timezone_version_get": {
        "prefix": "timezone_version_get",
        "body": "timezone_version_get()$0"
    },
    "tmpfile": {
        "prefix": "tmpfile",
        "body": "tmpfile()$0"
    },
    "token_get_all": {
        "prefix": "token_get_all",
        "body": "token_get_all(${1:source})$0"
    },
    "token_name": {
        "prefix": "token_name",
        "body": "token_name(${1:token})$0"
    },
    "touch": {
        "prefix": "touch",
        "body": "touch(${1:filename})$0"
    },
    "trigger_error": {
        "prefix": "trigger_error",
        "body": "trigger_error(${1:error_msg})$0"
    },
    "trim": {
        "prefix": "trim",
        "body": "trim(${1:str})$0"
    },
    "uasort": {
        "prefix": "uasort",
        "body": "uasort(${1:array}, ${2:cmp_function})$0"
    },
    "ucfirst": {
        "prefix": "ucfirst",
        "body": "ucfirst(${1:str})$0"
    },
    "ucwords": {
        "prefix": "ucwords",
        "body": "ucwords(${1:str})$0"
    },
    "udm_add_search_limit": {
        "prefix": "udm_add_search_limit",
        "body": "udm_add_search_limit(${1:agent}, ${2:var}, ${3:val})$0"
    },
    "udm_alloc_agent": {
        "prefix": "udm_alloc_agent",
        "body": "udm_alloc_agent(${1:dbaddr})$0"
    },
    "udm_alloc_agent_array": {
        "prefix": "udm_alloc_agent_array",
        "body": "udm_alloc_agent_array(${1:databases})$0"
    },
    "udm_api_version": {
        "prefix": "udm_api_version",
        "body": "udm_api_version()$0"
    },
    "udm_cat_list": {
        "prefix": "udm_cat_list",
        "body": "udm_cat_list(${1:agent}, ${2:category})$0"
    },
    "udm_cat_path": {
        "prefix": "udm_cat_path",
        "body": "udm_cat_path(${1:agent}, ${2:category})$0"
    },
    "udm_check_charset": {
        "prefix": "udm_check_charset",
        "body": "udm_check_charset(${1:agent}, ${2:charset})$0"
    },
    "udm_check_stored": {
        "prefix": "udm_check_stored",
        "body": "udm_check_stored(${1:agent}, ${2:link}, ${3:doc_id})$0"
    },
    "udm_clear_search_limits": {
        "prefix": "udm_clear_search_limits",
        "body": "udm_clear_search_limits(${1:agent})$0"
    },
    "udm_close_stored": {
        "prefix": "udm_close_stored",
        "body": "udm_close_stored(${1:agent}, ${2:link})$0"
    },
    "udm_crc32": {
        "prefix": "udm_crc32",
        "body": "udm_crc32(${1:agent}, ${2:str})$0"
    },
    "udm_errno": {
        "prefix": "udm_errno",
        "body": "udm_errno(${1:agent})$0"
    },
    "udm_error": {
        "prefix": "udm_error",
        "body": "udm_error(${1:agent})$0"
    },
    "udm_find": {
        "prefix": "udm_find",
        "body": "udm_find(${1:agent}, ${2:query})$0"
    },
    "udm_free_agent": {
        "prefix": "udm_free_agent",
        "body": "udm_free_agent(${1:agent})$0"
    },
    "udm_free_ispell_data": {
        "prefix": "udm_free_ispell_data",
        "body": "udm_free_ispell_data(${1:agent})$0"
    },
    "udm_free_res": {
        "prefix": "udm_free_res",
        "body": "udm_free_res(${1:res})$0"
    },
    "udm_get_doc_count": {
        "prefix": "udm_get_doc_count",
        "body": "udm_get_doc_count(${1:agent})$0"
    },
    "udm_get_res_field": {
        "prefix": "udm_get_res_field",
        "body": "udm_get_res_field(${1:res}, ${2:row}, ${3:field})$0"
    },
    "udm_get_res_param": {
        "prefix": "udm_get_res_param",
        "body": "udm_get_res_param(${1:res}, ${2:param})$0"
    },
    "udm_hash32": {
        "prefix": "udm_hash32",
        "body": "udm_hash32(${1:agent}, ${2:str})$0"
    },
    "udm_load_ispell_data": {
        "prefix": "udm_load_ispell_data",
        "body": "udm_load_ispell_data(${1:agent}, ${2:var}, ${3:val1}, ${4:val2}, ${5:flag})$0"
    },
    "udm_open_stored": {
        "prefix": "udm_open_stored",
        "body": "udm_open_stored(${1:agent}, ${2:storedaddr})$0"
    },
    "udm_set_agent_param": {
        "prefix": "udm_set_agent_param",
        "body": "udm_set_agent_param(${1:agent}, ${2:var}, ${3:val})$0"
    },
    "uksort": {
        "prefix": "uksort",
        "body": "uksort(${1:array}, ${2:cmp_function})$0"
    },
    "umask": {
        "prefix": "umask",
        "body": "umask()$0"
    },
    "uniqid": {
        "prefix": "uniqid",
        "body": "uniqid()$0"
    },
    "unixtojd": {
        "prefix": "unixtojd",
        "body": "unixtojd()$0"
    },
    "unlink": {
        "prefix": "unlink",
        "body": "unlink(${1:filename})$0"
    },
    "unpack": {
        "prefix": "unpack",
        "body": "unpack(${1:format}, ${2:data})$0"
    },
    "unregister_tick_function": {
        "prefix": "unregister_tick_function",
        "body": "unregister_tick_function(${1:function_name})$0"
    },
    "unserialize": {
        "prefix": "unserialize",
        "body": "unserialize(${1:str})$0"
    },
    "unset": {
        "prefix": "unset",
        "body": "hapus(${1:var})$0"
    },
    "hapus": {
        "prefix": "hapus",
        "body": "hapus(${1:var})$0"
    },
    "urldecode": {
        "prefix": "urldecode",
        "body": "urldecode(${1:str})$0"
    },
    "urlencode": {
        "prefix": "urlencode",
        "body": "urlencode(${1:str})$0"
    },
    "use_soap_error_handler": {
        "prefix": "use_soap_error_handler",
        "body": "use_soap_error_handler()$0"
    },
    "user_error": {
        "prefix": "user_error",
        "body": "user_error()$0"
    },
    "usleep": {
        "prefix": "usleep",
        "body": "usleep(${1:micro_seconds})$0"
    },
    "usort": {
        "prefix": "usort",
        "body": "usort(${1:array}, ${2:cmp_function})$0"
    },
    "utf8_decode": {
        "prefix": "utf8_decode",
        "body": "utf8_decode(${1:data})$0"
    },
    "utf8_encode": {
        "prefix": "utf8_encode",
        "body": "utf8_encode(${1:data})$0"
    },
    "var_dump": {
        "prefix": "var_dump",
        "body": "cetak_variabel(${1:expression})$0"
    },
    "cetak_variabel": {
        "prefix": "cetak_variabel",
        "body": "cetak_variabel(${1:expression})$0"
    },
    "var_export": {
        "prefix": "var_export",
        "body": "var_export(${1:expression})$0"
    },
    "variant_abs": {
        "prefix": "variant_abs",
        "body": "variant_abs(${1:val})$0"
    },
    "variant_add": {
        "prefix": "variant_add",
        "body": "variant_add(${1:left}, ${2:right})$0"
    },
    "variant_and": {
        "prefix": "variant_and",
        "body": "variant_and(${1:left}, ${2:right})$0"
    },
    "variant_cast": {
        "prefix": "variant_cast",
        "body": "variant_cast(${1:variant}, ${2:type})$0"
    },
    "variant_cat": {
        "prefix": "variant_cat",
        "body": "variant_cat(${1:left}, ${2:right})$0"
    },
    "variant_cmp": {
        "prefix": "variant_cmp",
        "body": "variant_cmp(${1:left}, ${2:right})$0"
    },
    "variant_date_from_timestamp": {
        "prefix": "variant_date_from_timestamp",
        "body": "variant_date_from_timestamp(${1:timestamp})$0"
    },
    "variant_date_to_timestamp": {
        "prefix": "variant_date_to_timestamp",
        "body": "variant_date_to_timestamp(${1:variant})$0"
    },
    "variant_div": {
        "prefix": "variant_div",
        "body": "variant_div(${1:left}, ${2:right})$0"
    },
    "variant_eqv": {
        "prefix": "variant_eqv",
        "body": "variant_eqv(${1:left}, ${2:right})$0"
    },
    "variant_fix": {
        "prefix": "variant_fix",
        "body": "variant_fix(${1:variant})$0"
    },
    "variant_get_type": {
        "prefix": "variant_get_type",
        "body": "variant_get_type(${1:variant})$0"
    },
    "variant_idiv": {
        "prefix": "variant_idiv",
        "body": "variant_idiv(${1:left}, ${2:right})$0"
    },
    "variant_imp": {
        "prefix": "variant_imp",
        "body": "variant_imp(${1:left}, ${2:right})$0"
    },
    "variant_int": {
        "prefix": "variant_int",
        "body": "variant_int(${1:variant})$0"
    },
    "variant_mod": {
        "prefix": "variant_mod",
        "body": "variant_mod(${1:left}, ${2:right})$0"
    },
    "variant_mul": {
        "prefix": "variant_mul",
        "body": "variant_mul(${1:left}, ${2:right})$0"
    },
    "variant_neg": {
        "prefix": "variant_neg",
        "body": "variant_neg(${1:variant})$0"
    },
    "variant_not": {
        "prefix": "variant_not",
        "body": "variant_not(${1:variant})$0"
    },
    "variant_or": {
        "prefix": "variant_or",
        "body": "variant_or(${1:left}, ${2:right})$0"
    },
    "variant_pow": {
        "prefix": "variant_pow",
        "body": "variant_pow(${1:left}, ${2:right})$0"
    },
    "variant_round": {
        "prefix": "variant_round",
        "body": "variant_round(${1:variant}, ${2:decimals})$0"
    },
    "variant_set": {
        "prefix": "variant_set",
        "body": "variant_set(${1:variant}, ${2:value})$0"
    },
    "variant_set_type": {
        "prefix": "variant_set_type",
        "body": "variant_set_type(${1:variant}, ${2:type})$0"
    },
    "variant_sub": {
        "prefix": "variant_sub",
        "body": "variant_sub(${1:left}, ${2:right})$0"
    },
    "variant_xor": {
        "prefix": "variant_xor",
        "body": "variant_xor(${1:left}, ${2:right})$0"
    },
    "version_compare": {
        "prefix": "version_compare",
        "body": "version_compare(${1:version1}, ${2:version2})$0"
    },
    "vfprintf": {
        "prefix": "vfprintf",
        "body": "vfprintf(${1:handle}, ${2:format}, ${3:args})$0"
    },
    "virtual": {
        "prefix": "virtual",
        "body": "virtual(${1:filename})$0"
    },
    "vpopmail_add_alias_domain": {
        "prefix": "vpopmail_add_alias_domain",
        "body": "vpopmail_add_alias_domain(${1:domain}, ${2:aliasdomain})$0"
    },
    "vpopmail_add_alias_domain_ex": {
        "prefix": "vpopmail_add_alias_domain_ex",
        "body": "vpopmail_add_alias_domain_ex(${1:olddomain}, ${2:newdomain})$0"
    },
    "vpopmail_add_domain": {
        "prefix": "vpopmail_add_domain",
        "body": "vpopmail_add_domain(${1:domain}, ${2:dir}, ${3:uid}, ${4:gid})$0"
    },
    "vpopmail_add_domain_ex": {
        "prefix": "vpopmail_add_domain_ex",
        "body": "vpopmail_add_domain_ex(${1:domain}, ${2:passwd})$0"
    },
    "vpopmail_add_user": {
        "prefix": "vpopmail_add_user",
        "body": "vpopmail_add_user(${1:user}, ${2:domain}, ${3:password})$0"
    },
    "vpopmail_alias_add": {
        "prefix": "vpopmail_alias_add",
        "body": "vpopmail_alias_add(${1:user}, ${2:domain}, ${3:alias})$0"
    },
    "vpopmail_alias_del": {
        "prefix": "vpopmail_alias_del",
        "body": "vpopmail_alias_del(${1:user}, ${2:domain})$0"
    },
    "vpopmail_alias_del_domain": {
        "prefix": "vpopmail_alias_del_domain",
        "body": "vpopmail_alias_del_domain(${1:domain})$0"
    },
    "vpopmail_alias_get": {
        "prefix": "vpopmail_alias_get",
        "body": "vpopmail_alias_get(${1:alias}, ${2:domain})$0"
    },
    "vpopmail_alias_get_all": {
        "prefix": "vpopmail_alias_get_all",
        "body": "vpopmail_alias_get_all(${1:domain})$0"
    },
    "vpopmail_auth_user": {
        "prefix": "vpopmail_auth_user",
        "body": "vpopmail_auth_user(${1:user}, ${2:domain}, ${3:password})$0"
    },
    "vpopmail_del_domain": {
        "prefix": "vpopmail_del_domain",
        "body": "vpopmail_del_domain(${1:domain})$0"
    },
    "vpopmail_del_domain_ex": {
        "prefix": "vpopmail_del_domain_ex",
        "body": "vpopmail_del_domain_ex(${1:domain})$0"
    },
    "vpopmail_del_user": {
        "prefix": "vpopmail_del_user",
        "body": "vpopmail_del_user(${1:user}, ${2:domain})$0"
    },
    "vpopmail_error": {
        "prefix": "vpopmail_error",
        "body": "vpopmail_error()$0"
    },
    "vpopmail_passwd": {
        "prefix": "vpopmail_passwd",
        "body": "vpopmail_passwd(${1:user}, ${2:domain}, ${3:password})$0"
    },
    "vpopmail_set_user_quota": {
        "prefix": "vpopmail_set_user_quota",
        "body": "vpopmail_set_user_quota(${1:user}, ${2:domain}, ${3:quota})$0"
    },
    "vprintf": {
        "prefix": "vprintf",
        "body": "vprintf(${1:format}, ${2:args})$0"
    },
    "vsprintf": {
        "prefix": "vsprintf",
        "body": "vsprintf(${1:format}, ${2:args})$0"
    },
    "w32api_deftype": {
        "prefix": "w32api_deftype",
        "body": "w32api_deftype(${1:typename}, ${2:member1_type}, ${3:member1_name})$0"
    },
    "w32api_init_dtype": {
        "prefix": "w32api_init_dtype",
        "body": "w32api_init_dtype(${1:typename}, ${2:value})$0"
    },
    "w32api_invoke_function": {
        "prefix": "w32api_invoke_function",
        "body": "w32api_invoke_function(${1:funcname}, ${2:argument})$0"
    },
    "w32api_register_function": {
        "prefix": "w32api_register_function",
        "body": "w32api_register_function(${1:library}, ${2:function_name}, ${3:return_type})$0"
    },
    "w32api_set_call_method": {
        "prefix": "w32api_set_call_method",
        "body": "w32api_set_call_method(${1:method})$0"
    },
    "wddx_add_vars": {
        "prefix": "wddx_add_vars",
        "body": "wddx_add_vars(${1:packet_id}, ${2:var_name})$0"
    },
    "wddx_deserialize": {
        "prefix": "wddx_deserialize",
        "body": "wddx_deserialize()$0"
    },
    "wddx_packet_end": {
        "prefix": "wddx_packet_end",
        "body": "wddx_packet_end(${1:packet_id})$0"
    },
    "wddx_packet_start": {
        "prefix": "wddx_packet_start",
        "body": "wddx_packet_start()$0"
    },
    "wddx_serialize_value": {
        "prefix": "wddx_serialize_value",
        "body": "wddx_serialize_value(${1:var})$0"
    },
    "wddx_serialize_vars": {
        "prefix": "wddx_serialize_vars",
        "body": "wddx_serialize_vars(${1:var_name})$0"
    },
    "wddx_unserialize": {
        "prefix": "wddx_unserialize",
        "body": "wddx_unserialize(${1:packet})$0"
    },
    "win32_continue_service": {
        "prefix": "win32_continue_service",
        "body": "win32_continue_service(${1:servicename})$0"
    },
    "win32_create_service": {
        "prefix": "win32_create_service",
        "body": "win32_create_service(${1:details})$0"
    },
    "win32_delete_service": {
        "prefix": "win32_delete_service",
        "body": "win32_delete_service(${1:servicename})$0"
    },
    "win32_get_last_control_message": {
        "prefix": "win32_get_last_control_message",
        "body": "win32_get_last_control_message()$0"
    },
    "win32_pause_service": {
        "prefix": "win32_pause_service",
        "body": "win32_pause_service(${1:servicename})$0"
    },
    "win32_ps_list_procs": {
        "prefix": "win32_ps_list_procs",
        "body": "win32_ps_list_procs()$0"
    },
    "win32_ps_stat_mem": {
        "prefix": "win32_ps_stat_mem",
        "body": "win32_ps_stat_mem()$0"
    },
    "win32_ps_stat_proc": {
        "prefix": "win32_ps_stat_proc",
        "body": "win32_ps_stat_proc()$0"
    },
    "win32_query_service_status": {
        "prefix": "win32_query_service_status",
        "body": "win32_query_service_status(${1:servicename})$0"
    },
    "win32_set_service_status": {
        "prefix": "win32_set_service_status",
        "body": "win32_set_service_status(${1:status})$0"
    },
    "win32_start_service": {
        "prefix": "win32_start_service",
        "body": "win32_start_service(${1:servicename})$0"
    },
    "win32_start_service_ctrl_dispatcher": {
        "prefix": "win32_start_service_ctrl_dispatcher",
        "body": "win32_start_service_ctrl_dispatcher(${1:name})$0"
    },
    "win32_stop_service": {
        "prefix": "win32_stop_service",
        "body": "win32_stop_service(${1:servicename})$0"
    },
    "wincache_fcache_fileinfo": {
        "prefix": "wincache_fcache_fileinfo",
        "body": "wincache_fcache_fileinfo()$0"
    },
    "wincache_fcache_meminfo": {
        "prefix": "wincache_fcache_meminfo",
        "body": "wincache_fcache_meminfo()$0"
    },
    "wincache_lock": {
        "prefix": "wincache_lock",
        "body": "wincache_lock(${1:key})$0"
    },
    "wincache_ocache_fileinfo": {
        "prefix": "wincache_ocache_fileinfo",
        "body": "wincache_ocache_fileinfo()$0"
    },
    "wincache_ocache_meminfo": {
        "prefix": "wincache_ocache_meminfo",
        "body": "wincache_ocache_meminfo()$0"
    },
    "wincache_refresh_if_changed": {
        "prefix": "wincache_refresh_if_changed",
        "body": "wincache_refresh_if_changed()$0"
    },
    "wincache_rplist_fileinfo": {
        "prefix": "wincache_rplist_fileinfo",
        "body": "wincache_rplist_fileinfo()$0"
    },
    "wincache_rplist_meminfo": {
        "prefix": "wincache_rplist_meminfo",
        "body": "wincache_rplist_meminfo()$0"
    },
    "wincache_scache_info": {
        "prefix": "wincache_scache_info",
        "body": "wincache_scache_info()$0"
    },
    "wincache_scache_meminfo": {
        "prefix": "wincache_scache_meminfo",
        "body": "wincache_scache_meminfo()$0"
    },
    "wincache_ucache_add": {
        "prefix": "wincache_ucache_add",
        "body": "wincache_ucache_add(${1:key}, ${2:value})$0"
    },
    "wincache_ucache_cas": {
        "prefix": "wincache_ucache_cas",
        "body": "wincache_ucache_cas(${1:key}, ${2:old_value}, ${3:new_value})$0"
    },
    "wincache_ucache_clear": {
        "prefix": "wincache_ucache_clear",
        "body": "wincache_ucache_clear()$0"
    },
    "wincache_ucache_dec": {
        "prefix": "wincache_ucache_dec",
        "body": "wincache_ucache_dec(${1:key})$0"
    },
    "wincache_ucache_delete": {
        "prefix": "wincache_ucache_delete",
        "body": "wincache_ucache_delete(${1:key})$0"
    },
    "wincache_ucache_exists": {
        "prefix": "wincache_ucache_exists",
        "body": "wincache_ucache_exists(${1:key})$0"
    },
    "wincache_ucache_get": {
        "prefix": "wincache_ucache_get",
        "body": "wincache_ucache_get(${1:key})$0"
    },
    "wincache_ucache_inc": {
        "prefix": "wincache_ucache_inc",
        "body": "wincache_ucache_inc(${1:key})$0"
    },
    "wincache_ucache_info": {
        "prefix": "wincache_ucache_info",
        "body": "wincache_ucache_info()$0"
    },
    "wincache_ucache_meminfo": {
        "prefix": "wincache_ucache_meminfo",
        "body": "wincache_ucache_meminfo()$0"
    },
    "wincache_ucache_set": {
        "prefix": "wincache_ucache_set",
        "body": "wincache_ucache_set(${1:key}, ${2:value})$0"
    },
    "wincache_unlock": {
        "prefix": "wincache_unlock",
        "body": "wincache_unlock(${1:key})$0"
    },
    "wordwrap": {
        "prefix": "wordwrap",
        "body": "wordwrap(${1:str})$0"
    },
    "xattr_get": {
        "prefix": "xattr_get",
        "body": "xattr_get(${1:filename}, ${2:name})$0"
    },
    "xattr_list": {
        "prefix": "xattr_list",
        "body": "xattr_list(${1:filename})$0"
    },
    "xattr_remove": {
        "prefix": "xattr_remove",
        "body": "xattr_remove(${1:filename}, ${2:name})$0"
    },
    "xattr_set": {
        "prefix": "xattr_set",
        "body": "xattr_set(${1:filename}, ${2:name}, ${3:value})$0"
    },
    "xattr_supported": {
        "prefix": "xattr_supported",
        "body": "xattr_supported(${1:filename})$0"
    },
    "xdiff_file_bdiff": {
        "prefix": "xdiff_file_bdiff",
        "body": "xdiff_file_bdiff(${1:old_file}, ${2:new_file}, ${3:dest})$0"
    },
    "xdiff_file_bdiff_size": {
        "prefix": "xdiff_file_bdiff_size",
        "body": "xdiff_file_bdiff_size(${1:file})$0"
    },
    "xdiff_file_bpatch": {
        "prefix": "xdiff_file_bpatch",
        "body": "xdiff_file_bpatch(${1:file}, ${2:patch}, ${3:dest})$0"
    },
    "xdiff_file_diff": {
        "prefix": "xdiff_file_diff",
        "body": "xdiff_file_diff(${1:old_file}, ${2:new_file}, ${3:dest})$0"
    },
    "xdiff_file_diff_binary": {
        "prefix": "xdiff_file_diff_binary",
        "body": "xdiff_file_diff_binary(${1:old_file}, ${2:new_file}, ${3:dest})$0"
    },
    "xdiff_file_merge3": {
        "prefix": "xdiff_file_merge3",
        "body": "xdiff_file_merge3(${1:old_file}, ${2:new_file1}, ${3:new_file2}, ${4:dest})$0"
    },
    "xdiff_file_patch": {
        "prefix": "xdiff_file_patch",
        "body": "xdiff_file_patch(${1:file}, ${2:patch}, ${3:dest})$0"
    },
    "xdiff_file_patch_binary": {
        "prefix": "xdiff_file_patch_binary",
        "body": "xdiff_file_patch_binary(${1:file}, ${2:patch}, ${3:dest})$0"
    },
    "xdiff_file_rabdiff": {
        "prefix": "xdiff_file_rabdiff",
        "body": "xdiff_file_rabdiff(${1:old_file}, ${2:new_file}, ${3:dest})$0"
    },
    "xdiff_string_bdiff": {
        "prefix": "xdiff_string_bdiff",
        "body": "xdiff_string_bdiff(${1:old_data}, ${2:new_data})$0"
    },
    "xdiff_string_bdiff_size": {
        "prefix": "xdiff_string_bdiff_size",
        "body": "xdiff_string_bdiff_size(${1:patch})$0"
    },
    "xdiff_string_bpatch": {
        "prefix": "xdiff_string_bpatch",
        "body": "xdiff_string_bpatch(${1:str}, ${2:patch})$0"
    },
    "xdiff_string_diff": {
        "prefix": "xdiff_string_diff",
        "body": "xdiff_string_diff(${1:old_data}, ${2:new_data})$0"
    },
    "xdiff_string_diff_binary": {
        "prefix": "xdiff_string_diff_binary",
        "body": "xdiff_string_diff_binary(${1:old_data}, ${2:new_data})$0"
    },
    "xdiff_string_merge3": {
        "prefix": "xdiff_string_merge3",
        "body": "xdiff_string_merge3(${1:old_data}, ${2:new_data1}, ${3:new_data2})$0"
    },
    "xdiff_string_patch": {
        "prefix": "xdiff_string_patch",
        "body": "xdiff_string_patch(${1:str}, ${2:patch})$0"
    },
    "xdiff_string_patch_binary": {
        "prefix": "xdiff_string_patch_binary",
        "body": "xdiff_string_patch_binary(${1:str}, ${2:patch})$0"
    },
    "xdiff_string_rabdiff": {
        "prefix": "xdiff_string_rabdiff",
        "body": "xdiff_string_rabdiff(${1:old_data}, ${2:new_data})$0"
    },
    "xml_error_string": {
        "prefix": "xml_error_string",
        "body": "xml_error_string(${1:code})$0"
    },
    "xml_get_current_byte_index": {
        "prefix": "xml_get_current_byte_index",
        "body": "xml_get_current_byte_index(${1:parser})$0"
    },
    "xml_get_current_column_number": {
        "prefix": "xml_get_current_column_number",
        "body": "xml_get_current_column_number(${1:parser})$0"
    },
    "xml_get_current_line_number": {
        "prefix": "xml_get_current_line_number",
        "body": "xml_get_current_line_number(${1:parser})$0"
    },
    "xml_get_error_code": {
        "prefix": "xml_get_error_code",
        "body": "xml_get_error_code(${1:parser})$0"
    },
    "xml_parse": {
        "prefix": "xml_parse",
        "body": "xml_parse(${1:parser}, ${2:data})$0"
    },
    "xml_parse_into_struct": {
        "prefix": "xml_parse_into_struct",
        "body": "xml_parse_into_struct(${1:parser}, ${2:data}, ${3:values})$0"
    },
    "xml_parser_create": {
        "prefix": "xml_parser_create",
        "body": "xml_parser_create()$0"
    },
    "xml_parser_create_ns": {
        "prefix": "xml_parser_create_ns",
        "body": "xml_parser_create_ns()$0"
    },
    "xml_parser_free": {
        "prefix": "xml_parser_free",
        "body": "xml_parser_free(${1:parser})$0"
    },
    "xml_parser_get_option": {
        "prefix": "xml_parser_get_option",
        "body": "xml_parser_get_option(${1:parser}, ${2:option})$0"
    },
    "xml_parser_set_option": {
        "prefix": "xml_parser_set_option",
        "body": "xml_parser_set_option(${1:parser}, ${2:option}, ${3:value})$0"
    },
    "xml_set_character_data_handler": {
        "prefix": "xml_set_character_data_handler",
        "body": "xml_set_character_data_handler(${1:parser}, ${2:handler})$0"
    },
    "xml_set_default_handler": {
        "prefix": "xml_set_default_handler",
        "body": "xml_set_default_handler(${1:parser}, ${2:handler})$0"
    },
    "xml_set_element_handler": {
        "prefix": "xml_set_element_handler",
        "body": "xml_set_element_handler(${1:parser}, ${2:start_element_handler}, ${3:end_element_handler})$0"
    },
    "xml_set_end_namespace_decl_handler": {
        "prefix": "xml_set_end_namespace_decl_handler",
        "body": "xml_set_end_namespace_decl_handler(${1:parser}, ${2:handler})$0"
    },
    "xml_set_external_entity_ref_handler": {
        "prefix": "xml_set_external_entity_ref_handler",
        "body": "xml_set_external_entity_ref_handler(${1:parser}, ${2:handler})$0"
    },
    "xml_set_notation_decl_handler": {
        "prefix": "xml_set_notation_decl_handler",
        "body": "xml_set_notation_decl_handler(${1:parser}, ${2:handler})$0"
    },
    "xml_set_object": {
        "prefix": "xml_set_object",
        "body": "xml_set_object(${1:parser}, ${2:object})$0"
    },
    "xml_set_processing_instruction_handler": {
        "prefix": "xml_set_processing_instruction_handler",
        "body": "xml_set_processing_instruction_handler(${1:parser}, ${2:handler})$0"
    },
    "xml_set_start_namespace_decl_handler": {
        "prefix": "xml_set_start_namespace_decl_handler",
        "body": "xml_set_start_namespace_decl_handler(${1:parser}, ${2:handler})$0"
    },
    "xml_set_unparsed_entity_decl_handler": {
        "prefix": "xml_set_unparsed_entity_decl_handler",
        "body": "xml_set_unparsed_entity_decl_handler(${1:parser}, ${2:handler})$0"
    },
    "xmlrpc_decode": {
        "prefix": "xmlrpc_decode",
        "body": "xmlrpc_decode(${1:xml})$0"
    },
    "xmlrpc_decode_request": {
        "prefix": "xmlrpc_decode_request",
        "body": "xmlrpc_decode_request(${1:xml}, ${2:method})$0"
    },
    "xmlrpc_encode": {
        "prefix": "xmlrpc_encode",
        "body": "xmlrpc_encode(${1:value})$0"
    },
    "xmlrpc_encode_request": {
        "prefix": "xmlrpc_encode_request",
        "body": "xmlrpc_encode_request(${1:method}, ${2:params})$0"
    },
    "xmlrpc_get_type": {
        "prefix": "xmlrpc_get_type",
        "body": "xmlrpc_get_type(${1:value})$0"
    },
    "xmlrpc_is_fault": {
        "prefix": "xmlrpc_is_fault",
        "body": "xmlrpc_is_fault(${1:arg})$0"
    },
    "xmlrpc_parse_method_descriptions": {
        "prefix": "xmlrpc_parse_method_descriptions",
        "body": "xmlrpc_parse_method_descriptions(${1:xml})$0"
    },
    "xmlrpc_server_add_introspection_data": {
        "prefix": "xmlrpc_server_add_introspection_data",
        "body": "xmlrpc_server_add_introspection_data(${1:server}, ${2:desc})$0"
    },
    "xmlrpc_server_call_method": {
        "prefix": "xmlrpc_server_call_method",
        "body": "xmlrpc_server_call_method(${1:server}, ${2:xml}, ${3:user_data})$0"
    },
    "xmlrpc_server_create": {
        "prefix": "xmlrpc_server_create",
        "body": "xmlrpc_server_create()$0"
    },
    "xmlrpc_server_destroy": {
        "prefix": "xmlrpc_server_destroy",
        "body": "xmlrpc_server_destroy(${1:server})$0"
    },
    "xmlrpc_server_register_introspection_callback": {
        "prefix": "xmlrpc_server_register_introspection_callback",
        "body": "xmlrpc_server_register_introspection_callback(${1:server}, ${2:function})$0"
    },
    "xmlrpc_server_register_method": {
        "prefix": "xmlrpc_server_register_method",
        "body": "xmlrpc_server_register_method(${1:server}, ${2:method_name}, ${3:function})$0"
    },
    "xmlrpc_set_type": {
        "prefix": "xmlrpc_set_type",
        "body": "xmlrpc_set_type(${1:value}, ${2:type})$0"
    },
    "xpath_eval": {
        "prefix": "xpath_eval",
        "body": "xpath_eval(${1:xpath_expression})$0"
    },
    "xpath_eval_expression": {
        "prefix": "xpath_eval_expression",
        "body": "xpath_eval_expression(${1:expression})$0"
    },
    "xpath_new_context": {
        "prefix": "xpath_new_context",
        "body": "xpath_new_context(${1:dom_document})$0"
    },
    "xpath_register_ns": {
        "prefix": "xpath_register_ns",
        "body": "xpath_register_ns(${1:xpath_context}, ${2:prefix}, ${3:uri})$0"
    },
    "xpath_register_ns_auto": {
        "prefix": "xpath_register_ns_auto",
        "body": "xpath_register_ns_auto(${1:xpath_context})$0"
    },
    "xptr_eval": {
        "prefix": "xptr_eval",
        "body": "xptr_eval(${1:eval_str})$0"
    },
    "xptr_new_context": {
        "prefix": "xptr_new_context",
        "body": "xptr_new_context()$0"
    },
    "xslt_backend_info": {
        "prefix": "xslt_backend_info",
        "body": "xslt_backend_info()$0"
    },
    "xslt_backend_name": {
        "prefix": "xslt_backend_name",
        "body": "xslt_backend_name()$0"
    },
    "xslt_backend_version": {
        "prefix": "xslt_backend_version",
        "body": "xslt_backend_version()$0"
    },
    "xslt_create": {
        "prefix": "xslt_create",
        "body": "xslt_create()$0"
    },
    "xslt_errno": {
        "prefix": "xslt_errno",
        "body": "xslt_errno(${1:xh})$0"
    },
    "xslt_error": {
        "prefix": "xslt_error",
        "body": "xslt_error(${1:xh})$0"
    },
    "xslt_free": {
        "prefix": "xslt_free",
        "body": "xslt_free(${1:xh})$0"
    },
    "xslt_getopt": {
        "prefix": "xslt_getopt",
        "body": "xslt_getopt(${1:processor})$0"
    },
    "xslt_process": {
        "prefix": "xslt_process",
        "body": "xslt_process(${1:xh}, ${2:xmlcontainer}, ${3:xslcontainer})$0"
    },
    "xslt_set_base": {
        "prefix": "xslt_set_base",
        "body": "xslt_set_base(${1:xh}, ${2:uri})$0"
    },
    "xslt_set_encoding": {
        "prefix": "xslt_set_encoding",
        "body": "xslt_set_encoding(${1:xh}, ${2:encoding})$0"
    },
    "xslt_set_error_handler": {
        "prefix": "xslt_set_error_handler",
        "body": "xslt_set_error_handler(${1:xh}, ${2:handler})$0"
    },
    "xslt_set_log": {
        "prefix": "xslt_set_log",
        "body": "xslt_set_log(${1:xh})$0"
    },
    "xslt_set_object": {
        "prefix": "xslt_set_object",
        "body": "xslt_set_object(${1:processor}, ${2:obj})$0"
    },
    "xslt_set_sax_handler": {
        "prefix": "xslt_set_sax_handler",
        "body": "xslt_set_sax_handler(${1:xh}, ${2:handlers})$0"
    },
    "xslt_set_sax_handlers": {
        "prefix": "xslt_set_sax_handlers",
        "body": "xslt_set_sax_handlers(${1:processor}, ${2:handlers})$0"
    },
    "xslt_set_scheme_handler": {
        "prefix": "xslt_set_scheme_handler",
        "body": "xslt_set_scheme_handler(${1:xh}, ${2:handlers})$0"
    },
    "xslt_set_scheme_handlers": {
        "prefix": "xslt_set_scheme_handlers",
        "body": "xslt_set_scheme_handlers(${1:xh}, ${2:handlers})$0"
    },
    "xslt_setopt": {
        "prefix": "xslt_setopt",
        "body": "xslt_setopt(${1:processor}, ${2:newmask})$0"
    },
    "yaml_emit": {
        "prefix": "yaml_emit",
        "body": "yaml_emit(${1:data})$0"
    },
    "yaml_emit_file": {
        "prefix": "yaml_emit_file",
        "body": "yaml_emit_file(${1:filename}, ${2:data})$0"
    },
    "yaml_parse": {
        "prefix": "yaml_parse",
        "body": "yaml_parse(${1:input})$0"
    },
    "yaml_parse_file": {
        "prefix": "yaml_parse_file",
        "body": "yaml_parse_file(${1:filename})$0"
    },
    "yaml_parse_url": {
        "prefix": "yaml_parse_url",
        "body": "yaml_parse_url(${1:url})$0"
    },
    "yaz_addinfo": {
        "prefix": "yaz_addinfo",
        "body": "yaz_addinfo(${1:id})$0"
    },
    "yaz_ccl_conf": {
        "prefix": "yaz_ccl_conf",
        "body": "yaz_ccl_conf(${1:id}, ${2:config})$0"
    },
    "yaz_ccl_parse": {
        "prefix": "yaz_ccl_parse",
        "body": "yaz_ccl_parse(${1:id}, ${2:query}, ${3:result})$0"
    },
    "yaz_close": {
        "prefix": "yaz_close",
        "body": "yaz_close(${1:id})$0"
    },
    "yaz_connect": {
        "prefix": "yaz_connect",
        "body": "yaz_connect(${1:zurl})$0"
    },
    "yaz_database": {
        "prefix": "yaz_database",
        "body": "yaz_database(${1:id}, ${2:databases})$0"
    },
    "yaz_element": {
        "prefix": "yaz_element",
        "body": "yaz_element(${1:id}, ${2:elementset})$0"
    },
    "yaz_errno": {
        "prefix": "yaz_errno",
        "body": "yaz_errno(${1:id})$0"
    },
    "yaz_error": {
        "prefix": "yaz_error",
        "body": "yaz_error(${1:id})$0"
    },
    "yaz_es": {
        "prefix": "yaz_es",
        "body": "yaz_es(${1:id}, ${2:type}, ${3:args})$0"
    },
    "yaz_es_result": {
        "prefix": "yaz_es_result",
        "body": "yaz_es_result(${1:id})$0"
    },
    "yaz_get_option": {
        "prefix": "yaz_get_option",
        "body": "yaz_get_option(${1:id}, ${2:name})$0"
    },
    "yaz_hits": {
        "prefix": "yaz_hits",
        "body": "yaz_hits(${1:id})$0"
    },
    "yaz_itemorder": {
        "prefix": "yaz_itemorder",
        "body": "yaz_itemorder(${1:id}, ${2:args})$0"
    },
    "yaz_present": {
        "prefix": "yaz_present",
        "body": "yaz_present(${1:id})$0"
    },
    "yaz_range": {
        "prefix": "yaz_range",
        "body": "yaz_range(${1:id}, ${2:start}, ${3:number})$0"
    },
    "yaz_record": {
        "prefix": "yaz_record",
        "body": "yaz_record(${1:id}, ${2:pos}, ${3:type})$0"
    },
    "yaz_scan": {
        "prefix": "yaz_scan",
        "body": "yaz_scan(${1:id}, ${2:type}, ${3:startterm})$0"
    },
    "yaz_scan_result": {
        "prefix": "yaz_scan_result",
        "body": "yaz_scan_result(${1:id})$0"
    },
    "yaz_schema": {
        "prefix": "yaz_schema",
        "body": "yaz_schema(${1:id}, ${2:schema})$0"
    },
    "yaz_search": {
        "prefix": "yaz_search",
        "body": "yaz_search(${1:id}, ${2:type}, ${3:query})$0"
    },
    "yaz_set_option": {
        "prefix": "yaz_set_option",
        "body": "yaz_set_option(${1:id}, ${2:name}, ${3:value})$0"
    },
    "yaz_sort": {
        "prefix": "yaz_sort",
        "body": "yaz_sort(${1:id}, ${2:criteria})$0"
    },
    "yaz_syntax": {
        "prefix": "yaz_syntax",
        "body": "yaz_syntax(${1:id}, ${2:syntax})$0"
    },
    "yaz_wait": {
        "prefix": "yaz_wait",
        "body": "yaz_wait()$0"
    },
    "yp_all": {
        "prefix": "yp_all",
        "body": "yp_all(${1:domain}, ${2:map}, ${3:callback})$0"
    },
    "yp_cat": {
        "prefix": "yp_cat",
        "body": "yp_cat(${1:domain}, ${2:map})$0"
    },
    "yp_err_string": {
        "prefix": "yp_err_string",
        "body": "yp_err_string(${1:errorcode})$0"
    },
    "yp_errno": {
        "prefix": "yp_errno",
        "body": "yp_errno()$0"
    },
    "yp_first": {
        "prefix": "yp_first",
        "body": "yp_first(${1:domain}, ${2:map})$0"
    },
    "yp_get_default_domain": {
        "prefix": "yp_get_default_domain",
        "body": "yp_get_default_domain()$0"
    },
    "yp_master": {
        "prefix": "yp_master",
        "body": "yp_master(${1:domain}, ${2:map})$0"
    },
    "yp_match": {
        "prefix": "yp_match",
        "body": "yp_match(${1:domain}, ${2:map}, ${3:key})$0"
    },
    "yp_next": {
        "prefix": "yp_next",
        "body": "yp_next(${1:domain}, ${2:map}, ${3:key})$0"
    },
    "yp_order": {
        "prefix": "yp_order",
        "body": "yp_order(${1:domain}, ${2:map})$0"
    },
    "zend_logo_guid": {
        "prefix": "zend_logo_guid",
        "body": "zend_logo_guid()$0"
    },
    "zend_thread_id": {
        "prefix": "zend_thread_id",
        "body": "zend_thread_id()$0"
    },
    "zend_version": {
        "prefix": "zend_version",
        "body": "zend_version()$0"
    },
    "zip_close": {
        "prefix": "zip_close",
        "body": "zip_close(${1:zip})$0"
    },
    "zip_entry_close": {
        "prefix": "zip_entry_close",
        "body": "zip_entry_close(${1:zip_entry})$0"
    },
    "zip_entry_compressedsize": {
        "prefix": "zip_entry_compressedsize",
        "body": "zip_entry_compressedsize(${1:zip_entry})$0"
    },
    "zip_entry_compressionmethod": {
        "prefix": "zip_entry_compressionmethod",
        "body": "zip_entry_compressionmethod(${1:zip_entry})$0"
    },
    "zip_entry_filesize": {
        "prefix": "zip_entry_filesize",
        "body": "zip_entry_filesize(${1:zip_entry})$0"
    },
    "zip_entry_name": {
        "prefix": "zip_entry_name",
        "body": "zip_entry_name(${1:zip_entry})$0"
    },
    "zip_entry_open": {
        "prefix": "zip_entry_open",
        "body": "zip_entry_open(${1:zip}, ${2:zip_entry})$0"
    },
    "zip_entry_read": {
        "prefix": "zip_entry_read",
        "body": "zip_entry_read(${1:zip_entry})$0"
    },
    "zip_open": {
        "prefix": "zip_open",
        "body": "zip_open(${1:filename})$0"
    },
    "zip_read": {
        "prefix": "zip_read",
        "body": "zip_read(${1:zip})$0"
    },
    "zlib_get_coding_type": {
        "prefix": "zlib_get_coding_type",
        "body": "zlib_get_coding_type()$0"
    }	
}